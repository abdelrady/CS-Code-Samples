<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTNClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABHBJREFUSEvVln1Q
        03Ucx38DhQCHwBh7ZI+M/TbYGCI2YYKgbXHKoyB5gBpnKhwK6lki5AR5iHiIK0ytrqQzEy/jOjoZpXK5
        gsbQDRkMJZIGlqg8DRCI4NNmdefD4Bb2T9+/fne/9/vzuvfn8/3+fl8E+b+vufJyB0hIsH2UY25uzm3i
        4oWykZOlyqGTFYqhU++mN5XXOCwmpDE7Gx3JP5TTkRzf3PDiiq+ricSVyLS+TWA8+4F26q2DMCbPgKmK
        IzBZVQSDJW8q+1/fH2QtyLB3t+9oWcFHD4pzp1uT46GKzzmXiMUG8RHEDrld91XaQN4BMOakwYPSHBg8
        XgzD7xXCTNUxGDqyd7x/d8pBuRxs5oP9uEfu/Nv+9Dxj0aGxicJs+OKltdfjbW03PK3HnE7eslWdtbNr
        +J18mPqkEkaPF8FQaS6MHd0D4+kJ0Ldp/eeqlBTc08be1KR1A9tj1HNZSaBJiIASFqPKpCHPmz6cySSc
        3xxT2Ja5c/BhSTaM5WfB/YxX4F5CCIzLBGCQ8Jp0wcG0RzO8eMv+dmTY0YEQ7tRkOAoKf6+7rzku22F6
        NW/iJ8A7yGRRnSz0M33iy7PGxFAYCEPhjh8O7qGO0C4gtN6Ikm24ESZS9Pi4wk+0JXCW5KyV2tqHWTu7
        J3TFVGpso5DZekfgDn3spdDuaQNtNFtQcV1Bw7SDRgIGKtyxl8gIlrsowD8mFEFwHxKwx76j2g+0UDCg
        JCGgJCDQSMLA23hsDYI4EZ4L8Lj5SiD6bbPnElCa0nxPtQGlCdiAEs/8J4ARebmbTiauVQs8QM13A7WA
        CFofPHRynUDDcoBmAS33uUCGw4cp+gjx1U4BDrQiAuhDeHCCRal/n0Yp0K1kzhiErnDNC/uHUsRZvyiQ
        Yd8+SldUqOqm0B00fBe4FcyBMzyGmoDYM80FP+YyU3Vi9lS/yB1a+AT9l4GBz5yhBcHDmZku+rh1yu7V
        DLjOc4EufwJc8Kb0SpY6BjxurOYwtulWsWf6AojQJKRXWp3G/Pm4GS8937OWBxo/PHSIPEDBwU9sX7Y8
        zlKRWoFXVo+YBR1CwnQ9yl5tFejnLdFv9MpEoPUnQptpDipfAsjxuIKFzJf9OJX3VxChBXVXyBH5wie+
        PzXF/5fYNeP6ICZoTC3SiYjwKd1DZQK4LQQRI1SHa76UqwbUGRpYxIh5tYAgmL6kqNq7cUGgk3hBewAZ
        LvOIk7uWu8Va04LTbE8fPYobVXnjvzHpMRY9XVIp2rctatywaQ10hqLQEUiFGhap0SS2twZi1lzheWW2
        chmz1XS6v0VPT6R04+CuzWBIDIeucB/oWEWDc2zSCWsBZh2fz7dr8WZrFXTKMYu+7khZtDEjGfpTIqBb
        KgS9mA2nmCTL4gXI9UKfuHoG3dyyZzeASiLx7t0aPTacFg+/xojhkoj98FVXV8m/SfK3FlPmSY4yPVu+
        H9QF+Ga0bwz5/YcQ/9k8Csm8bf+6ZSxuWR6+udYBJ6fwVCzW/H9+YXG1Lbv+BINS0z1KjwgCAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>