<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0069)http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html -->
<HTML><HEAD><TITLE></TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1256"><!--Created by TeX4ht from theory-bk-two.tex-->
<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli2.html">next</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose6.html">prev</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose6.html#tailtheory-bk-twose6.html">prev-tail</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#tailtheory-bk-twoli1.html">tail</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-two.html#theory-bk-twoli1.html">up</A>] 

<H3><A name=30007-23000>&nbsp;</A><A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk.html#Q2-30007-23" 
name=Q1-30007-23>Exercises</A></H3><A name=30007-23001r2.1>&nbsp;</A><A 
name=30007-23002r2.2>&nbsp;</A><A name=30007-23003r2.2.1>&nbsp;</A> 
<DL>
  <DT><STRONG>2.2.1 </STRONG>
  <DD>Let P be a program with k instruction segments and a domain of variables 
  of cardinality m. Determine an upper bound on the number of states of P, and 
  an upper bound on the number of possible transitions between these states. <A 
  name=30007-23004r2.2.2>&nbsp;</A> 
  <DT><STRONG>2.2.2 </STRONG>
  <DD>Determine the diagram representation of a finite-state transducer that 
  models the computations of the program in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23005r2.E.1">2.E.1</A>. 

  <HR>

  <CENTER>
  <TABLE>
    <TBODY>
    <TR>
      <TD><A name=30007-23005r2.E.1>&nbsp;</A> 
        <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
          <TBODY>
          <TR>
            <TD><PRE><TT>x</TT> := ?
<B>do</B>
    <B>read</B> <TT>y</TT>
<B>until</B> <TT>y</TT><IMG alt=/= src="theory-bk-twoli1_files/theory-bk-two27x.gif" align=middle> <TT>x</TT>
<B>do</B>
    <TT>y</TT> := <TT>y</TT> + <TT>x</TT>
    <B>write</B> <TT>y</TT>
<B>or</B>
    <B>if</B> <I>eof</I> <B>then accept</B>
    <B>reject</B>
<B>until</B> false            </PRE></TD></TR></TBODY></TABLE><A 
        name=30007-23005r2.E.1>&nbsp;</A> <BR>
        <TABLE>
          <TBODY>
          <TR vAlign=baseline>
            <TD><NOBR><STRONG>Figure 2.E.1</STRONG></NOBR></TD>
            <TD></TD></TR></TBODY></TABLE>
        <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
  <HR>
  Assume that the domain of the variables is {0, 1}, and that 0 is the initial 
  value in the domain. Denote each node in the transition diagram with the 
  corresponding state of the program.<A name=30007-23006r2.2.3>&nbsp;</A> 
  <DT><STRONG>2.2.3 </STRONG>
  <DD>For each of the following relations give a finite-state transducer that 
  computes the relation. 
  <OL type=a>
    <LI><A name=30007-23007xa>&nbsp;</A>{ (x#y, a<SUP>i</SUP>b<SUP>j</SUP>) | x 
    and y are in {a, b}*, i&nbsp;= (number of a's in x), and j&nbsp;= (number of 
    b's in y) } 
    <LI><A name=30007-23008xb>&nbsp;</A>{ (x, c<SUP>i</SUP>) | x is in {a, b}*, 
    and i&nbsp;= (number of appearances of the substring abb's in x) } 
    <LI><A name=30007-23009xc>&nbsp;</A>{ (x, c<SUP>i</SUP>) | x is in {a, b}*, 
    and i&nbsp;= (number of appearances of the substring aba's in x) } 
    <LI><A name=30007-23010xd>&nbsp;</A>{ (1<SUP>i</SUP>, 1<SUP>j</SUP>) | i and 
    j are natural numbers and i <IMG alt=">=" 
    src="theory-bk-twoli1_files/cmsy10-15.gif" align=middle> j } 
    <LI><A name=30007-23011xe>&nbsp;</A>{ (x, a) | x is in {0, 1}*, a is in {0, 
    1}, and a appears at least twice in the string x } 
    <LI><A name=30007-23012xf>&nbsp;</A>{ (xy, a<SUP>i</SUP>b<SUP>j</SUP>) | x 
    and y are in {a, b}*, i&nbsp;= (the number of a's in x), and j&nbsp;= (the 
    number of b's in y) } 
    <LI><A name=30007-23013xg>&nbsp;</A>{ (x, y) | x and y are in {a, b}*, and 
    either x is a substring of y or y is a substring of x } 
    <LI><A name=30007-23014xh>&nbsp;</A>{ (x, y) | x is in {a, b}*, y is a 
    substring of x, and the first and last symbols in y are of distinct values } 

    <LI><A name=30007-23015xi>&nbsp;</A>{ (x, y) | x and y are in {a, b}*, and 
    the substring ab has the same number of appearances in x and y } 
    <LI><A name=30007-23016xj>&nbsp;</A>{ (1<SUP>i</SUP>, 1<SUP>j</SUP>) | i = 
    2j or i = 3j } 
    <LI><A name=30007-23017xk>&nbsp;</A>{ (1<SUP>i</SUP>, 1<SUP>j</SUP>) | i<IMG 
    alt=/= src="theory-bk-twoli1_files/theory-bk-two28x.gif" align=middle> 2j } 
    <LI><A name=30007-23018xl>&nbsp;</A>{ (x, y) | x and y are in {a, b}*, and 
    the number of a's in x differs from the number of b's in y } 
    <LI><A name=30007-23019xm>&nbsp;</A>{ (x, y) | x and y are in {0, 1}*, and 
    (the natural number represented by y)&nbsp;= 3(the natural number 
    represented by x) } 
    <LI><A name=30007-23020xn>&nbsp;</A>{ (<IMG alt="(x1)&#10;y1" 
    src="theory-bk-twoli1_files/theory-bk-two29x.gif" align=middle> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt="(xn)&#10; yn" 
    src="theory-bk-twoli1_files/theory-bk-two30x.gif" align=middle> , 
    z<SUB>1</SUB> <IMG alt=. src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG 
    alt=. src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> z<SUB>n</SUB>) | 
    x<SUB>1</SUB>,&nbsp;. . . ,&nbsp;x<SUB>n</SUB>, y<SUB>1</SUB>,&nbsp;. . . 
    ,&nbsp;y<SUB>n</SUB>, z<SUB>1</SUB>,&nbsp;. . . ,&nbsp;z<SUB>n</SUB> are in 
    {0, 1}, and (the natural number represented by x<SUB>1</SUB> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> x<SUB>n</SUB>)&nbsp;- (the 
    natural number represented by y<SUB>1</SUB> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> y<SUB>n</SUB>)&nbsp;= (the 
    natural number represented by z<SUB>1</SUB> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> <IMG alt=. 
    src="theory-bk-twoli1_files/cmsy10-1.gif"> z<SUB>n</SUB>) }</LI></OL><A 
  name=30007-23021r2.2.4>&nbsp;</A> 
  <DT><STRONG>2.2.4 </STRONG>
  <DD>Let M = &lt;Q, <IMG alt=S src="theory-bk-twoli1_files/cmr10-6.gif">, <IMG 
  alt=D src="theory-bk-twoli1_files/cmr10-1.gif">, <IMG alt=d 
  src="theory-bk-twoli1_files/cmmi10-e.gif">, q<SUB>0</SUB>, F&gt; be the 
  deterministic finite-state transducer whose transition diagram is given in 
  Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23022r2.E.2">2.E.2</A>. 

  <HR>

  <CENTER>
  <TABLE>
    <TBODY>
    <TR>
      <TD><A name=30007-23022r2.E.2>&nbsp;</A> <A 
        name=30007-23022r2.E.2>&nbsp;</A> <BR><IMG alt=[PICT] 
        src="theory-bk-twoli1_files/theory-bk-two-2-E-2.jpg"> <BR>
        <TABLE>
          <TBODY>
          <TR vAlign=baseline>
            <TD><NOBR><STRONG>Figure 2.E.2</STRONG></NOBR></TD>
            <TD></TD></TR></TBODY></TABLE>
        <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
  <HR>
  For each of the following relations find a finite-state transducer that 
  computes the relation. 
  <OL type=a>
    <LI><A name=30007-23023xa>&nbsp;</A>{ (x, y) | x is in L(M), and y is in 
    <IMG alt=D src="theory-bk-twoli1_files/cmr10-1.gif">* }. 
    <LI><A name=30007-23024xb>&nbsp;</A>{ (x, y) | x is in L(M), y is in <IMG 
    alt=D src="theory-bk-twoli1_files/cmr10-1.gif">*, and (x, y) is not in R(M) 
    }.</LI></OL><A name=30007-23025r2.2.5>&nbsp;</A> 
  <DT><STRONG>2.2.5 </STRONG>
  <DD>Show that if a deterministic finite-state transducer M accepts inputs 
  x<SUB>1</SUB> and x<SUB>2</SUB> such that x<SUB>1</SUB> is a prefix of 
  x<SUB>2</SUB>, then on these inputs M outputs y<SUB>1</SUB> and y<SUB>2</SUB>, 
  respectively, such that y<SUB>1</SUB> is a prefix of y<SUB>2</SUB>. <A 
  name=30007-23026r2.2.6>&nbsp;</A> 
  <DT><STRONG>2.2.6 </STRONG>
  <DD>Determine the sequence of configurations in the computation that the 
  finite-state transducer &lt;{q<SUB>0</SUB>, q<SUB>1</SUB>, q<SUB>2</SUB>}, {0, 
  1}, {a, b}, {(q<SUB>0</SUB>, 0, q<SUB>1</SUB>, a), (q<SUB>1</SUB>, 1, 
  q<SUB>0</SUB>, a), (q<SUB>1</SUB>, 1, q<SUB>2</SUB>, <IMG alt=e 
  src="theory-bk-twoli1_files/cmmi10-f.gif">), (q<SUB>2</SUB>, <IMG alt=e 
  src="theory-bk-twoli1_files/cmmi10-f.gif">, q<SUB>1</SUB>, b)}, q<SUB>0</SUB>, 
  {q<SUB>2</SUB>}&gt; has on input 0101. <A name=30007-23027r2.2.7>&nbsp;</A> 
  <DT><STRONG>2.2.7 </STRONG>
  <DD>Modify Example&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose2.html#30002-10002t2.2.16">2.2.16</A> 
  for the case that M is the finite-state transducer whose transition diagram is 
  given in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose2.html#30002-5013r2.2.2">2.2.2</A>. 
  <A name=30007-23028r2.3>&nbsp;</A><A name=30007-23029r2.3.1>&nbsp;</A> 
  <DT><STRONG>2.3.1 </STRONG>
  <DD>For each of the following languages construct a finite-state automaton 
  that accepts the language. 
  <OL type=a>
    <LI><A name=30007-23030xa>&nbsp;</A>{ x | x is in {0, 1}*, and no two 0's 
    are adjacent in x } 
    <LI><A name=30007-23031xb>&nbsp;</A>{ x | x is in {a, b, c}*, and none of 
    the adjacent symbols in x are equal } 
    <LI><A name=30007-23032xc>&nbsp;</A>{ x | x is in {0, 1}*, and each 
    substring of length 3 in x contains at least two 1's } 
    <LI><A name=30007-23033xd>&nbsp;</A>{ 1<SUP>z</SUP> | z = 3x + 5y for some 
    natural numbers x and y } 
    <LI><A name=30007-23034xe>&nbsp;</A>{ x | x is in {a, b}*, and x contains an 
    even number of a's and an even number of b's } 
    <LI><A name=30007-23035xf>&nbsp;</A>{ x | x is in {0, 1}*, and the number of 
    1's between every two 0's in x is even } 
    <LI><A name=30007-23036xg>&nbsp;</A>{ x | x is in {0, 1}*, and the number of 
    1's between every two substrings of the form 00 in x is even } 
    <LI><A name=30007-23037xh>&nbsp;</A>{ x | x is in {0, 1}*, but not in {10, 
    01}* } 
    <LI><A name=30007-23038xi>&nbsp;</A>{ x | x is in {a, b, c}*, and a 
    substring of x is accepted by the finite-state automaton of Figure&nbsp;<A 
    href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose4.html#30004-18005r2.4.1">2.4.1</A> 
    }</LI></OL><A name=30007-23039r2.3.2>&nbsp;</A> 
  <DT><STRONG>2.3.2 </STRONG>
  <DD>Find a deterministic finite-state automaton that is equivalent to the 
  finite-state automaton whose transition diagram is given in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23040r2.E.3">2.E.3</A>. 

  <HR>

  <CENTER>
  <TABLE>
    <TBODY>
    <TR>
      <TD><A name=30007-23040r2.E.3>&nbsp;</A> <A 
        name=30007-23040r2.E.3>&nbsp;</A> <BR><IMG alt=[PICT] 
        src="theory-bk-twoli1_files/theory-bk-two-2-E-3.jpg"> <BR>
        <TABLE>
          <TBODY>
          <TR vAlign=baseline>
            <TD><NOBR><STRONG>Figure 2.E.3</STRONG></NOBR></TD>
            <TD></TD></TR></TBODY></TABLE>
        <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
  <HR>
  <A name=30007-23041r2.3.3>&nbsp;</A> 
  <DT><STRONG>2.3.3 </STRONG>
  <DD>Find a Type 3 grammar that generates the language accepted by the 
  finite-state automaton whose transition diagram is given in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23042r2.E.4">2.E.4</A>. 

  <HR>

  <CENTER>
  <TABLE>
    <TBODY>
    <TR>
      <TD><A name=30007-23042r2.E.4>&nbsp;</A> <A 
        name=30007-23042r2.E.4>&nbsp;</A> <BR><IMG alt=[PICT] 
        src="theory-bk-twoli1_files/theory-bk-two-2-E-4.jpg"> <BR>
        <TABLE>
          <TBODY>
          <TR vAlign=baseline>
            <TD><NOBR><STRONG>Figure 2.E.4</STRONG></NOBR></TD>
            <TD></TD></TR></TBODY></TABLE>
        <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
  <HR>
  <A name=30007-23043r2.3.4>&nbsp;</A> 
  <DT><STRONG>2.3.4 </STRONG>
  <DD>Find a finite-state automaton that accepts the language L(G), for the case 
  that G = &lt;N, <IMG alt=S src="theory-bk-twoli1_files/cmr10-6.gif">, P, S&gt; 
  is the Type 3 grammar whose production rules are listed below. 
  <P>
  <CENTER><PRE><IMG alt="  S  -->   aA&#10;    -->   bB&#10;    -->   b&#10; A  -->   aS&#10;    -->   bC&#10;B   -->   bS&#10;    -->   aC&#10;    -->   bA&#10;C   -->   aB" src="theory-bk-twoli1_files/theory-bk-two31x.gif"></PRE></CENTER><A 
  name=30007-23044r2.3.5>&nbsp;</A> 
  <DT><STRONG>2.3.5 </STRONG>
  <DD>Show that a language is generated by a Type 3 grammar if and only if it is 
  generated by a right-linear grammar, and if and only if it is generated by a 
  left-linear grammar. <A name=30007-23045r2.3.6>&nbsp;</A> 
  <DT><STRONG>2.3.6 </STRONG>
  <DD>Prove that a set is regular if and only if it is accepted by a 
  finite-state automaton. <A name=30007-23046r2.4>&nbsp;</A><A 
  name=30007-23047r2.4.1>&nbsp;</A> 
  <DT><STRONG>2.4.1 </STRONG>
  <DD>Let M be the finite-state automaton whose transition diagram is given in 
  Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23048r2.E.5">2.E.5</A>. 

  <HR>

  <CENTER>
  <TABLE>
    <TBODY>
    <TR>
      <TD><A name=30007-23048r2.E.5>&nbsp;</A> <A 
        name=30007-23048r2.E.5>&nbsp;</A> <BR><IMG alt=[PICT] 
        src="theory-bk-twoli1_files/theory-bk-two-2-E-5.jpg"> <BR>
        <TABLE>
          <TBODY>
          <TR vAlign=baseline>
            <TD><NOBR><STRONG>Figure 2.E.5</STRONG></NOBR></TD>
            <TD></TD></TR></TBODY></TABLE>
        <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
  <HR>
  Using the notation of the proof of the pumping lemma for regular languages 
  (Theorem&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose4.html#30004-18001t2.4.1">2.4.1</A>), 
  what are the possible values of m, x, and y for each w in L(M)? <A 
  name=30007-23049r2.4.2>&nbsp;</A> 
  <DT><STRONG>2.4.2 </STRONG>
  <DD>Use the pumping lemma for regular languages to show that none of the 
  following languages is regular. 
  <OL type=a>
    <LI><A name=30007-23050xa>&nbsp;</A>{ a<SUP>n</SUP>b<SUP>t</SUP> | n &gt; t 
    } 
    <LI><A name=30007-23051xb>&nbsp;</A>{ v | v is in {a, b}*, and v has fewer 
    a's than b's } 
    <LI><A name=30007-23052xc>&nbsp;</A>{ x | x is in {a, b}*, and x = 
    x<SUP>rev</SUP> } 
    <LI><A name=30007-23053xd>&nbsp;</A>{ vv<SUP>rev</SUP> | v is accepted by 
    the finite-state automaton of Figure&nbsp;<A 
    href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23054r2.E.6">2.E.6</A> 
    } 
    <HR>

    <CENTER>
    <TABLE>
      <TBODY>
      <TR>
        <TD><A name=30007-23054r2.E.6>&nbsp;</A> <A 
          name=30007-23054r2.E.6>&nbsp;</A> <BR><IMG alt=[PICT] 
          src="theory-bk-twoli1_files/theory-bk-two-2-E-6.jpg"> <BR>
          <TABLE>
            <TBODY>
            <TR vAlign=baseline>
              <TD><NOBR><STRONG>Figure 2.E.6</STRONG></NOBR></TD>
              <TD></TD></TR></TBODY></TABLE>
          <CENTER></CENTER></TD></TR></TBODY></TABLE></CENTER>
    <HR>

    <LI><A name=30007-23055xe>&nbsp;</A>{ a<SUP>n<SUP>2</SUP> </SUP>| n <IMG 
    alt=">=" src="theory-bk-twoli1_files/cmsy10-15.gif" align=middle> 1 } 
    <LI><A name=30007-23056xf>&nbsp;</A>{ a<SUP>n</SUP>b<SUP>t</SUP> | n<IMG 
    alt=/= src="theory-bk-twoli1_files/theory-bk-two32x.gif" align=middle> t } 
    <LI><A name=30007-23057xg>&nbsp;</A>{ x | x is in {a, b}*, and x<IMG alt=/= 
    src="theory-bk-twoli1_files/theory-bk-two33x.gif" align=middle> 
    x<SUP>rev</SUP> }</LI></OL><A name=30007-23058r2.4.3>&nbsp;</A> 
  <DT><STRONG>2.4.3 </STRONG>
  <DD>Show that each relation R computable by a finite-state transducer has a 
  fixed integer m such that the following holds for all (v, w) in R. If |w| &gt; 
  m <IMG alt=. src="theory-bk-twoli1_files/cmsy10-1.gif"> max(1, |v|), then w = 
  xyz for some x, y, z such that (v, xy<SUP>k</SUP>z) is in R for all k <IMG 
  alt=">=" src="theory-bk-twoli1_files/cmsy10-15.gif" align=middle> 0. Moreover, 
  0 &lt; |y| <IMG alt="<=" src="theory-bk-twoli1_files/cmsy10-14.gif" 
  align=middle> m. <A name=30007-23059r2.4.4>&nbsp;</A> 
  <DT><STRONG>2.4.4 </STRONG>
  <DD>Prove that the relation { (a<SUP>i</SUP>b<SUP>j</SUP>, c<SUP>k</SUP>) | i 
  and j are natural numbers and k = i <IMG alt=. 
  src="theory-bk-twoli1_files/cmsy10-1.gif"> j } is not computable by a 
  finite-state transducer. <A name=30007-23060r2.5>&nbsp;</A><A 
  name=30007-23061r2.5.1>&nbsp;</A> 
  <DT><STRONG>2.5.1 </STRONG>
  <DD>Let M<SUB>1</SUB> be the finite-state automaton given in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23040r2.E.3">2.E.3</A>, 
  and M<SUB>2</SUB> be the finite-state automaton given in Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23054r2.E.6">2.E.6</A>. 
  Give a finite-state automaton that accepts the relation R(M<SUB>1</SUB>) <IMG 
  alt=" /~\ " src="theory-bk-twoli1_files/cmsy10-5c.gif"> R(M<SUB>2</SUB>). <A 
  name=30007-23062r2.5.2>&nbsp;</A> 
  <DT><STRONG>2.5.2 </STRONG>
  <DD>For each of the following cases show that regular sets are closed under 
  the operation <IMG alt=Y src="theory-bk-twoli1_files/cmr10-9.gif">. <A 
  name=30007-23063></A>
  <OL type=a>
    <LI><A name=30007-23064xa>&nbsp;</A><IMG alt=Y 
    src="theory-bk-twoli1_files/cmr10-9.gif">(L)&nbsp;=&nbsp;{ x | x is in L, 
    and a proper prefix of L is in L }. 
    <LI><A name=30007-23065xb>&nbsp;</A><IMG alt=Y 
    src="theory-bk-twoli1_files/cmr10-9.gif">(L<SUB>1</SUB>, 
    L<SUB>2</SUB>)&nbsp;=&nbsp;{ xyzw | xz is in L<SUB>1</SUB>, and yw is in 
    L<SUB>2</SUB> }.</LI></OL><A name=30007-23066r2.5.3>&nbsp;</A> 
  <DT><STRONG>2.5.3 </STRONG>
  <DD>Let <IMG alt=Y src="theory-bk-twoli1_files/cmr10-9.gif"> be a permutation 
  operation on languages defined as <IMG alt=Y 
  src="theory-bk-twoli1_files/cmr10-9.gif">(L)&nbsp;=&nbsp;{ x | x is a 
  permutation of some y in L }. Show that regular sets are not closed under <IMG 
  alt=Y src="theory-bk-twoli1_files/cmr10-9.gif">. <A 
  name=30007-23067r2.5.4>&nbsp;</A> 
  <DT><STRONG>2.5.4 </STRONG>
  <DD>Show that the set of relations that finite-state transducers compute is 
  closed under each of the following operations <IMG alt=Y 
  src="theory-bk-twoli1_files/cmr10-9.gif">. 
  <OL type=a>
    <LI><A name=30007-23068xa>&nbsp;</A>Inverse, that is, <IMG alt=Y 
    src="theory-bk-twoli1_files/cmr10-9.gif">(R) = R<SUP>-1</SUP>&nbsp;=&nbsp;{ 
    (y, x) | (x, y) is in R }. 
    <LI><A name=30007-23069xb>&nbsp;</A>Closure, that is, <IMG alt=Y 
    src="theory-bk-twoli1_files/cmr10-9.gif">(R) = <IMG alt=" U " 
    src="theory-bk-twoli1_files/cmsy10-5b.gif"><SUB>i<IMG alt=">=" 
    src="theory-bk-twoli1_files/cmsy7-15.gif" align=middle>0</SUB>R<SUP>i</SUP>. 

    <LI><A name=30007-23070xc>&nbsp;</A>Composition<A name=30007-23071> </A>, 
    that is, <IMG alt=Y src="theory-bk-twoli1_files/cmr10-9.gif">(R<SUB>1</SUB>, 
    R<SUB>2</SUB>)&nbsp;=&nbsp;{ (x, y) | x = x<SUB>1</SUB>x<SUB>2</SUB> and y = 
    y<SUB>1</SUB>y<SUB>2</SUB> for some (x<SUB>1</SUB>, y<SUB>1</SUB>) in 
    R<SUB>1</SUB>, and some (x<SUB>2</SUB>, y<SUB>2</SUB>) in R<SUB>2</SUB> }. 
    <LI><A name=30007-23072xd>&nbsp;</A>Cascade<A name=30007-23073> 
    </A>composition, that is, <IMG alt=Y 
    src="theory-bk-twoli1_files/cmr10-9.gif">(R<SUB>1</SUB>, 
    R<SUB>2</SUB>)&nbsp;=&nbsp;{ (x, z) | (x, y) is in R<SUB>1</SUB> and (y, z) 
    is in R<SUB>2</SUB> for some y }.</LI></OL><A 
  name=30007-23074r2.5.5>&nbsp;</A> 
  <DT><STRONG>2.5.5 </STRONG>
  <DD>Show that the set of the relations computed by deterministic finite-state 
  transducers is not closed under composition.<A name=30007-23075> </A><A 
  name=30007-23076></A><A name=30007-23077r2.5.6>&nbsp;</A> 
  <DT><STRONG>2.5.6 </STRONG>
  <DD>Let M be the finite-state automaton whose transition diagram is given in 
  Figure&nbsp;<A 
  href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html#30007-23040r2.E.3">2.E.3</A>. 
  Give a finite-state automaton that accepts the complementation of L(M). <A 
  name=30007-23078r2.5.7>&nbsp;</A> 
  <DT><STRONG>2.5.7 </STRONG>
  <DD>Show that the complementation of a relation computable by a deterministic 
  finite-state transducer, is computable by a finite-state transducer. <A 
  name=30007-23079r2.6>&nbsp;</A><A name=30007-23080r2.6.1>&nbsp;</A> 
  <DT><STRONG>2.6.1 </STRONG>
  <DD>Show that the problem defined by the following pair is decidable. 
  <DL>
    <DT><STRONG><STRONG>Domain: </STRONG></STRONG>
    <DD>{ M | M is a finite-state automaton } 
    <DT><STRONG><STRONG>Question:</STRONG> </STRONG>
    <DD>Is L(M) a set of infinite cardinality for the given instance 
  M?</DD></DL></DD></DL>
<P>
<P>
<P>[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli2.html">next</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose6.html">prev</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twose6.html#tailtheory-bk-twose6.html">prev-tail</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-twoli1.html">front</A>] 
[<A 
href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk-two.html#theory-bk-twoli1.html">up</A>] 
<A name=tailtheory-bk-twoli1.html>&nbsp;</A></P></BODY></HTML>
