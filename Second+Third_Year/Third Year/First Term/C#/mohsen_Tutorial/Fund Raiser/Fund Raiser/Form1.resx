<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAehXKAKA/8ADKZf8A8I//AP+1/wD/3/8AAFCgACp6ygBQoPAAesr/AKDw/wDK//8AFbW1AD/f
        3wBl//8Aj///ALX//wDf//8AKsoAAFDwKgB6/1AAoP96AMr/oADw/8oAesoAAKDwKgDK/1AA8P96AP//
        oAD//8oA8CoVAP9QPwD/emUA/6CPAP/KtQD/8N8AyhVQAPA/egD/ZaAA/4/KAP+18AD/3/8ADwAAADUq
        KgBfUFAAhXp6AK+goADVysoAmjXqAMBf/wDqhf8A/6//AP/V/wAAAAAAIHDAAEqa6gBwwP8Amur/AMD/
        /wDq//8ANdXVAF///wCF//8Ar///ANX//wD///8ASuogAHD/SgCa/3AAwP+aAOr/wAD//+oAmuogAMD/
        SgDq/3AA//+aAP//wAD//+oA/0o1AP9vWgD/lYAA/7+qAP/l0AD///oA5TBvAP9alQD/gL8A/6rlAP/Q
        /wD/+v8AKh8fAFBFRQB6b28AoJWVAMq/vwDw5eUAxf+1ANr/tQDq/7UA//+1AP/qtQD/2rUA/8W1AHAA
        AABwAB8AcAA6AHAAVQAAAGAAAABqAAAAdQAAAHUAAABqAAAAYAAAAFoAAABPAAAAQAAAADoAAAAwAAAA
        JQAAABoAAAAQAAAACgAAAAoAAAAQAAAAGgAAACUAAAAwAAAAOgAAAEAAAABPAAAAWgAAAAAAYDpwAFU6
        cABFOnAAOjpwADpFcAA6VXAAOmBwADpwcAA6cGAAOnBVADpwRQA6cDoARXA6AFVwOgBgcDoAcHA6AHBg
        OgBwVToAcEU6AHBQUABwUFoAcFBgAHBQagBwUHAAalBwAGBQcABaUHAAUFBwAFBacABQYHAAUGpwAFBw
        cABQcGoAUHBgAFBwWgBQcFAAWnBQAGBwUABqcFAAcHBQAHBqUABwYFAAcFpQAEAAAABAABAAQAAgAEAA
        MABAAEAAMABAACAAQAAQAEAAAABAAAAQQAAAIEAAADBAAABAQAAAQDAAAEAgAABAEAAAQAAAEEAAACBA
        AAAwQAAAQEAAAEAwAABAIAAAQBAAAFAAAABAICoAQCAwAEAgOgBAIEAAOiBAADAgQAAqIEAAICBAACAq
        QAAgMEAAIDpAACBAQAAgQDoAIEAwACBAKgAgQCAAKkAgADBAIAA6QCAAQEAgAEA6IABAMCAAQCogAEAv
        LwBALzAAQC81AEAvPwBAL0AAPy9AADUvQAAwL0AALy9AAC8wQAAvNUAALz9AAC9AQAAvQD8AL0A1AC9A
        MAAvQC8AMEAvADVALwA/QC8AQEAvAEA/LwBANS8AQDAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJCQkJCQkJCQkJCQkJCQkJ
        CQkJCQkJCQkJCQkJCQkJCQkJCQgICAgICQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCAgICAgJCQkJ
        CQcHCQkJCQkJCQkJCQkJCQkJCQkJCQkICAgIKwkJCQkJCCsHCQkJCQkJCQkJCQkJCQkJCQkrKysrKysr
        KwkJCQgICAgHBwkJCQkJCQkJCQkJCQkJCSQkJCQkJCQkCQkkKwgICAgHCQkJCQkJCQkJCQkJCQkJJCQk
        JCQkJCQrCSQkKysrCAgJCQkJCQkJCQkJCQkJCQkrJCQkJCQkJCQfJCQkCQkJCQkJCQkJCQkJCQkJCQkJ
        CQkkJCQkJCQkJCskJCsJCQkJCQkJCQkJCQkJCQkJCQkJCSskKyQkJCQkIiMkKwoKKwkJCQkJCQkJCQkJ
        CQkJCQkJKyskJCQkJCQJCgoKCisKKwkJCQkJCQkJCQkJCQkJCQkJJCQkJCQkJCEiKwoKCgoJCQkJCQkJ
        CQkJCQkJCQkJCSQkJCQkJCQkJCIkJCIiCQkJCQkJCQkJCQkJCQkJCQkJJCQkJCQkKysrKyQkIgoKCgoJ
        CQkJCQkJCQkJCQkJCQkkJCQkJCQkJCskJCQhCgoKKworCQkJCQkJCQkJCQkJCSQkJCQkKyQrJCQrKysh
        CSsrKwkJCQkJCQkJCQkJCQkJCSQrKysrJCQrCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCgoKCgoKKwkJ
        CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCgoKCgoKCgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJKwoKKyQK
        CgoKCQkJCQkJCQkJCQkJCQkJCQkJCQkwCSsKCgokJAokKwkJCQkJCQkJCQkJCQkJCQkJCQkJCTAwMCsw
        CiswCisrMAkJCQkJCQkJCQkJCQkJCQkJCQkJMDAwMDAwKzAKCTAwCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
        MDAwMDAwMDAwMDAJCQkJCQkJCQkJCQkJCQkJCQkJCQkrMDAwMDArMDArKwkJCQkJCQkJCQkJCQkJCQkJ
        CQkJCSswMCsJCSsrMDAwCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
        CQkJCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////
</value>
  </data>
</root>