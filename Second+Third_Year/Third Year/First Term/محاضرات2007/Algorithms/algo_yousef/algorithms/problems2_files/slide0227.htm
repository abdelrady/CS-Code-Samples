<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:p="urn:schemas-microsoft-com:office:powerpoint"
xmlns:oa="urn:schemas-microsoft-com:office:activation"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1256">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 11">
<link id=Main-File rel=Main-File href="../problems2.htm">
<link rel=Preview href=preview.wmf>
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
p\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
v\:textbox {display:none;}
</style>
<![endif]-->
<title>3D Polyhedral Morphing</title>
<meta name=Description content="12/29/2004: 22.1.3">
<link rel=Stylesheet href="master05_stylesheet.css">
<![if !ppt]>
<style media=print>
<!--.sld
	{left:0px !important;
	width:6.0in !important;
	height:4.5in !important;
	font-size:107% !important;}
-->
</style>
<script src=script.js></script><script><!--
if( !IsNts() ) Redirect( "PPTSld" );
//--></script><!--[if vml]><script>g_vml = 1;
</script><![endif]--><![endif]><o:shapelayout v:ext="edit">
 <o:idmap v:ext="edit" data="703"/>
</o:shapelayout>
</head>

<body lang=AR-SA style='margin:0px;background-color:black'
onclick="DocumentOnClick()" onresize="_RSW()" onload="LoadSld()"
onkeypress="_KPH()">

<div id=SlideObj class=sld style='position:absolute;top:0px;left:0px;
width:534px;height:400px;font-size:16px;background-color:#FFFFCC;clip:rect(0%, 101%, 101%, 0%);
visibility:hidden'><p:slide coordsize="720,540"
 colors="#ffffcc,#000000,#808000,#0000ff,#339933,#800000,#0033cc,#ffcc66"
 masterhref="master05.xml">
 <p:shaperange href="master05.xml#_x0000_s424961"/><![if !ppt]><p:shaperange
  href="master05.xml#_x0000_s424966"/>
 <div v:shape="_x0000_s424966" class=O>
 <div style='position:absolute;top:95.0%;left:.93%;width:9.36%;height:3.0%'><span
 style='font-size:58%;layout-flow:horizontal;color:#0033CC;mso-color-index:
 6'>qsort - </span><span lang=AR-SA style='font-family:"Times New Roman";
 mso-bidi-font-family:"Times New Roman";font-size:58%;layout-flow:horizontal;
 color:#0033CC;mso-color-index:6;mso-field-code:meta16' dir=rtl><span dir=ltr></span>42</span><span
 style='font-size:58%;layout-flow:horizontal;color:#0033CC;mso-color-index:
 6;mso-special-format:lastCR;display:none'>&#13;</span></div>
 </div>
 <![endif]><p:shaperange href="master05.xml#_x0000_m424962"/><v:shape id="_x0000_s719874"
  type="#_x0000_m424962" style='position:absolute;left:0;top:0;width:719.875pt;
  height:1in' o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="title"/></v:shape><p:shaperange
  href="master05.xml#_x0000_m424963"/><v:shape id="_x0000_s719875" type="#_x0000_m424963"
  style='position:absolute;left:24pt;top:96pt;width:666pt;height:384pt'
  o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="body" position="1"/></v:shape>
 <div v:shape="_x0000_s719874" class=T style='position:absolute;top:2.5%;
 left:.93%;width:98.12%;height:9.25%'>22.1.3<span lang=EN-GB style='mso-special-format:
 lastCR;display:none'>&#13;</span></div>
 <div v:shape="_x0000_s719875" class=B>
 <div style='text-align:justify;mso-line-spacing:"90 20 0";position:absolute;
 top:18.25%;left:4.3%;width:90.63%;height:20.25%'><span style='position:absolute;
 top:0%;left:4.13%;width:95.86%;height:100.0%'><span style='font-size:63%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.31%;text-align:
 left;font-family:Wingdings'>w</span></span><span lang=EN-GB style='font-size:
 63%'>The transpose of a directed graph G</span><span lang=EN-GB
 style='font-size:41%;position:relative;top:-.45em;mso-text-raise:30%'>T</span><span
 lang=EN-GB style='font-size:63%'><span style='mso-spacerun:yes'> </span>can be
 computed as follows: If the graph is represented by an adjacency-matrix A
 simply compute the transpose of the matrix AT in time O(V</span><span
 lang=EN-GB style='font-size:41%;position:relative;top:-.45em;mso-text-raise:
 30%'>2</span><span lang=EN-GB style='font-size:63%'>). If the graph is
 represented by an adjacency-list a single scan through this list is sufcient
 to construct the transpose. The time used is O(E + V).&#13;</span></span></div>
 <div style='text-align:justify;mso-line-spacing:"90 20 0";position:absolute;
 top:39.25%;left:4.3%;width:90.63%;height:20.25%'><span style='position:absolute;
 top:0%;left:4.13%;width:95.86%;height:100.0%'><span style='font-size:63%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.31%;text-align:
 left;font-family:Wingdings'>w</span></span><span lang=EN-GB style='font-size:
 63%'>The square of a graph can be computed as follows: If the graph is
 represented as an adjacency matrix: A simply compute the product A</span><span
 lang=EN-GB style='font-size:41%;position:relative;top:-.45em;mso-text-raise:
 30%'>2</span><span lang=EN-GB style='font-size:63%'><span
 style='mso-spacerun:yes'> </span>where multiplication and addition is
 exchanged by anding and oring. Using the trivial algorithm yields a running
 time of O(n</span><span lang=EN-GB style='font-size:41%;position:relative;
 top:-.45em;mso-text-raise:30%'>3</span><span lang=EN-GB style='font-size:63%'>).
 Using Strassens algorithm improves the bound to O(nlg 7) = O(n</span><span
 lang=EN-GB style='font-size:41%;position:relative;top:-.45em;mso-text-raise:
 30%'>2.81</span><span lang=EN-GB style='font-size:63%'>). &#13;</span></span></div>
 <div style='text-align:justify;mso-line-spacing:"90 20 0";position:absolute;
 top:60.25%;left:4.3%;width:90.63%;height:24.5%'><span style='position:absolute;
 top:0%;left:4.13%;width:95.86%;height:100.0%'><span style='font-size:63%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.31%;text-align:
 left;font-family:Wingdings'>w</span></span><span lang=EN-GB style='font-size:
 63%'>If we are using the adjacency-list representation we can simply append
 lists eliminating duplicates. Assuming the lists are sorted we can proceed as
 follows: For each node v in some list replace the v with Adj[v] and merge this
 into the list. Each list can be at most V long and therefore each merge
 operation takes at most O(V) time. Thus the total running time is O((E+V)V) =
 O(E+V</span><span lang=EN-GB style='font-size:41%;position:relative;
 top:-.45em;mso-text-raise:30%'>2</span><span lang=EN-GB style='font-size:63%'>).&#13;</span></span></div>
 <div style='text-align:justify;mso-line-spacing:"90 20 0";position:absolute;
 top:85.0%;left:4.3%;width:3.93%;height:4.25%'><span style='position:absolute;
 top:0%;left:95.23%;width:4.76%;height:100.0%'><nobr><span style='font-size:
 63%;visibility:hidden'><span style='mso-special-format:bullet;position:absolute;
 left:-2000.0%;text-align:left;font-family:Wingdings'>w</span></span><span
 lang=EN-GB style='font-size:63%;display:none'>&#13;</span></nobr></span></div>
 <div style='text-align:justify;mso-line-spacing:"90 20 0";position:absolute;
 top:90.0%;left:4.3%;width:3.93%;height:4.25%'><span style='position:absolute;
 top:0%;left:95.23%;width:4.76%;height:100.0%'><nobr><span style='font-size:
 63%;visibility:hidden'><span style='mso-special-format:bullet;position:absolute;
 left:-2000.0%;text-align:left;font-family:Wingdings'>w</span></span><span
 lang=EN-GB style='font-size:63%;display:none'>&#13;</span></nobr></span></div>
 <div style='mso-line-spacing:"90 20 0";position:absolute;top:94.75%;
 left:4.3%;width:90.63%;height:4.25%'><span style='position:absolute;
 top:0%;left:4.13%;width:95.86%;height:100.0%'><span style='font-size:63%;
 visibility:hidden'><span style='mso-special-format:bullet;position:absolute;
 left:-4.31%;font-family:Wingdings'>w</span></span><span lang=EN-GB
 style='font-size:63%;mso-special-format:lastCR;display:none'>&#13;</span></span></div>
 </div>
</p:slide></div>

</body>

</html>
