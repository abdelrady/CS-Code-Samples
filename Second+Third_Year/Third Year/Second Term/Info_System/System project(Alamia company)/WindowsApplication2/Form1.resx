<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAEBAQAhHyEAHxMFADgxIQApIxEALzAwABEPEQARCQEAHxkTAC8pIQAvJRMAOTUxABgSBQAvKysAAgQ
        IAAgBAAAlJiUAIRsLADUwKQAlIxkAFxYRABENCQA5NzkAOTEpAB8XDQAfGxsAJx8TAC8lGwAVEwsACwc
        JAAsJAQApJykAJxsJACkjGQAZFxgAMy0bADoxIwAXExEAFgwAADUrIQA9OzEAOzYqABkTCwAnIyMANTE
        xABMOAQAjHhMAMS0nABsTAwArJyEAGxcRABcPCQA7PDkADQwJACcdDwA1LicAAQMFAAUBAQAhIiEAHxU
        JADUwJQApIxUAExMRABELBQAfGxcAIxsTAC8nFwA5NTUAPTcxAC8tLwA0LioACAcIAAkFBQAJBQEAHxs
        PADEwLgAhIh4AFRYVABENDQA5My0AJBgMAB8fGwAnHxcALykbAAkJBQApKikAKSUdABsbGQA2LR0APDU
        jABcTFQAXDwUAOzs1ADs3LQAZFw0ANTM1ADU1MQARDgUAIR8XABsTBwAqJyYAGxcVAD09PQANDQ0ABQU
        FACMXCQANBQEAIxsPADUxLQAlIx0AIx8bADMpGwANCQUAJCAhAB8WBgAsIxEAMjExABQQEQARDAEAHxw
        TAC4pJAAyLCEAMiohADo4MQAVEggALy4sACgnJQAkGwwAExAJABQOCQA8OjwAOzo5ADs0KQA8MigAHxc
        QAB8cHgAqIBIALiYeABMTDgALCgwACwoJAA4JAQAsKCgAJxsMACwmGgAsIxkAHBgZADQsHgA7MSYAGhQ
        RABcQAgA1LSQANS4hAD4+MAA+NikAGRMOABwUCwAnJCYAHBoQAD49OQAnIA8ABQQBACMjJAAkIyEAHxg
        JADgxJQAsJhUALCMVABQTFAAUDAUAMioYADImFwA5ODYAMi4vABgXFQAREA0APDQtACIYEAAfHx4AKiA
        WAC8pHgAsKywALCspACwoHgAsJR0AHBscADcwHgA9NiYAGhQUABoQBAA+PjUAPjs1AD46LgA+Ny0AHBc
        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
        AAHgAAAB4AAAAf///AP///wD
</value>
  </data>
</root>