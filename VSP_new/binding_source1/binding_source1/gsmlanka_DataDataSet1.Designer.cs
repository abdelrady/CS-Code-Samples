//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace binding_source1 {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("gsmlanka_DataDataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class gsmlanka_DataDataSet1 : System.Data.DataSet {
        
        private ManufacturerDataTable tableManufacturer;
        
        private newestPhoneDataTable tablenewestPhone;
        
        private OrderTableDataTable tableOrderTable;
        
        private PaymentsDataTable tablePayments;
        
        private phone_detailsDataTable tablephone_details;
        
        private ratingsDataTable tableratings;
        
        private temp_cartDataTable tabletemp_cart;
        
        private UsersDataTable tableUsers;
        
        private System.Data.DataRelation relationFK_OrderTable_phone_details;
        
        private System.Data.DataRelation relationFK_phone_details_Manufacturer;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public gsmlanka_DataDataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected gsmlanka_DataDataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Manufacturer"] != null)) {
                    base.Tables.Add(new ManufacturerDataTable(ds.Tables["Manufacturer"]));
                }
                if ((ds.Tables["newestPhone"] != null)) {
                    base.Tables.Add(new newestPhoneDataTable(ds.Tables["newestPhone"]));
                }
                if ((ds.Tables["OrderTable"] != null)) {
                    base.Tables.Add(new OrderTableDataTable(ds.Tables["OrderTable"]));
                }
                if ((ds.Tables["Payments"] != null)) {
                    base.Tables.Add(new PaymentsDataTable(ds.Tables["Payments"]));
                }
                if ((ds.Tables["phone_details"] != null)) {
                    base.Tables.Add(new phone_detailsDataTable(ds.Tables["phone_details"]));
                }
                if ((ds.Tables["ratings"] != null)) {
                    base.Tables.Add(new ratingsDataTable(ds.Tables["ratings"]));
                }
                if ((ds.Tables["temp_cart"] != null)) {
                    base.Tables.Add(new temp_cartDataTable(ds.Tables["temp_cart"]));
                }
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ManufacturerDataTable Manufacturer {
            get {
                return this.tableManufacturer;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public newestPhoneDataTable newestPhone {
            get {
                return this.tablenewestPhone;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderTableDataTable OrderTable {
            get {
                return this.tableOrderTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentsDataTable Payments {
            get {
                return this.tablePayments;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public phone_detailsDataTable phone_details {
            get {
                return this.tablephone_details;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ratingsDataTable ratings {
            get {
                return this.tableratings;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public temp_cartDataTable temp_cart {
            get {
                return this.tabletemp_cart;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsersDataTable Users {
            get {
                return this.tableUsers;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            gsmlanka_DataDataSet1 cln = ((gsmlanka_DataDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Manufacturer"] != null)) {
                    base.Tables.Add(new ManufacturerDataTable(ds.Tables["Manufacturer"]));
                }
                if ((ds.Tables["newestPhone"] != null)) {
                    base.Tables.Add(new newestPhoneDataTable(ds.Tables["newestPhone"]));
                }
                if ((ds.Tables["OrderTable"] != null)) {
                    base.Tables.Add(new OrderTableDataTable(ds.Tables["OrderTable"]));
                }
                if ((ds.Tables["Payments"] != null)) {
                    base.Tables.Add(new PaymentsDataTable(ds.Tables["Payments"]));
                }
                if ((ds.Tables["phone_details"] != null)) {
                    base.Tables.Add(new phone_detailsDataTable(ds.Tables["phone_details"]));
                }
                if ((ds.Tables["ratings"] != null)) {
                    base.Tables.Add(new ratingsDataTable(ds.Tables["ratings"]));
                }
                if ((ds.Tables["temp_cart"] != null)) {
                    base.Tables.Add(new temp_cartDataTable(ds.Tables["temp_cart"]));
                }
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableManufacturer = ((ManufacturerDataTable)(base.Tables["Manufacturer"]));
            if ((initTable == true)) {
                if ((this.tableManufacturer != null)) {
                    this.tableManufacturer.InitVars();
                }
            }
            this.tablenewestPhone = ((newestPhoneDataTable)(base.Tables["newestPhone"]));
            if ((initTable == true)) {
                if ((this.tablenewestPhone != null)) {
                    this.tablenewestPhone.InitVars();
                }
            }
            this.tableOrderTable = ((OrderTableDataTable)(base.Tables["OrderTable"]));
            if ((initTable == true)) {
                if ((this.tableOrderTable != null)) {
                    this.tableOrderTable.InitVars();
                }
            }
            this.tablePayments = ((PaymentsDataTable)(base.Tables["Payments"]));
            if ((initTable == true)) {
                if ((this.tablePayments != null)) {
                    this.tablePayments.InitVars();
                }
            }
            this.tablephone_details = ((phone_detailsDataTable)(base.Tables["phone_details"]));
            if ((initTable == true)) {
                if ((this.tablephone_details != null)) {
                    this.tablephone_details.InitVars();
                }
            }
            this.tableratings = ((ratingsDataTable)(base.Tables["ratings"]));
            if ((initTable == true)) {
                if ((this.tableratings != null)) {
                    this.tableratings.InitVars();
                }
            }
            this.tabletemp_cart = ((temp_cartDataTable)(base.Tables["temp_cart"]));
            if ((initTable == true)) {
                if ((this.tabletemp_cart != null)) {
                    this.tabletemp_cart.InitVars();
                }
            }
            this.tableUsers = ((UsersDataTable)(base.Tables["Users"]));
            if ((initTable == true)) {
                if ((this.tableUsers != null)) {
                    this.tableUsers.InitVars();
                }
            }
            this.relationFK_OrderTable_phone_details = this.Relations["FK_OrderTable_phone_details"];
            this.relationFK_phone_details_Manufacturer = this.Relations["FK_phone_details_Manufacturer"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "gsmlanka_DataDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/gsmlanka_DataDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableManufacturer = new ManufacturerDataTable();
            base.Tables.Add(this.tableManufacturer);
            this.tablenewestPhone = new newestPhoneDataTable();
            base.Tables.Add(this.tablenewestPhone);
            this.tableOrderTable = new OrderTableDataTable();
            base.Tables.Add(this.tableOrderTable);
            this.tablePayments = new PaymentsDataTable();
            base.Tables.Add(this.tablePayments);
            this.tablephone_details = new phone_detailsDataTable();
            base.Tables.Add(this.tablephone_details);
            this.tableratings = new ratingsDataTable();
            base.Tables.Add(this.tableratings);
            this.tabletemp_cart = new temp_cartDataTable();
            base.Tables.Add(this.tabletemp_cart);
            this.tableUsers = new UsersDataTable();
            base.Tables.Add(this.tableUsers);
            this.relationFK_OrderTable_phone_details = new System.Data.DataRelation("FK_OrderTable_phone_details", new System.Data.DataColumn[] {
                        this.tablephone_details.phoneIDColumn}, new System.Data.DataColumn[] {
                        this.tableOrderTable.phoneIDColumn}, false);
            this.Relations.Add(this.relationFK_OrderTable_phone_details);
            this.relationFK_phone_details_Manufacturer = new System.Data.DataRelation("FK_phone_details_Manufacturer", new System.Data.DataColumn[] {
                        this.tableManufacturer.man_idColumn}, new System.Data.DataColumn[] {
                        this.tablephone_details.man_idColumn}, false);
            this.Relations.Add(this.relationFK_phone_details_Manufacturer);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeManufacturer() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializenewestPhone() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePayments() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializephone_details() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeratings() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetemp_cart() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUsers() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ManufacturerRowChangeEventHandler(object sender, ManufacturerRowChangeEvent e);
        
        public delegate void newestPhoneRowChangeEventHandler(object sender, newestPhoneRowChangeEvent e);
        
        public delegate void OrderTableRowChangeEventHandler(object sender, OrderTableRowChangeEvent e);
        
        public delegate void PaymentsRowChangeEventHandler(object sender, PaymentsRowChangeEvent e);
        
        public delegate void phone_detailsRowChangeEventHandler(object sender, phone_detailsRowChangeEvent e);
        
        public delegate void ratingsRowChangeEventHandler(object sender, ratingsRowChangeEvent e);
        
        public delegate void temp_cartRowChangeEventHandler(object sender, temp_cartRowChangeEvent e);
        
        public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ManufacturerDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnman_id;
            
            private System.Data.DataColumn columnman_name;
            
            private System.Data.DataColumn columnman_img;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerDataTable() {
                this.TableName = "Manufacturer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ManufacturerDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ManufacturerDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn man_idColumn {
                get {
                    return this.columnman_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn man_nameColumn {
                get {
                    return this.columnman_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn man_imgColumn {
                get {
                    return this.columnman_img;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow this[int index] {
                get {
                    return ((ManufacturerRow)(this.Rows[index]));
                }
            }
            
            public event ManufacturerRowChangeEventHandler ManufacturerRowChanging;
            
            public event ManufacturerRowChangeEventHandler ManufacturerRowChanged;
            
            public event ManufacturerRowChangeEventHandler ManufacturerRowDeleting;
            
            public event ManufacturerRowChangeEventHandler ManufacturerRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddManufacturerRow(ManufacturerRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow AddManufacturerRow(string man_name, string man_img) {
                ManufacturerRow rowManufacturerRow = ((ManufacturerRow)(this.NewRow()));
                rowManufacturerRow.ItemArray = new object[] {
                        null,
                        man_name,
                        man_img};
                this.Rows.Add(rowManufacturerRow);
                return rowManufacturerRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow FindByman_id(int man_id) {
                return ((ManufacturerRow)(this.Rows.Find(new object[] {
                            man_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ManufacturerDataTable cln = ((ManufacturerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ManufacturerDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnman_id = base.Columns["man_id"];
                this.columnman_name = base.Columns["man_name"];
                this.columnman_img = base.Columns["man_img"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnman_id = new System.Data.DataColumn("man_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnman_id);
                this.columnman_name = new System.Data.DataColumn("man_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnman_name);
                this.columnman_img = new System.Data.DataColumn("man_img", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnman_img);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnman_id}, true));
                this.columnman_id.AutoIncrement = true;
                this.columnman_id.AllowDBNull = false;
                this.columnman_id.ReadOnly = true;
                this.columnman_id.Unique = true;
                this.columnman_name.AllowDBNull = false;
                this.columnman_name.MaxLength = 20;
                this.columnman_img.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow NewManufacturerRow() {
                return ((ManufacturerRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ManufacturerRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ManufacturerRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ManufacturerRowChanged != null)) {
                    this.ManufacturerRowChanged(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ManufacturerRowChanging != null)) {
                    this.ManufacturerRowChanging(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ManufacturerRowDeleted != null)) {
                    this.ManufacturerRowDeleted(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ManufacturerRowDeleting != null)) {
                    this.ManufacturerRowDeleting(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveManufacturerRow(ManufacturerRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ManufacturerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class newestPhoneDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnchecker;
            
            private System.Data.DataColumn columnPhoneID;
            
            private System.Data.DataColumn columnMan_ID;
            
            private System.Data.DataColumn columnPrice;
            
            private System.Data.DataColumn columnThumnail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneDataTable() {
                this.TableName = "newestPhone";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal newestPhoneDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected newestPhoneDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn checkerColumn {
                get {
                    return this.columnchecker;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhoneIDColumn {
                get {
                    return this.columnPhoneID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Man_IDColumn {
                get {
                    return this.columnMan_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThumnailColumn {
                get {
                    return this.columnThumnail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneRow this[int index] {
                get {
                    return ((newestPhoneRow)(this.Rows[index]));
                }
            }
            
            public event newestPhoneRowChangeEventHandler newestPhoneRowChanging;
            
            public event newestPhoneRowChangeEventHandler newestPhoneRowChanged;
            
            public event newestPhoneRowChangeEventHandler newestPhoneRowDeleting;
            
            public event newestPhoneRowChangeEventHandler newestPhoneRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddnewestPhoneRow(newestPhoneRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneRow AddnewestPhoneRow(string checker, string PhoneID, int Man_ID, decimal Price, string Thumnail) {
                newestPhoneRow rownewestPhoneRow = ((newestPhoneRow)(this.NewRow()));
                rownewestPhoneRow.ItemArray = new object[] {
                        checker,
                        PhoneID,
                        Man_ID,
                        Price,
                        Thumnail};
                this.Rows.Add(rownewestPhoneRow);
                return rownewestPhoneRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                newestPhoneDataTable cln = ((newestPhoneDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new newestPhoneDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnchecker = base.Columns["checker"];
                this.columnPhoneID = base.Columns["PhoneID"];
                this.columnMan_ID = base.Columns["Man_ID"];
                this.columnPrice = base.Columns["Price"];
                this.columnThumnail = base.Columns["Thumnail"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnchecker = new System.Data.DataColumn("checker", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnchecker);
                this.columnPhoneID = new System.Data.DataColumn("PhoneID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneID);
                this.columnMan_ID = new System.Data.DataColumn("Man_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMan_ID);
                this.columnPrice = new System.Data.DataColumn("Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnThumnail = new System.Data.DataColumn("Thumnail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumnail);
                this.columnchecker.MaxLength = 50;
                this.columnPhoneID.MaxLength = 100;
                this.columnThumnail.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneRow NewnewestPhoneRow() {
                return ((newestPhoneRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new newestPhoneRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(newestPhoneRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.newestPhoneRowChanged != null)) {
                    this.newestPhoneRowChanged(this, new newestPhoneRowChangeEvent(((newestPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.newestPhoneRowChanging != null)) {
                    this.newestPhoneRowChanging(this, new newestPhoneRowChangeEvent(((newestPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.newestPhoneRowDeleted != null)) {
                    this.newestPhoneRowDeleted(this, new newestPhoneRowChangeEvent(((newestPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.newestPhoneRowDeleting != null)) {
                    this.newestPhoneRowDeleting(this, new newestPhoneRowChangeEvent(((newestPhoneRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovenewestPhoneRow(newestPhoneRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "newestPhoneDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderTableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnOrderID;
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnphoneID;
            
            private System.Data.DataColumn columnord_Quantity;
            
            private System.Data.DataColumn columnsubTotal;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableDataTable() {
                this.TableName = "OrderTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderTableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderTableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn phoneIDColumn {
                get {
                    return this.columnphoneID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ord_QuantityColumn {
                get {
                    return this.columnord_Quantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn subTotalColumn {
                get {
                    return this.columnsubTotal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRow this[int index] {
                get {
                    return ((OrderTableRow)(this.Rows[index]));
                }
            }
            
            public event OrderTableRowChangeEventHandler OrderTableRowChanging;
            
            public event OrderTableRowChangeEventHandler OrderTableRowChanged;
            
            public event OrderTableRowChangeEventHandler OrderTableRowDeleting;
            
            public event OrderTableRowChangeEventHandler OrderTableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderTableRow(OrderTableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRow AddOrderTableRow(string OrderID, string UserID, phone_detailsRow parentphone_detailsRowByFK_OrderTable_phone_details, int ord_Quantity, decimal subTotal) {
                OrderTableRow rowOrderTableRow = ((OrderTableRow)(this.NewRow()));
                rowOrderTableRow.ItemArray = new object[] {
                        OrderID,
                        UserID,
                        parentphone_detailsRowByFK_OrderTable_phone_details[0],
                        ord_Quantity,
                        subTotal};
                this.Rows.Add(rowOrderTableRow);
                return rowOrderTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                OrderTableDataTable cln = ((OrderTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new OrderTableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderID = base.Columns["OrderID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnphoneID = base.Columns["phoneID"];
                this.columnord_Quantity = base.Columns["ord_Quantity"];
                this.columnsubTotal = base.Columns["subTotal"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderID = new System.Data.DataColumn("OrderID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnphoneID = new System.Data.DataColumn("phoneID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneID);
                this.columnord_Quantity = new System.Data.DataColumn("ord_Quantity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnord_Quantity);
                this.columnsubTotal = new System.Data.DataColumn("subTotal", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubTotal);
                this.columnOrderID.AllowDBNull = false;
                this.columnOrderID.MaxLength = 50;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 50;
                this.columnphoneID.AllowDBNull = false;
                this.columnphoneID.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRow NewOrderTableRow() {
                return ((OrderTableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new OrderTableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(OrderTableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderTableRowChanged != null)) {
                    this.OrderTableRowChanged(this, new OrderTableRowChangeEvent(((OrderTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderTableRowChanging != null)) {
                    this.OrderTableRowChanging(this, new OrderTableRowChangeEvent(((OrderTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderTableRowDeleted != null)) {
                    this.OrderTableRowDeleted(this, new OrderTableRowChangeEvent(((OrderTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderTableRowDeleting != null)) {
                    this.OrderTableRowDeleting(this, new OrderTableRowChangeEvent(((OrderTableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderTableRow(OrderTableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnAmount;
            
            private System.Data.DataColumn columnCard_Type;
            
            private System.Data.DataColumn columnCard_Holder;
            
            private System.Data.DataColumn columncard_secno;
            
            private System.Data.DataColumn columnCard_No;
            
            private System.Data.DataColumn columnExp_date;
            
            private System.Data.DataColumn columnIP;
            
            private System.Data.DataColumn columnOrd_date;
            
            private System.Data.DataColumn columnTel_Phone;
            
            private System.Data.DataColumn columnDeladdr;
            
            private System.Data.DataColumn columnstatus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsDataTable() {
                this.TableName = "Payments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Card_TypeColumn {
                get {
                    return this.columnCard_Type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Card_HolderColumn {
                get {
                    return this.columnCard_Holder;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn card_secnoColumn {
                get {
                    return this.columncard_secno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Card_NoColumn {
                get {
                    return this.columnCard_No;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Exp_dateColumn {
                get {
                    return this.columnExp_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IPColumn {
                get {
                    return this.columnIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Ord_dateColumn {
                get {
                    return this.columnOrd_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Tel_PhoneColumn {
                get {
                    return this.columnTel_Phone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeladdrColumn {
                get {
                    return this.columnDeladdr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsRow this[int index] {
                get {
                    return ((PaymentsRow)(this.Rows[index]));
                }
            }
            
            public event PaymentsRowChangeEventHandler PaymentsRowChanging;
            
            public event PaymentsRowChangeEventHandler PaymentsRowChanged;
            
            public event PaymentsRowChangeEventHandler PaymentsRowDeleting;
            
            public event PaymentsRowChangeEventHandler PaymentsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentsRow(PaymentsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsRow AddPaymentsRow(string UserID, decimal Amount, string Card_Type, string Card_Holder, string card_secno, string Card_No, string Exp_date, string IP, string Ord_date, string Tel_Phone, string Deladdr, string status) {
                PaymentsRow rowPaymentsRow = ((PaymentsRow)(this.NewRow()));
                rowPaymentsRow.ItemArray = new object[] {
                        UserID,
                        Amount,
                        Card_Type,
                        Card_Holder,
                        card_secno,
                        Card_No,
                        Exp_date,
                        IP,
                        Ord_date,
                        Tel_Phone,
                        Deladdr,
                        status};
                this.Rows.Add(rowPaymentsRow);
                return rowPaymentsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PaymentsDataTable cln = ((PaymentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PaymentsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnAmount = base.Columns["Amount"];
                this.columnCard_Type = base.Columns["Card_Type"];
                this.columnCard_Holder = base.Columns["Card_Holder"];
                this.columncard_secno = base.Columns["card_secno"];
                this.columnCard_No = base.Columns["Card_No"];
                this.columnExp_date = base.Columns["Exp_date"];
                this.columnIP = base.Columns["IP"];
                this.columnOrd_date = base.Columns["Ord_date"];
                this.columnTel_Phone = base.Columns["Tel_Phone"];
                this.columnDeladdr = base.Columns["Deladdr"];
                this.columnstatus = base.Columns["status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnAmount = new System.Data.DataColumn("Amount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnCard_Type = new System.Data.DataColumn("Card_Type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_Type);
                this.columnCard_Holder = new System.Data.DataColumn("Card_Holder", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_Holder);
                this.columncard_secno = new System.Data.DataColumn("card_secno", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncard_secno);
                this.columnCard_No = new System.Data.DataColumn("Card_No", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCard_No);
                this.columnExp_date = new System.Data.DataColumn("Exp_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExp_date);
                this.columnIP = new System.Data.DataColumn("IP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP);
                this.columnOrd_date = new System.Data.DataColumn("Ord_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrd_date);
                this.columnTel_Phone = new System.Data.DataColumn("Tel_Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel_Phone);
                this.columnDeladdr = new System.Data.DataColumn("Deladdr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeladdr);
                this.columnstatus = new System.Data.DataColumn("status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 50;
                this.columnAmount.AllowDBNull = false;
                this.columnCard_Type.AllowDBNull = false;
                this.columnCard_Type.MaxLength = 50;
                this.columnCard_Holder.AllowDBNull = false;
                this.columnCard_Holder.MaxLength = 100;
                this.columncard_secno.AllowDBNull = false;
                this.columncard_secno.MaxLength = 50;
                this.columnCard_No.AllowDBNull = false;
                this.columnCard_No.MaxLength = 50;
                this.columnExp_date.AllowDBNull = false;
                this.columnExp_date.MaxLength = 50;
                this.columnIP.MaxLength = 20;
                this.columnOrd_date.MaxLength = 50;
                this.columnTel_Phone.AllowDBNull = false;
                this.columnTel_Phone.MaxLength = 50;
                this.columnDeladdr.MaxLength = 500;
                this.columnstatus.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsRow NewPaymentsRow() {
                return ((PaymentsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PaymentsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PaymentsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentsRowChanged != null)) {
                    this.PaymentsRowChanged(this, new PaymentsRowChangeEvent(((PaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentsRowChanging != null)) {
                    this.PaymentsRowChanging(this, new PaymentsRowChangeEvent(((PaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentsRowDeleted != null)) {
                    this.PaymentsRowDeleted(this, new PaymentsRowChangeEvent(((PaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentsRowDeleting != null)) {
                    this.PaymentsRowDeleting(this, new PaymentsRowChangeEvent(((PaymentsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentsRow(PaymentsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class phone_detailsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnphoneID;
            
            private System.Data.DataColumn columnNetwork;
            
            private System.Data.DataColumn columnman_id;
            
            private System.Data.DataColumn columndate_pub;
            
            private System.Data.DataColumn columnstatus;
            
            private System.Data.DataColumn columndimension;
            
            private System.Data.DataColumn columnweight;
            
            private System.Data.DataColumn columnDisp_type;
            
            private System.Data.DataColumn columnDisp_size;
            
            private System.Data.DataColumn columnrng_type;
            
            private System.Data.DataColumn columncustamization;
            
            private System.Data.DataColumn columnvibration;
            
            private System.Data.DataColumn columnphn_book;
            
            private System.Data.DataColumn columncall_rec;
            
            private System.Data.DataColumn columncard_slot;
            
            private System.Data.DataColumn columnGPRS;
            
            private System.Data.DataColumn columnHSCSD;
            
            private System.Data.DataColumn columnEDGE;
            
            private System.Data.DataColumn columnstatus_3g;
            
            private System.Data.DataColumn columnWLAN;
            
            private System.Data.DataColumn columnBlootooth;
            
            private System.Data.DataColumn columnInfrared;
            
            private System.Data.DataColumn columnUSB;
            
            private System.Data.DataColumn columnOS;
            
            private System.Data.DataColumn columnMesseging;
            
            private System.Data.DataColumn columnBrowser;
            
            private System.Data.DataColumn columnClock;
            
            private System.Data.DataColumn columnGames;
            
            private System.Data.DataColumn columnColors;
            
            private System.Data.DataColumn columnLang_stat;
            
            private System.Data.DataColumn columnCamara;
            
            private System.Data.DataColumn columnOther_features;
            
            private System.Data.DataColumn columnBat_type;
            
            private System.Data.DataColumn columnBat_standby;
            
            private System.Data.DataColumn columnbat_talk;
            
            private System.Data.DataColumn columnPrice;
            
            private System.Data.DataColumn columnQuantity;
            
            private System.Data.DataColumn columnReorder_lvl;
            
            private System.Data.DataColumn columnHits;
            
            private System.Data.DataColumn columnBigImg;
            
            private System.Data.DataColumn columnSmallimg;
            
            private System.Data.DataColumn columnThumnail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsDataTable() {
                this.TableName = "phone_details";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal phone_detailsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected phone_detailsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn phoneIDColumn {
                get {
                    return this.columnphoneID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NetworkColumn {
                get {
                    return this.columnNetwork;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn man_idColumn {
                get {
                    return this.columnman_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn date_pubColumn {
                get {
                    return this.columndate_pub;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn dimensionColumn {
                get {
                    return this.columndimension;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Disp_typeColumn {
                get {
                    return this.columnDisp_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Disp_sizeColumn {
                get {
                    return this.columnDisp_size;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rng_typeColumn {
                get {
                    return this.columnrng_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn custamizationColumn {
                get {
                    return this.columncustamization;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn vibrationColumn {
                get {
                    return this.columnvibration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn phn_bookColumn {
                get {
                    return this.columnphn_book;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn call_recColumn {
                get {
                    return this.columncall_rec;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn card_slotColumn {
                get {
                    return this.columncard_slot;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GPRSColumn {
                get {
                    return this.columnGPRS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HSCSDColumn {
                get {
                    return this.columnHSCSD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EDGEColumn {
                get {
                    return this.columnEDGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn status_3gColumn {
                get {
                    return this.columnstatus_3g;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WLANColumn {
                get {
                    return this.columnWLAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BlootoothColumn {
                get {
                    return this.columnBlootooth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InfraredColumn {
                get {
                    return this.columnInfrared;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USBColumn {
                get {
                    return this.columnUSB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OSColumn {
                get {
                    return this.columnOS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MessegingColumn {
                get {
                    return this.columnMesseging;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BrowserColumn {
                get {
                    return this.columnBrowser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClockColumn {
                get {
                    return this.columnClock;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GamesColumn {
                get {
                    return this.columnGames;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ColorsColumn {
                get {
                    return this.columnColors;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Lang_statColumn {
                get {
                    return this.columnLang_stat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CamaraColumn {
                get {
                    return this.columnCamara;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Other_featuresColumn {
                get {
                    return this.columnOther_features;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bat_typeColumn {
                get {
                    return this.columnBat_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Bat_standbyColumn {
                get {
                    return this.columnBat_standby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn bat_talkColumn {
                get {
                    return this.columnbat_talk;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Reorder_lvlColumn {
                get {
                    return this.columnReorder_lvl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HitsColumn {
                get {
                    return this.columnHits;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BigImgColumn {
                get {
                    return this.columnBigImg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SmallimgColumn {
                get {
                    return this.columnSmallimg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ThumnailColumn {
                get {
                    return this.columnThumnail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow this[int index] {
                get {
                    return ((phone_detailsRow)(this.Rows[index]));
                }
            }
            
            public event phone_detailsRowChangeEventHandler phone_detailsRowChanging;
            
            public event phone_detailsRowChangeEventHandler phone_detailsRowChanged;
            
            public event phone_detailsRowChangeEventHandler phone_detailsRowDeleting;
            
            public event phone_detailsRowChangeEventHandler phone_detailsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addphone_detailsRow(phone_detailsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow Addphone_detailsRow(
                        string phoneID, 
                        string Network, 
                        ManufacturerRow parentManufacturerRowByFK_phone_details_Manufacturer, 
                        string date_pub, 
                        string status, 
                        string dimension, 
                        string weight, 
                        string Disp_type, 
                        string Disp_size, 
                        string rng_type, 
                        string custamization, 
                        string vibration, 
                        string phn_book, 
                        string call_rec, 
                        string card_slot, 
                        string GPRS, 
                        string HSCSD, 
                        string EDGE, 
                        string status_3g, 
                        string WLAN, 
                        string Blootooth, 
                        string Infrared, 
                        string USB, 
                        string OS, 
                        string Messeging, 
                        string Browser, 
                        string Clock, 
                        string Games, 
                        string Colors, 
                        string Lang_stat, 
                        string Camara, 
                        string Other_features, 
                        string Bat_type, 
                        string Bat_standby, 
                        string bat_talk, 
                        decimal Price, 
                        int Quantity, 
                        int Reorder_lvl, 
                        int Hits, 
                        string BigImg, 
                        string Smallimg, 
                        string Thumnail) {
                phone_detailsRow rowphone_detailsRow = ((phone_detailsRow)(this.NewRow()));
                rowphone_detailsRow.ItemArray = new object[] {
                        phoneID,
                        Network,
                        parentManufacturerRowByFK_phone_details_Manufacturer[0],
                        date_pub,
                        status,
                        dimension,
                        weight,
                        Disp_type,
                        Disp_size,
                        rng_type,
                        custamization,
                        vibration,
                        phn_book,
                        call_rec,
                        card_slot,
                        GPRS,
                        HSCSD,
                        EDGE,
                        status_3g,
                        WLAN,
                        Blootooth,
                        Infrared,
                        USB,
                        OS,
                        Messeging,
                        Browser,
                        Clock,
                        Games,
                        Colors,
                        Lang_stat,
                        Camara,
                        Other_features,
                        Bat_type,
                        Bat_standby,
                        bat_talk,
                        Price,
                        Quantity,
                        Reorder_lvl,
                        Hits,
                        BigImg,
                        Smallimg,
                        Thumnail};
                this.Rows.Add(rowphone_detailsRow);
                return rowphone_detailsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow FindByphoneID(string phoneID) {
                return ((phone_detailsRow)(this.Rows.Find(new object[] {
                            phoneID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                phone_detailsDataTable cln = ((phone_detailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new phone_detailsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnphoneID = base.Columns["phoneID"];
                this.columnNetwork = base.Columns["Network"];
                this.columnman_id = base.Columns["man_id"];
                this.columndate_pub = base.Columns["date_pub"];
                this.columnstatus = base.Columns["status"];
                this.columndimension = base.Columns["dimension"];
                this.columnweight = base.Columns["weight"];
                this.columnDisp_type = base.Columns["Disp_type"];
                this.columnDisp_size = base.Columns["Disp_size"];
                this.columnrng_type = base.Columns["rng_type"];
                this.columncustamization = base.Columns["custamization"];
                this.columnvibration = base.Columns["vibration"];
                this.columnphn_book = base.Columns["phn_book"];
                this.columncall_rec = base.Columns["call_rec"];
                this.columncard_slot = base.Columns["card_slot"];
                this.columnGPRS = base.Columns["GPRS"];
                this.columnHSCSD = base.Columns["HSCSD"];
                this.columnEDGE = base.Columns["EDGE"];
                this.columnstatus_3g = base.Columns["status_3g"];
                this.columnWLAN = base.Columns["WLAN"];
                this.columnBlootooth = base.Columns["Blootooth"];
                this.columnInfrared = base.Columns["Infrared"];
                this.columnUSB = base.Columns["USB"];
                this.columnOS = base.Columns["OS"];
                this.columnMesseging = base.Columns["Messeging"];
                this.columnBrowser = base.Columns["Browser"];
                this.columnClock = base.Columns["Clock"];
                this.columnGames = base.Columns["Games"];
                this.columnColors = base.Columns["Colors"];
                this.columnLang_stat = base.Columns["Lang_stat"];
                this.columnCamara = base.Columns["Camara"];
                this.columnOther_features = base.Columns["Other_features"];
                this.columnBat_type = base.Columns["Bat_type"];
                this.columnBat_standby = base.Columns["Bat_standby"];
                this.columnbat_talk = base.Columns["bat_talk"];
                this.columnPrice = base.Columns["Price"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnReorder_lvl = base.Columns["Reorder_lvl"];
                this.columnHits = base.Columns["Hits"];
                this.columnBigImg = base.Columns["BigImg"];
                this.columnSmallimg = base.Columns["Smallimg"];
                this.columnThumnail = base.Columns["Thumnail"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnphoneID = new System.Data.DataColumn("phoneID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneID);
                this.columnNetwork = new System.Data.DataColumn("Network", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetwork);
                this.columnman_id = new System.Data.DataColumn("man_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnman_id);
                this.columndate_pub = new System.Data.DataColumn("date_pub", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_pub);
                this.columnstatus = new System.Data.DataColumn("status", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columndimension = new System.Data.DataColumn("dimension", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndimension);
                this.columnweight = new System.Data.DataColumn("weight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnDisp_type = new System.Data.DataColumn("Disp_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisp_type);
                this.columnDisp_size = new System.Data.DataColumn("Disp_size", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisp_size);
                this.columnrng_type = new System.Data.DataColumn("rng_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrng_type);
                this.columncustamization = new System.Data.DataColumn("custamization", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncustamization);
                this.columnvibration = new System.Data.DataColumn("vibration", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvibration);
                this.columnphn_book = new System.Data.DataColumn("phn_book", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnphn_book);
                this.columncall_rec = new System.Data.DataColumn("call_rec", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncall_rec);
                this.columncard_slot = new System.Data.DataColumn("card_slot", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncard_slot);
                this.columnGPRS = new System.Data.DataColumn("GPRS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGPRS);
                this.columnHSCSD = new System.Data.DataColumn("HSCSD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSCSD);
                this.columnEDGE = new System.Data.DataColumn("EDGE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDGE);
                this.columnstatus_3g = new System.Data.DataColumn("status_3g", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus_3g);
                this.columnWLAN = new System.Data.DataColumn("WLAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWLAN);
                this.columnBlootooth = new System.Data.DataColumn("Blootooth", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlootooth);
                this.columnInfrared = new System.Data.DataColumn("Infrared", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfrared);
                this.columnUSB = new System.Data.DataColumn("USB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSB);
                this.columnOS = new System.Data.DataColumn("OS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS);
                this.columnMesseging = new System.Data.DataColumn("Messeging", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMesseging);
                this.columnBrowser = new System.Data.DataColumn("Browser", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrowser);
                this.columnClock = new System.Data.DataColumn("Clock", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClock);
                this.columnGames = new System.Data.DataColumn("Games", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGames);
                this.columnColors = new System.Data.DataColumn("Colors", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnColors);
                this.columnLang_stat = new System.Data.DataColumn("Lang_stat", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLang_stat);
                this.columnCamara = new System.Data.DataColumn("Camara", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCamara);
                this.columnOther_features = new System.Data.DataColumn("Other_features", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_features);
                this.columnBat_type = new System.Data.DataColumn("Bat_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBat_type);
                this.columnBat_standby = new System.Data.DataColumn("Bat_standby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBat_standby);
                this.columnbat_talk = new System.Data.DataColumn("bat_talk", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbat_talk);
                this.columnPrice = new System.Data.DataColumn("Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnQuantity = new System.Data.DataColumn("Quantity", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnReorder_lvl = new System.Data.DataColumn("Reorder_lvl", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReorder_lvl);
                this.columnHits = new System.Data.DataColumn("Hits", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHits);
                this.columnBigImg = new System.Data.DataColumn("BigImg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBigImg);
                this.columnSmallimg = new System.Data.DataColumn("Smallimg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallimg);
                this.columnThumnail = new System.Data.DataColumn("Thumnail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumnail);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnphoneID}, true));
                this.columnphoneID.AllowDBNull = false;
                this.columnphoneID.Unique = true;
                this.columnphoneID.MaxLength = 100;
                this.columnNetwork.MaxLength = 100;
                this.columnman_id.AllowDBNull = false;
                this.columndate_pub.MaxLength = 50;
                this.columnstatus.MaxLength = 50;
                this.columndimension.MaxLength = 100;
                this.columnweight.MaxLength = 100;
                this.columnDisp_type.MaxLength = 50;
                this.columnDisp_size.MaxLength = 200;
                this.columnrng_type.MaxLength = 100;
                this.columncustamization.MaxLength = 100;
                this.columnvibration.MaxLength = 20;
                this.columnphn_book.MaxLength = 100;
                this.columncall_rec.MaxLength = 100;
                this.columncard_slot.MaxLength = 200;
                this.columnGPRS.MaxLength = 100;
                this.columnHSCSD.MaxLength = 20;
                this.columnEDGE.MaxLength = 100;
                this.columnstatus_3g.MaxLength = 100;
                this.columnWLAN.MaxLength = 100;
                this.columnBlootooth.MaxLength = 50;
                this.columnInfrared.MaxLength = 50;
                this.columnUSB.MaxLength = 50;
                this.columnOS.MaxLength = 200;
                this.columnMesseging.MaxLength = 100;
                this.columnBrowser.MaxLength = 100;
                this.columnClock.MaxLength = 10;
                this.columnGames.MaxLength = 100;
                this.columnColors.MaxLength = 100;
                this.columnLang_stat.MaxLength = 100;
                this.columnCamara.MaxLength = 500;
                this.columnOther_features.MaxLength = 200;
                this.columnBat_type.MaxLength = 200;
                this.columnBat_standby.MaxLength = 100;
                this.columnbat_talk.MaxLength = 100;
                this.columnBigImg.MaxLength = 100;
                this.columnSmallimg.MaxLength = 100;
                this.columnThumnail.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow Newphone_detailsRow() {
                return ((phone_detailsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new phone_detailsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(phone_detailsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.phone_detailsRowChanged != null)) {
                    this.phone_detailsRowChanged(this, new phone_detailsRowChangeEvent(((phone_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.phone_detailsRowChanging != null)) {
                    this.phone_detailsRowChanging(this, new phone_detailsRowChangeEvent(((phone_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.phone_detailsRowDeleted != null)) {
                    this.phone_detailsRowDeleted(this, new phone_detailsRowChangeEvent(((phone_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.phone_detailsRowDeleting != null)) {
                    this.phone_detailsRowDeleting(this, new phone_detailsRowChangeEvent(((phone_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removephone_detailsRow(phone_detailsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "phone_detailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ratingsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnratingID;
            
            private System.Data.DataColumn columnrating;
            
            private System.Data.DataColumn columnip;
            
            private System.Data.DataColumn columnphoneID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsDataTable() {
                this.TableName = "ratings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratingsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ratingsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ratingIDColumn {
                get {
                    return this.columnratingID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ratingColumn {
                get {
                    return this.columnrating;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ipColumn {
                get {
                    return this.columnip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn phoneIDColumn {
                get {
                    return this.columnphoneID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsRow this[int index] {
                get {
                    return ((ratingsRow)(this.Rows[index]));
                }
            }
            
            public event ratingsRowChangeEventHandler ratingsRowChanging;
            
            public event ratingsRowChangeEventHandler ratingsRowChanged;
            
            public event ratingsRowChangeEventHandler ratingsRowDeleting;
            
            public event ratingsRowChangeEventHandler ratingsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddratingsRow(ratingsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsRow AddratingsRow(int rating, string ip, string phoneID) {
                ratingsRow rowratingsRow = ((ratingsRow)(this.NewRow()));
                rowratingsRow.ItemArray = new object[] {
                        null,
                        rating,
                        ip,
                        phoneID};
                this.Rows.Add(rowratingsRow);
                return rowratingsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ratingsDataTable cln = ((ratingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ratingsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnratingID = base.Columns["ratingID"];
                this.columnrating = base.Columns["rating"];
                this.columnip = base.Columns["ip"];
                this.columnphoneID = base.Columns["phoneID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnratingID = new System.Data.DataColumn("ratingID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnratingID);
                this.columnrating = new System.Data.DataColumn("rating", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating);
                this.columnip = new System.Data.DataColumn("ip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnip);
                this.columnphoneID = new System.Data.DataColumn("phoneID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneID);
                this.columnratingID.AutoIncrement = true;
                this.columnratingID.AllowDBNull = false;
                this.columnratingID.ReadOnly = true;
                this.columnip.MaxLength = 20;
                this.columnphoneID.AllowDBNull = false;
                this.columnphoneID.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsRow NewratingsRow() {
                return ((ratingsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ratingsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ratingsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ratingsRowChanged != null)) {
                    this.ratingsRowChanged(this, new ratingsRowChangeEvent(((ratingsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ratingsRowChanging != null)) {
                    this.ratingsRowChanging(this, new ratingsRowChangeEvent(((ratingsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ratingsRowDeleted != null)) {
                    this.ratingsRowDeleted(this, new ratingsRowChangeEvent(((ratingsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ratingsRowDeleting != null)) {
                    this.ratingsRowDeleting(this, new ratingsRowChangeEvent(((ratingsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveratingsRow(ratingsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ratingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class temp_cartDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntransID;
            
            private System.Data.DataColumn columnsecCode;
            
            private System.Data.DataColumn columnuserID;
            
            private System.Data.DataColumn columnPhoneID;
            
            private System.Data.DataColumn columnman_Id;
            
            private System.Data.DataColumn columnprice;
            
            private System.Data.DataColumn columnQty;
            
            private System.Data.DataColumn columntotalamount;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartDataTable() {
                this.TableName = "temp_cart";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_cartDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected temp_cartDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn transIDColumn {
                get {
                    return this.columntransID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn secCodeColumn {
                get {
                    return this.columnsecCode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhoneIDColumn {
                get {
                    return this.columnPhoneID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn man_IdColumn {
                get {
                    return this.columnman_Id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn totalamountColumn {
                get {
                    return this.columntotalamount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartRow this[int index] {
                get {
                    return ((temp_cartRow)(this.Rows[index]));
                }
            }
            
            public event temp_cartRowChangeEventHandler temp_cartRowChanging;
            
            public event temp_cartRowChangeEventHandler temp_cartRowChanged;
            
            public event temp_cartRowChangeEventHandler temp_cartRowDeleting;
            
            public event temp_cartRowChangeEventHandler temp_cartRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtemp_cartRow(temp_cartRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartRow Addtemp_cartRow(string transID, int secCode, string userID, string PhoneID, int man_Id, decimal price, int Qty, decimal totalamount) {
                temp_cartRow rowtemp_cartRow = ((temp_cartRow)(this.NewRow()));
                rowtemp_cartRow.ItemArray = new object[] {
                        transID,
                        secCode,
                        userID,
                        PhoneID,
                        man_Id,
                        price,
                        Qty,
                        totalamount};
                this.Rows.Add(rowtemp_cartRow);
                return rowtemp_cartRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                temp_cartDataTable cln = ((temp_cartDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new temp_cartDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntransID = base.Columns["transID"];
                this.columnsecCode = base.Columns["secCode"];
                this.columnuserID = base.Columns["userID"];
                this.columnPhoneID = base.Columns["PhoneID"];
                this.columnman_Id = base.Columns["man_Id"];
                this.columnprice = base.Columns["price"];
                this.columnQty = base.Columns["Qty"];
                this.columntotalamount = base.Columns["totalamount"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntransID = new System.Data.DataColumn("transID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntransID);
                this.columnsecCode = new System.Data.DataColumn("secCode", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsecCode);
                this.columnuserID = new System.Data.DataColumn("userID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnPhoneID = new System.Data.DataColumn("PhoneID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneID);
                this.columnman_Id = new System.Data.DataColumn("man_Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnman_Id);
                this.columnprice = new System.Data.DataColumn("price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnQty = new System.Data.DataColumn("Qty", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columntotalamount = new System.Data.DataColumn("totalamount", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalamount);
                this.columntransID.AllowDBNull = false;
                this.columntransID.MaxLength = 500;
                this.columnuserID.AllowDBNull = false;
                this.columnuserID.MaxLength = 50;
                this.columnPhoneID.AllowDBNull = false;
                this.columnPhoneID.MaxLength = 100;
                this.columnman_Id.AllowDBNull = false;
                this.columnprice.AllowDBNull = false;
                this.columnQty.AllowDBNull = false;
                this.columntotalamount.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartRow Newtemp_cartRow() {
                return ((temp_cartRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new temp_cartRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(temp_cartRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.temp_cartRowChanged != null)) {
                    this.temp_cartRowChanged(this, new temp_cartRowChangeEvent(((temp_cartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.temp_cartRowChanging != null)) {
                    this.temp_cartRowChanging(this, new temp_cartRowChangeEvent(((temp_cartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.temp_cartRowDeleted != null)) {
                    this.temp_cartRowDeleted(this, new temp_cartRowChangeEvent(((temp_cartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.temp_cartRowDeleting != null)) {
                    this.temp_cartRowDeleting(this, new temp_cartRowChangeEvent(((temp_cartRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetemp_cartRow(temp_cartRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "temp_cartDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsersDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUserID;
            
            private System.Data.DataColumn columnPass_word;
            
            private System.Data.DataColumn columnF_Name;
            
            private System.Data.DataColumn columnL_Name;
            
            private System.Data.DataColumn columnBday;
            
            private System.Data.DataColumn columnGender;
            
            private System.Data.DataColumn columnEmail;
            
            private System.Data.DataColumn columnCountry;
            
            private System.Data.DataColumn columnZip;
            
            private System.Data.DataColumn columnAddress;
            
            private System.Data.DataColumn columnPhone;
            
            private System.Data.DataColumn columnSec_Question;
            
            private System.Data.DataColumn columnAnswer;
            
            private System.Data.DataColumn columnPriviladge;
            
            private System.Data.DataColumn columnPosts;
            
            private System.Data.DataColumn columnJoinedDate;
            
            private System.Data.DataColumn columnImageURL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersDataTable() {
                this.TableName = "Users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsersDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UsersDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Pass_wordColumn {
                get {
                    return this.columnPass_word;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn F_NameColumn {
                get {
                    return this.columnF_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn L_NameColumn {
                get {
                    return this.columnL_Name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BdayColumn {
                get {
                    return this.columnBday;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Sec_QuestionColumn {
                get {
                    return this.columnSec_Question;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AnswerColumn {
                get {
                    return this.columnAnswer;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriviladgeColumn {
                get {
                    return this.columnPriviladge;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PostsColumn {
                get {
                    return this.columnPosts;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JoinedDateColumn {
                get {
                    return this.columnJoinedDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ImageURLColumn {
                get {
                    return this.columnImageURL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersRow this[int index] {
                get {
                    return ((UsersRow)(this.Rows[index]));
                }
            }
            
            public event UsersRowChangeEventHandler UsersRowChanging;
            
            public event UsersRowChangeEventHandler UsersRowChanged;
            
            public event UsersRowChangeEventHandler UsersRowDeleting;
            
            public event UsersRowChangeEventHandler UsersRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUsersRow(UsersRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersRow AddUsersRow(
                        string UserID, 
                        string Pass_word, 
                        string F_Name, 
                        string L_Name, 
                        string Bday, 
                        string Gender, 
                        string Email, 
                        string Country, 
                        string Zip, 
                        string Address, 
                        string Phone, 
                        string Sec_Question, 
                        string Answer, 
                        string Priviladge, 
                        int Posts, 
                        string JoinedDate, 
                        string ImageURL) {
                UsersRow rowUsersRow = ((UsersRow)(this.NewRow()));
                rowUsersRow.ItemArray = new object[] {
                        UserID,
                        Pass_word,
                        F_Name,
                        L_Name,
                        Bday,
                        Gender,
                        Email,
                        Country,
                        Zip,
                        Address,
                        Phone,
                        Sec_Question,
                        Answer,
                        Priviladge,
                        Posts,
                        JoinedDate,
                        ImageURL};
                this.Rows.Add(rowUsersRow);
                return rowUsersRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                UsersDataTable cln = ((UsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new UsersDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnPass_word = base.Columns["Pass_word"];
                this.columnF_Name = base.Columns["F_Name"];
                this.columnL_Name = base.Columns["L_Name"];
                this.columnBday = base.Columns["Bday"];
                this.columnGender = base.Columns["Gender"];
                this.columnEmail = base.Columns["Email"];
                this.columnCountry = base.Columns["Country"];
                this.columnZip = base.Columns["Zip"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhone = base.Columns["Phone"];
                this.columnSec_Question = base.Columns["Sec_Question"];
                this.columnAnswer = base.Columns["Answer"];
                this.columnPriviladge = base.Columns["Priviladge"];
                this.columnPosts = base.Columns["Posts"];
                this.columnJoinedDate = base.Columns["JoinedDate"];
                this.columnImageURL = base.Columns["ImageURL"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new System.Data.DataColumn("UserID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnPass_word = new System.Data.DataColumn("Pass_word", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPass_word);
                this.columnF_Name = new System.Data.DataColumn("F_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Name);
                this.columnL_Name = new System.Data.DataColumn("L_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_Name);
                this.columnBday = new System.Data.DataColumn("Bday", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBday);
                this.columnGender = new System.Data.DataColumn("Gender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnEmail = new System.Data.DataColumn("Email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCountry = new System.Data.DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnZip = new System.Data.DataColumn("Zip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnAddress = new System.Data.DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhone = new System.Data.DataColumn("Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnSec_Question = new System.Data.DataColumn("Sec_Question", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSec_Question);
                this.columnAnswer = new System.Data.DataColumn("Answer", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswer);
                this.columnPriviladge = new System.Data.DataColumn("Priviladge", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriviladge);
                this.columnPosts = new System.Data.DataColumn("Posts", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosts);
                this.columnJoinedDate = new System.Data.DataColumn("JoinedDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinedDate);
                this.columnImageURL = new System.Data.DataColumn("ImageURL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageURL);
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 50;
                this.columnPass_word.MaxLength = 16;
                this.columnF_Name.MaxLength = 50;
                this.columnL_Name.MaxLength = 50;
                this.columnBday.MaxLength = 20;
                this.columnGender.MaxLength = 10;
                this.columnEmail.MaxLength = 50;
                this.columnCountry.MaxLength = 100;
                this.columnZip.MaxLength = 10;
                this.columnAddress.MaxLength = 500;
                this.columnPhone.MaxLength = 20;
                this.columnSec_Question.MaxLength = 200;
                this.columnAnswer.MaxLength = 50;
                this.columnPriviladge.MaxLength = 20;
                this.columnJoinedDate.MaxLength = 20;
                this.columnImageURL.MaxLength = 300;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersRow NewUsersRow() {
                return ((UsersRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new UsersRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(UsersRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsersRowChanged != null)) {
                    this.UsersRowChanged(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsersRowChanging != null)) {
                    this.UsersRowChanging(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsersRowDeleted != null)) {
                    this.UsersRowDeleted(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsersRowDeleting != null)) {
                    this.UsersRowDeleting(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUsersRow(UsersRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                gsmlanka_DataDataSet1 ds = new gsmlanka_DataDataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ManufacturerRow : System.Data.DataRow {
            
            private ManufacturerDataTable tableManufacturer;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ManufacturerRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableManufacturer = ((ManufacturerDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int man_id {
                get {
                    return ((int)(this[this.tableManufacturer.man_idColumn]));
                }
                set {
                    this[this.tableManufacturer.man_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string man_name {
                get {
                    return ((string)(this[this.tableManufacturer.man_nameColumn]));
                }
                set {
                    this[this.tableManufacturer.man_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string man_img {
                get {
                    try {
                        return ((string)(this[this.tableManufacturer.man_imgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'man_img\' in table \'Manufacturer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturer.man_imgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isman_imgNull() {
                return this.IsNull(this.tableManufacturer.man_imgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setman_imgNull() {
                this[this.tableManufacturer.man_imgColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow[] Getphone_detailsRows() {
                return ((phone_detailsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_phone_details_Manufacturer"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class newestPhoneRow : System.Data.DataRow {
            
            private newestPhoneDataTable tablenewestPhone;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal newestPhoneRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenewestPhone = ((newestPhoneDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string checker {
                get {
                    try {
                        return ((string)(this[this.tablenewestPhone.checkerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'checker\' in table \'newestPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenewestPhone.checkerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneID {
                get {
                    try {
                        return ((string)(this[this.tablenewestPhone.PhoneIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PhoneID\' in table \'newestPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenewestPhone.PhoneIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Man_ID {
                get {
                    try {
                        return ((int)(this[this.tablenewestPhone.Man_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Man_ID\' in table \'newestPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenewestPhone.Man_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablenewestPhone.PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Price\' in table \'newestPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenewestPhone.PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thumnail {
                get {
                    try {
                        return ((string)(this[this.tablenewestPhone.ThumnailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Thumnail\' in table \'newestPhone\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenewestPhone.ThumnailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscheckerNull() {
                return this.IsNull(this.tablenewestPhone.checkerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcheckerNull() {
                this[this.tablenewestPhone.checkerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneIDNull() {
                return this.IsNull(this.tablenewestPhone.PhoneIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneIDNull() {
                this[this.tablenewestPhone.PhoneIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMan_IDNull() {
                return this.IsNull(this.tablenewestPhone.Man_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMan_IDNull() {
                this[this.tablenewestPhone.Man_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablenewestPhone.PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablenewestPhone.PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThumnailNull() {
                return this.IsNull(this.tablenewestPhone.ThumnailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThumnailNull() {
                this[this.tablenewestPhone.ThumnailColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderTableRow : System.Data.DataRow {
            
            private OrderTableDataTable tableOrderTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderTableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderTable = ((OrderTableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderID {
                get {
                    return ((string)(this[this.tableOrderTable.OrderIDColumn]));
                }
                set {
                    this[this.tableOrderTable.OrderIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tableOrderTable.UserIDColumn]));
                }
                set {
                    this[this.tableOrderTable.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phoneID {
                get {
                    return ((string)(this[this.tableOrderTable.phoneIDColumn]));
                }
                set {
                    this[this.tableOrderTable.phoneIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ord_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableOrderTable.ord_QuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ord_Quantity\' in table \'OrderTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderTable.ord_QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal subTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderTable.subTotalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'subTotal\' in table \'OrderTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderTable.subTotalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow phone_detailsRow {
                get {
                    return ((phone_detailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_OrderTable_phone_details"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_OrderTable_phone_details"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isord_QuantityNull() {
                return this.IsNull(this.tableOrderTable.ord_QuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setord_QuantityNull() {
                this[this.tableOrderTable.ord_QuantityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubTotalNull() {
                return this.IsNull(this.tableOrderTable.subTotalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubTotalNull() {
                this[this.tableOrderTable.subTotalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentsRow : System.Data.DataRow {
            
            private PaymentsDataTable tablePayments;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePayments = ((PaymentsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tablePayments.UserIDColumn]));
                }
                set {
                    this[this.tablePayments.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    return ((decimal)(this[this.tablePayments.AmountColumn]));
                }
                set {
                    this[this.tablePayments.AmountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_Type {
                get {
                    return ((string)(this[this.tablePayments.Card_TypeColumn]));
                }
                set {
                    this[this.tablePayments.Card_TypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_Holder {
                get {
                    return ((string)(this[this.tablePayments.Card_HolderColumn]));
                }
                set {
                    this[this.tablePayments.Card_HolderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string card_secno {
                get {
                    return ((string)(this[this.tablePayments.card_secnoColumn]));
                }
                set {
                    this[this.tablePayments.card_secnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Card_No {
                get {
                    return ((string)(this[this.tablePayments.Card_NoColumn]));
                }
                set {
                    this[this.tablePayments.Card_NoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Exp_date {
                get {
                    return ((string)(this[this.tablePayments.Exp_dateColumn]));
                }
                set {
                    this[this.tablePayments.Exp_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IP {
                get {
                    try {
                        return ((string)(this[this.tablePayments.IPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IP\' in table \'Payments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayments.IPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ord_date {
                get {
                    try {
                        return ((string)(this[this.tablePayments.Ord_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Ord_date\' in table \'Payments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayments.Ord_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tel_Phone {
                get {
                    return ((string)(this[this.tablePayments.Tel_PhoneColumn]));
                }
                set {
                    this[this.tablePayments.Tel_PhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Deladdr {
                get {
                    try {
                        return ((string)(this[this.tablePayments.DeladdrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Deladdr\' in table \'Payments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayments.DeladdrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablePayments.statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status\' in table \'Payments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayments.statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIPNull() {
                return this.IsNull(this.tablePayments.IPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIPNull() {
                this[this.tablePayments.IPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrd_dateNull() {
                return this.IsNull(this.tablePayments.Ord_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrd_dateNull() {
                this[this.tablePayments.Ord_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeladdrNull() {
                return this.IsNull(this.tablePayments.DeladdrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeladdrNull() {
                this[this.tablePayments.DeladdrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablePayments.statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablePayments.statusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class phone_detailsRow : System.Data.DataRow {
            
            private phone_detailsDataTable tablephone_details;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal phone_detailsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablephone_details = ((phone_detailsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phoneID {
                get {
                    return ((string)(this[this.tablephone_details.phoneIDColumn]));
                }
                set {
                    this[this.tablephone_details.phoneIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Network {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.NetworkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Network\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.NetworkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int man_id {
                get {
                    return ((int)(this[this.tablephone_details.man_idColumn]));
                }
                set {
                    this[this.tablephone_details.man_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string date_pub {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.date_pubColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'date_pub\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.date_pubColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dimension {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.dimensionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'dimension\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.dimensionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string weight {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.weightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'weight\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.weightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disp_type {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Disp_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Disp_type\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Disp_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Disp_size {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Disp_sizeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Disp_size\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Disp_sizeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rng_type {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.rng_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rng_type\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.rng_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string custamization {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.custamizationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'custamization\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.custamizationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vibration {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.vibrationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'vibration\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.vibrationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phn_book {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.phn_bookColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'phn_book\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.phn_bookColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string call_rec {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.call_recColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'call_rec\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.call_recColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string card_slot {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.card_slotColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'card_slot\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.card_slotColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GPRS {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.GPRSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GPRS\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.GPRSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HSCSD {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.HSCSDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HSCSD\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.HSCSDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EDGE {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.EDGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EDGE\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.EDGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status_3g {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.status_3gColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status_3g\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.status_3gColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WLAN {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.WLANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WLAN\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.WLANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Blootooth {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.BlootoothColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Blootooth\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.BlootoothColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Infrared {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.InfraredColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Infrared\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.InfraredColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USB {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.USBColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USB\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.USBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OS {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.OSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'OS\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.OSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Messeging {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.MessegingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Messeging\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.MessegingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Browser {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.BrowserColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Browser\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.BrowserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clock {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.ClockColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Clock\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.ClockColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Games {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.GamesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Games\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.GamesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Colors {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.ColorsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Colors\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.ColorsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lang_stat {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Lang_statColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Lang_stat\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Lang_statColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Camara {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.CamaraColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Camara\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.CamaraColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Other_features {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Other_featuresColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Other_features\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Other_featuresColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bat_type {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Bat_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bat_type\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Bat_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bat_standby {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.Bat_standbyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bat_standby\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Bat_standbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bat_talk {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.bat_talkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'bat_talk\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.bat_talkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablephone_details.PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Price\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tablephone_details.QuantityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Quantity\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.QuantityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Reorder_lvl {
                get {
                    try {
                        return ((int)(this[this.tablephone_details.Reorder_lvlColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reorder_lvl\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.Reorder_lvlColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Hits {
                get {
                    try {
                        return ((int)(this[this.tablephone_details.HitsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Hits\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.HitsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BigImg {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.BigImgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BigImg\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.BigImgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Smallimg {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.SmallimgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Smallimg\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.SmallimgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Thumnail {
                get {
                    try {
                        return ((string)(this[this.tablephone_details.ThumnailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Thumnail\' in table \'phone_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablephone_details.ThumnailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow ManufacturerRow {
                get {
                    return ((ManufacturerRow)(this.GetParentRow(this.Table.ParentRelations["FK_phone_details_Manufacturer"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_phone_details_Manufacturer"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetworkNull() {
                return this.IsNull(this.tablephone_details.NetworkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetworkNull() {
                this[this.tablephone_details.NetworkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_pubNull() {
                return this.IsNull(this.tablephone_details.date_pubColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_pubNull() {
                this[this.tablephone_details.date_pubColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablephone_details.statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablephone_details.statusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdimensionNull() {
                return this.IsNull(this.tablephone_details.dimensionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdimensionNull() {
                this[this.tablephone_details.dimensionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsweightNull() {
                return this.IsNull(this.tablephone_details.weightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetweightNull() {
                this[this.tablephone_details.weightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisp_typeNull() {
                return this.IsNull(this.tablephone_details.Disp_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisp_typeNull() {
                this[this.tablephone_details.Disp_typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisp_sizeNull() {
                return this.IsNull(this.tablephone_details.Disp_sizeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisp_sizeNull() {
                this[this.tablephone_details.Disp_sizeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrng_typeNull() {
                return this.IsNull(this.tablephone_details.rng_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrng_typeNull() {
                this[this.tablephone_details.rng_typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscustamizationNull() {
                return this.IsNull(this.tablephone_details.custamizationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcustamizationNull() {
                this[this.tablephone_details.custamizationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvibrationNull() {
                return this.IsNull(this.tablephone_details.vibrationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvibrationNull() {
                this[this.tablephone_details.vibrationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphn_bookNull() {
                return this.IsNull(this.tablephone_details.phn_bookColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphn_bookNull() {
                this[this.tablephone_details.phn_bookColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscall_recNull() {
                return this.IsNull(this.tablephone_details.call_recColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcall_recNull() {
                this[this.tablephone_details.call_recColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscard_slotNull() {
                return this.IsNull(this.tablephone_details.card_slotColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcard_slotNull() {
                this[this.tablephone_details.card_slotColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGPRSNull() {
                return this.IsNull(this.tablephone_details.GPRSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGPRSNull() {
                this[this.tablephone_details.GPRSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHSCSDNull() {
                return this.IsNull(this.tablephone_details.HSCSDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHSCSDNull() {
                this[this.tablephone_details.HSCSDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEDGENull() {
                return this.IsNull(this.tablephone_details.EDGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEDGENull() {
                this[this.tablephone_details.EDGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstatus_3gNull() {
                return this.IsNull(this.tablephone_details.status_3gColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstatus_3gNull() {
                this[this.tablephone_details.status_3gColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWLANNull() {
                return this.IsNull(this.tablephone_details.WLANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWLANNull() {
                this[this.tablephone_details.WLANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlootoothNull() {
                return this.IsNull(this.tablephone_details.BlootoothColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlootoothNull() {
                this[this.tablephone_details.BlootoothColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInfraredNull() {
                return this.IsNull(this.tablephone_details.InfraredColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInfraredNull() {
                this[this.tablephone_details.InfraredColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSBNull() {
                return this.IsNull(this.tablephone_details.USBColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSBNull() {
                this[this.tablephone_details.USBColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSNull() {
                return this.IsNull(this.tablephone_details.OSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSNull() {
                this[this.tablephone_details.OSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessegingNull() {
                return this.IsNull(this.tablephone_details.MessegingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessegingNull() {
                this[this.tablephone_details.MessegingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrowserNull() {
                return this.IsNull(this.tablephone_details.BrowserColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrowserNull() {
                this[this.tablephone_details.BrowserColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClockNull() {
                return this.IsNull(this.tablephone_details.ClockColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClockNull() {
                this[this.tablephone_details.ClockColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGamesNull() {
                return this.IsNull(this.tablephone_details.GamesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGamesNull() {
                this[this.tablephone_details.GamesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorsNull() {
                return this.IsNull(this.tablephone_details.ColorsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorsNull() {
                this[this.tablephone_details.ColorsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLang_statNull() {
                return this.IsNull(this.tablephone_details.Lang_statColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLang_statNull() {
                this[this.tablephone_details.Lang_statColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCamaraNull() {
                return this.IsNull(this.tablephone_details.CamaraColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCamaraNull() {
                this[this.tablephone_details.CamaraColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_featuresNull() {
                return this.IsNull(this.tablephone_details.Other_featuresColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_featuresNull() {
                this[this.tablephone_details.Other_featuresColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBat_typeNull() {
                return this.IsNull(this.tablephone_details.Bat_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBat_typeNull() {
                this[this.tablephone_details.Bat_typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBat_standbyNull() {
                return this.IsNull(this.tablephone_details.Bat_standbyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBat_standbyNull() {
                this[this.tablephone_details.Bat_standbyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbat_talkNull() {
                return this.IsNull(this.tablephone_details.bat_talkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbat_talkNull() {
                this[this.tablephone_details.bat_talkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablephone_details.PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablephone_details.PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablephone_details.QuantityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablephone_details.QuantityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReorder_lvlNull() {
                return this.IsNull(this.tablephone_details.Reorder_lvlColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReorder_lvlNull() {
                this[this.tablephone_details.Reorder_lvlColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHitsNull() {
                return this.IsNull(this.tablephone_details.HitsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHitsNull() {
                this[this.tablephone_details.HitsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBigImgNull() {
                return this.IsNull(this.tablephone_details.BigImgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBigImgNull() {
                this[this.tablephone_details.BigImgColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSmallimgNull() {
                return this.IsNull(this.tablephone_details.SmallimgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSmallimgNull() {
                this[this.tablephone_details.SmallimgColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThumnailNull() {
                return this.IsNull(this.tablephone_details.ThumnailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThumnailNull() {
                this[this.tablephone_details.ThumnailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRow[] GetOrderTableRows() {
                return ((OrderTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_OrderTable_phone_details"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ratingsRow : System.Data.DataRow {
            
            private ratingsDataTable tableratings;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ratingsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableratings = ((ratingsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ratingID {
                get {
                    return ((int)(this[this.tableratings.ratingIDColumn]));
                }
                set {
                    this[this.tableratings.ratingIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating {
                get {
                    try {
                        return ((int)(this[this.tableratings.ratingColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'rating\' in table \'ratings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratings.ratingColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ip {
                get {
                    try {
                        return ((string)(this[this.tableratings.ipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ip\' in table \'ratings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableratings.ipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phoneID {
                get {
                    return ((string)(this[this.tableratings.phoneIDColumn]));
                }
                set {
                    this[this.tableratings.phoneIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsratingNull() {
                return this.IsNull(this.tableratings.ratingColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetratingNull() {
                this[this.tableratings.ratingColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsipNull() {
                return this.IsNull(this.tableratings.ipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetipNull() {
                this[this.tableratings.ipColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class temp_cartRow : System.Data.DataRow {
            
            private temp_cartDataTable tabletemp_cart;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_cartRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletemp_cart = ((temp_cartDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transID {
                get {
                    return ((string)(this[this.tabletemp_cart.transIDColumn]));
                }
                set {
                    this[this.tabletemp_cart.transIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int secCode {
                get {
                    try {
                        return ((int)(this[this.tabletemp_cart.secCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'secCode\' in table \'temp_cart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_cart.secCodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userID {
                get {
                    return ((string)(this[this.tabletemp_cart.userIDColumn]));
                }
                set {
                    this[this.tabletemp_cart.userIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneID {
                get {
                    return ((string)(this[this.tabletemp_cart.PhoneIDColumn]));
                }
                set {
                    this[this.tabletemp_cart.PhoneIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int man_Id {
                get {
                    return ((int)(this[this.tabletemp_cart.man_IdColumn]));
                }
                set {
                    this[this.tabletemp_cart.man_IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    return ((decimal)(this[this.tabletemp_cart.priceColumn]));
                }
                set {
                    this[this.tabletemp_cart.priceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty {
                get {
                    return ((int)(this[this.tabletemp_cart.QtyColumn]));
                }
                set {
                    this[this.tabletemp_cart.QtyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalamount {
                get {
                    return ((decimal)(this[this.tabletemp_cart.totalamountColumn]));
                }
                set {
                    this[this.tabletemp_cart.totalamountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssecCodeNull() {
                return this.IsNull(this.tabletemp_cart.secCodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsecCodeNull() {
                this[this.tabletemp_cart.secCodeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UsersRow : System.Data.DataRow {
            
            private UsersDataTable tableUsers;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsersRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsers = ((UsersDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tableUsers.UserIDColumn]));
                }
                set {
                    this[this.tableUsers.UserIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pass_word {
                get {
                    try {
                        return ((string)(this[this.tableUsers.Pass_wordColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Pass_word\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.Pass_wordColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F_Name {
                get {
                    try {
                        return ((string)(this[this.tableUsers.F_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'F_Name\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.F_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string L_Name {
                get {
                    try {
                        return ((string)(this[this.tableUsers.L_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'L_Name\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.L_NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bday {
                get {
                    try {
                        return ((string)(this[this.tableUsers.BdayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Bday\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.BdayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableUsers.GenderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Gender\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.GenderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableUsers.EmailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Email\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.EmailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableUsers.CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Country\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CountryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tableUsers.ZipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Zip\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.ZipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableUsers.AddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.AddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableUsers.PhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.PhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sec_Question {
                get {
                    try {
                        return ((string)(this[this.tableUsers.Sec_QuestionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Sec_Question\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.Sec_QuestionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Answer {
                get {
                    try {
                        return ((string)(this[this.tableUsers.AnswerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Answer\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.AnswerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Priviladge {
                get {
                    try {
                        return ((string)(this[this.tableUsers.PriviladgeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Priviladge\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.PriviladgeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Posts {
                get {
                    try {
                        return ((int)(this[this.tableUsers.PostsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Posts\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.PostsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinedDate {
                get {
                    try {
                        return ((string)(this[this.tableUsers.JoinedDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JoinedDate\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.JoinedDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImageURL {
                get {
                    try {
                        return ((string)(this[this.tableUsers.ImageURLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ImageURL\' in table \'Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.ImageURLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPass_wordNull() {
                return this.IsNull(this.tableUsers.Pass_wordColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPass_wordNull() {
                this[this.tableUsers.Pass_wordColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF_NameNull() {
                return this.IsNull(this.tableUsers.F_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF_NameNull() {
                this[this.tableUsers.F_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsL_NameNull() {
                return this.IsNull(this.tableUsers.L_NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetL_NameNull() {
                this[this.tableUsers.L_NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBdayNull() {
                return this.IsNull(this.tableUsers.BdayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBdayNull() {
                this[this.tableUsers.BdayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableUsers.GenderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableUsers.GenderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableUsers.EmailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableUsers.EmailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableUsers.CountryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableUsers.CountryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZipNull() {
                return this.IsNull(this.tableUsers.ZipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZipNull() {
                this[this.tableUsers.ZipColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableUsers.AddressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableUsers.AddressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableUsers.PhoneColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableUsers.PhoneColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSec_QuestionNull() {
                return this.IsNull(this.tableUsers.Sec_QuestionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSec_QuestionNull() {
                this[this.tableUsers.Sec_QuestionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerNull() {
                return this.IsNull(this.tableUsers.AnswerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerNull() {
                this[this.tableUsers.AnswerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriviladgeNull() {
                return this.IsNull(this.tableUsers.PriviladgeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriviladgeNull() {
                this[this.tableUsers.PriviladgeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostsNull() {
                return this.IsNull(this.tableUsers.PostsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostsNull() {
                this[this.tableUsers.PostsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinedDateNull() {
                return this.IsNull(this.tableUsers.JoinedDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinedDateNull() {
                this[this.tableUsers.JoinedDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageURLNull() {
                return this.IsNull(this.tableUsers.ImageURLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageURLNull() {
                this[this.tableUsers.ImageURLColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ManufacturerRowChangeEvent : System.EventArgs {
            
            private ManufacturerRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRowChangeEvent(ManufacturerRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ManufacturerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class newestPhoneRowChangeEvent : System.EventArgs {
            
            private newestPhoneRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneRowChangeEvent(newestPhoneRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public newestPhoneRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderTableRowChangeEvent : System.EventArgs {
            
            private OrderTableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRowChangeEvent(OrderTableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentsRowChangeEvent : System.EventArgs {
            
            private PaymentsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsRowChangeEvent(PaymentsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class phone_detailsRowChangeEvent : System.EventArgs {
            
            private phone_detailsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRowChangeEvent(phone_detailsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public phone_detailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ratingsRowChangeEvent : System.EventArgs {
            
            private ratingsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsRowChangeEvent(ratingsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ratingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class temp_cartRowChangeEvent : System.EventArgs {
            
            private temp_cartRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartRowChangeEvent(temp_cartRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_cartRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UsersRowChangeEvent : System.EventArgs {
            
            private UsersRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersRowChangeEvent(UsersRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace binding_source1.gsmlanka_DataDataSet1TableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ManufacturerTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ManufacturerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Manufacturer";
            tableMapping.ColumnMappings.Add("man_id", "man_id");
            tableMapping.ColumnMappings.Add("man_name", "man_name");
            tableMapping.ColumnMappings.Add("man_img", "man_img");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Manufacturer] WHERE (([man_id] = @Original_man_id) AND ([man_n" +
                "ame] = @Original_man_name) AND ((@IsNull_man_img = 1 AND [man_img] IS NULL) OR (" +
                "[man_img] = @Original_man_img)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_name", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "man_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_man_img", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_img", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Manufacturer] ([man_name], [man_img]) VALUES (@man_name, @man_" +
                "img);\r\nSELECT man_id, man_name, man_img FROM Manufacturer WHERE (man_id = SCOPE_" +
                "IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_name", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "man_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_img", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Manufacturer] SET [man_name] = @man_name, [man_img] = @man_img WHERE (([man_id] = @Original_man_id) AND ([man_name] = @Original_man_name) AND ((@IsNull_man_img = 1 AND [man_img] IS NULL) OR ([man_img] = @Original_man_img)));
SELECT man_id, man_name, man_img FROM Manufacturer WHERE (man_id = @man_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_name", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "man_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_img", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_name", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "man_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_man_img", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_img", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "man_img", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT man_id, man_name, man_img FROM dbo.Manufacturer";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     man_id, man_name, man_img\r\nFROM         Manufacturer";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.ManufacturerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.ManufacturerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.ManufacturerDataTable dataTable = new gsmlanka_DataDataSet1.ManufacturerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(gsmlanka_DataDataSet1.ManufacturerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.ManufacturerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Manufacturer");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_man_id, string Original_man_name, string Original_man_img) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_man_id));
            if ((Original_man_name == null)) {
                throw new System.ArgumentNullException("Original_man_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_man_name));
            }
            if ((Original_man_img == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_man_img));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string man_name, string man_img) {
            if ((man_name == null)) {
                throw new System.ArgumentNullException("man_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(man_name));
            }
            if ((man_img == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(man_img));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string man_name, string man_img, int Original_man_id, string Original_man_name, string Original_man_img, int man_id) {
            if ((man_name == null)) {
                throw new System.ArgumentNullException("man_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(man_name));
            }
            if ((man_img == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(man_img));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_man_id));
            if ((Original_man_name == null)) {
                throw new System.ArgumentNullException("Original_man_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_man_name));
            }
            if ((Original_man_img == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_man_img));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(man_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class newestPhoneTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public newestPhoneTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "newestPhone";
            tableMapping.ColumnMappings.Add("checker", "checker");
            tableMapping.ColumnMappings.Add("PhoneID", "PhoneID");
            tableMapping.ColumnMappings.Add("Man_ID", "Man_ID");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Thumnail", "Thumnail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[newestPhone] ([checker], [PhoneID], [Man_ID], [Price], [Thumna" +
                "il]) VALUES (@checker, @PhoneID, @Man_ID, @Price, @Thumnail)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@checker", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "checker", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PhoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Man_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Man_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Price", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thumnail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT checker, PhoneID, Man_ID, Price, Thumnail FROM dbo.newestPhone";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.newestPhoneDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.newestPhoneDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.newestPhoneDataTable dataTable = new gsmlanka_DataDataSet1.newestPhoneDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.newestPhoneDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "newestPhone");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string checker, string PhoneID, System.Nullable<int> Man_ID, System.Nullable<decimal> Price, string Thumnail) {
            if ((checker == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(checker));
            }
            if ((PhoneID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PhoneID));
            }
            if ((Man_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Man_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Price.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Price.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Thumnail == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Thumnail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrderTableTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrderTable";
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("phoneID", "phoneID");
            tableMapping.ColumnMappings.Add("ord_Quantity", "ord_Quantity");
            tableMapping.ColumnMappings.Add("subTotal", "subTotal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OrderTable] ([OrderID], [UserID], [phoneID], [ord_Quantity], [" +
                "subTotal]) VALUES (@OrderID, @UserID, @phoneID, @ord_Quantity, @subTotal)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OrderID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OrderID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ord_Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ord_Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@subTotal", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "subTotal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OrderID, UserID, phoneID, ord_Quantity, subTotal FROM dbo.OrderTable";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.OrderTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.OrderTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.OrderTableDataTable dataTable = new gsmlanka_DataDataSet1.OrderTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.OrderTableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OrderTable");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OrderID, string UserID, string phoneID, System.Nullable<int> ord_Quantity, System.Nullable<decimal> subTotal) {
            if ((OrderID == null)) {
                throw new System.ArgumentNullException("OrderID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OrderID));
            }
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UserID));
            }
            if ((phoneID == null)) {
                throw new System.ArgumentNullException("phoneID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(phoneID));
            }
            if ((ord_Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ord_Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((subTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(subTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PaymentsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaymentsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Payments";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("Card_Type", "Card_Type");
            tableMapping.ColumnMappings.Add("Card_Holder", "Card_Holder");
            tableMapping.ColumnMappings.Add("card_secno", "card_secno");
            tableMapping.ColumnMappings.Add("Card_No", "Card_No");
            tableMapping.ColumnMappings.Add("Exp_date", "Exp_date");
            tableMapping.ColumnMappings.Add("IP", "IP");
            tableMapping.ColumnMappings.Add("Ord_date", "Ord_date");
            tableMapping.ColumnMappings.Add("Tel_Phone", "Tel_Phone");
            tableMapping.ColumnMappings.Add("Deladdr", "Deladdr");
            tableMapping.ColumnMappings.Add("status", "status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Payments] ([UserID], [Amount], [Card_Type], [Card_Holder], [card_secno], [Card_No], [Exp_date], [IP], [Ord_date], [Tel_Phone], [Deladdr], [status]) VALUES (@UserID, @Amount, @Card_Type, @Card_Holder, @card_secno, @Card_No, @Exp_date, @IP, @Ord_date, @Tel_Phone, @Deladdr, @status)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Amount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "Amount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Card_Type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Card_Type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Card_Holder", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Card_Holder", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@card_secno", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "card_secno", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Card_No", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Card_No", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Exp_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Exp_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IP", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "IP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Ord_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Ord_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Tel_Phone", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Tel_Phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Deladdr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Deladdr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UserID, Amount, Card_Type, Card_Holder, card_secno, Card_No, Exp_date, IP," +
                " Ord_date, Tel_Phone, Deladdr, status FROM dbo.Payments";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.PaymentsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.PaymentsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.PaymentsDataTable dataTable = new gsmlanka_DataDataSet1.PaymentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.PaymentsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Payments");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UserID, decimal Amount, string Card_Type, string Card_Holder, string card_secno, string Card_No, string Exp_date, string IP, string Ord_date, string Tel_Phone, string Deladdr, string status) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Amount));
            if ((Card_Type == null)) {
                throw new System.ArgumentNullException("Card_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Card_Type));
            }
            if ((Card_Holder == null)) {
                throw new System.ArgumentNullException("Card_Holder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Card_Holder));
            }
            if ((card_secno == null)) {
                throw new System.ArgumentNullException("card_secno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(card_secno));
            }
            if ((Card_No == null)) {
                throw new System.ArgumentNullException("Card_No");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Card_No));
            }
            if ((Exp_date == null)) {
                throw new System.ArgumentNullException("Exp_date");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Exp_date));
            }
            if ((IP == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(IP));
            }
            if ((Ord_date == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Ord_date));
            }
            if ((Tel_Phone == null)) {
                throw new System.ArgumentNullException("Tel_Phone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Tel_Phone));
            }
            if ((Deladdr == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Deladdr));
            }
            if ((status == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(status));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class phone_detailsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public phone_detailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "phone_details";
            tableMapping.ColumnMappings.Add("phoneID", "phoneID");
            tableMapping.ColumnMappings.Add("Network", "Network");
            tableMapping.ColumnMappings.Add("man_id", "man_id");
            tableMapping.ColumnMappings.Add("date_pub", "date_pub");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("dimension", "dimension");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("Disp_type", "Disp_type");
            tableMapping.ColumnMappings.Add("Disp_size", "Disp_size");
            tableMapping.ColumnMappings.Add("rng_type", "rng_type");
            tableMapping.ColumnMappings.Add("custamization", "custamization");
            tableMapping.ColumnMappings.Add("vibration", "vibration");
            tableMapping.ColumnMappings.Add("phn_book", "phn_book");
            tableMapping.ColumnMappings.Add("call_rec", "call_rec");
            tableMapping.ColumnMappings.Add("card_slot", "card_slot");
            tableMapping.ColumnMappings.Add("GPRS", "GPRS");
            tableMapping.ColumnMappings.Add("HSCSD", "HSCSD");
            tableMapping.ColumnMappings.Add("EDGE", "EDGE");
            tableMapping.ColumnMappings.Add("status_3g", "status_3g");
            tableMapping.ColumnMappings.Add("WLAN", "WLAN");
            tableMapping.ColumnMappings.Add("Blootooth", "Blootooth");
            tableMapping.ColumnMappings.Add("Infrared", "Infrared");
            tableMapping.ColumnMappings.Add("USB", "USB");
            tableMapping.ColumnMappings.Add("OS", "OS");
            tableMapping.ColumnMappings.Add("Messeging", "Messeging");
            tableMapping.ColumnMappings.Add("Browser", "Browser");
            tableMapping.ColumnMappings.Add("Clock", "Clock");
            tableMapping.ColumnMappings.Add("Games", "Games");
            tableMapping.ColumnMappings.Add("Colors", "Colors");
            tableMapping.ColumnMappings.Add("Lang_stat", "Lang_stat");
            tableMapping.ColumnMappings.Add("Camara", "Camara");
            tableMapping.ColumnMappings.Add("Other_features", "Other_features");
            tableMapping.ColumnMappings.Add("Bat_type", "Bat_type");
            tableMapping.ColumnMappings.Add("Bat_standby", "Bat_standby");
            tableMapping.ColumnMappings.Add("bat_talk", "bat_talk");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Reorder_lvl", "Reorder_lvl");
            tableMapping.ColumnMappings.Add("Hits", "Hits");
            tableMapping.ColumnMappings.Add("BigImg", "BigImg");
            tableMapping.ColumnMappings.Add("Smallimg", "Smallimg");
            tableMapping.ColumnMappings.Add("Thumnail", "Thumnail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[phone_details] WHERE (([phoneID] = @Original_phoneID) AND ((@I" +
                "sNull_Network = 1 AND [Network] IS NULL) OR ([Network] = @Original_Network)) AND" +
                " ([man_id] = @Original_man_id) AND ((@IsNull_date_pub = 1 AND [date_pub] IS NULL" +
                ") OR ([date_pub] = @Original_date_pub)) AND ((@IsNull_status = 1 AND [status] IS" +
                " NULL) OR ([status] = @Original_status)) AND ((@IsNull_dimension = 1 AND [dimens" +
                "ion] IS NULL) OR ([dimension] = @Original_dimension)) AND ((@IsNull_weight = 1 A" +
                "ND [weight] IS NULL) OR ([weight] = @Original_weight)) AND ((@IsNull_Disp_type =" +
                " 1 AND [Disp_type] IS NULL) OR ([Disp_type] = @Original_Disp_type)) AND ((@IsNul" +
                "l_Disp_size = 1 AND [Disp_size] IS NULL) OR ([Disp_size] = @Original_Disp_size))" +
                " AND ((@IsNull_rng_type = 1 AND [rng_type] IS NULL) OR ([rng_type] = @Original_r" +
                "ng_type)) AND ((@IsNull_custamization = 1 AND [custamization] IS NULL) OR ([cust" +
                "amization] = @Original_custamization)) AND ((@IsNull_vibration = 1 AND [vibratio" +
                "n] IS NULL) OR ([vibration] = @Original_vibration)) AND ((@IsNull_phn_book = 1 A" +
                "ND [phn_book] IS NULL) OR ([phn_book] = @Original_phn_book)) AND ((@IsNull_call_" +
                "rec = 1 AND [call_rec] IS NULL) OR ([call_rec] = @Original_call_rec)) AND ((@IsN" +
                "ull_card_slot = 1 AND [card_slot] IS NULL) OR ([card_slot] = @Original_card_slot" +
                ")) AND ((@IsNull_GPRS = 1 AND [GPRS] IS NULL) OR ([GPRS] = @Original_GPRS)) AND " +
                "((@IsNull_HSCSD = 1 AND [HSCSD] IS NULL) OR ([HSCSD] = @Original_HSCSD)) AND ((@" +
                "IsNull_EDGE = 1 AND [EDGE] IS NULL) OR ([EDGE] = @Original_EDGE)) AND ((@IsNull_" +
                "status_3g = 1 AND [status_3g] IS NULL) OR ([status_3g] = @Original_status_3g)) A" +
                "ND ((@IsNull_WLAN = 1 AND [WLAN] IS NULL) OR ([WLAN] = @Original_WLAN)) AND ((@I" +
                "sNull_Blootooth = 1 AND [Blootooth] IS NULL) OR ([Blootooth] = @Original_Blootoo" +
                "th)) AND ((@IsNull_Infrared = 1 AND [Infrared] IS NULL) OR ([Infrared] = @Origin" +
                "al_Infrared)) AND ((@IsNull_USB = 1 AND [USB] IS NULL) OR ([USB] = @Original_USB" +
                ")) AND ((@IsNull_OS = 1 AND [OS] IS NULL) OR ([OS] = @Original_OS)) AND ((@IsNul" +
                "l_Messeging = 1 AND [Messeging] IS NULL) OR ([Messeging] = @Original_Messeging))" +
                " AND ((@IsNull_Browser = 1 AND [Browser] IS NULL) OR ([Browser] = @Original_Brow" +
                "ser)) AND ((@IsNull_Clock = 1 AND [Clock] IS NULL) OR ([Clock] = @Original_Clock" +
                ")) AND ((@IsNull_Games = 1 AND [Games] IS NULL) OR ([Games] = @Original_Games)) " +
                "AND ((@IsNull_Colors = 1 AND [Colors] IS NULL) OR ([Colors] = @Original_Colors))" +
                " AND ((@IsNull_Lang_stat = 1 AND [Lang_stat] IS NULL) OR ([Lang_stat] = @Origina" +
                "l_Lang_stat)) AND ((@IsNull_Camara = 1 AND [Camara] IS NULL) OR ([Camara] = @Ori" +
                "ginal_Camara)) AND ((@IsNull_Other_features = 1 AND [Other_features] IS NULL) OR" +
                " ([Other_features] = @Original_Other_features)) AND ((@IsNull_Bat_type = 1 AND [" +
                "Bat_type] IS NULL) OR ([Bat_type] = @Original_Bat_type)) AND ((@IsNull_Bat_stand" +
                "by = 1 AND [Bat_standby] IS NULL) OR ([Bat_standby] = @Original_Bat_standby)) AN" +
                "D ((@IsNull_bat_talk = 1 AND [bat_talk] IS NULL) OR ([bat_talk] = @Original_bat_" +
                "talk)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Pric" +
                "e)) AND ((@IsNull_Quantity = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Origina" +
                "l_Quantity)) AND ((@IsNull_Reorder_lvl = 1 AND [Reorder_lvl] IS NULL) OR ([Reord" +
                "er_lvl] = @Original_Reorder_lvl)) AND ((@IsNull_Hits = 1 AND [Hits] IS NULL) OR " +
                "([Hits] = @Original_Hits)) AND ((@IsNull_BigImg = 1 AND [BigImg] IS NULL) OR ([B" +
                "igImg] = @Original_BigImg)) AND ((@IsNull_Smallimg = 1 AND [Smallimg] IS NULL) O" +
                "R ([Smallimg] = @Original_Smallimg)) AND ((@IsNull_Thumnail = 1 AND [Thumnail] I" +
                "S NULL) OR ([Thumnail] = @Original_Thumnail)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Network", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Network", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_date_pub", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_date_pub", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_dimension", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_dimension", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_weight", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Disp_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Disp_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Disp_size", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Disp_size", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rng_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rng_type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_custamization", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_custamization", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_vibration", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_vibration", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_phn_book", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_phn_book", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_call_rec", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_call_rec", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_card_slot", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_card_slot", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GPRS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GPRS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HSCSD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HSCSD", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EDGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EDGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status_3g", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status_3g", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_WLAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_WLAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Blootooth", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Blootooth", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Infrared", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Infrared", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USB", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USB", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Messeging", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Messeging", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Browser", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Browser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Clock", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Clock", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Games", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Games", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Colors", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Colors", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Lang_stat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Lang_stat", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Camara", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Camara", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Other_features", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Other_features", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Bat_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Bat_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Bat_standby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Bat_standby", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_bat_talk", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_bat_talk", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Price", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Price", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "Price", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BigImg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BigImg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Smallimg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Smallimg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thumnail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thumnail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[phone_details] ([phoneID], [Network], [man_id], [date_pub], [status], [dimension], [weight], [Disp_type], [Disp_size], [rng_type], [custamization], [vibration], [phn_book], [call_rec], [card_slot], [GPRS], [HSCSD], [EDGE], [status_3g], [WLAN], [Blootooth], [Infrared], [USB], [OS], [Messeging], [Browser], [Clock], [Games], [Colors], [Lang_stat], [Camara], [Other_features], [Bat_type], [Bat_standby], [bat_talk], [Price], [Quantity], [Reorder_lvl], [Hits], [BigImg], [Smallimg], [Thumnail]) VALUES (@phoneID, @Network, @man_id, @date_pub, @status, @dimension, @weight, @Disp_type, @Disp_size, @rng_type, @custamization, @vibration, @phn_book, @call_rec, @card_slot, @GPRS, @HSCSD, @EDGE, @status_3g, @WLAN, @Blootooth, @Infrared, @USB, @OS, @Messeging, @Browser, @Clock, @Games, @Colors, @Lang_stat, @Camara, @Other_features, @Bat_type, @Bat_standby, @bat_talk, @Price, @Quantity, @Reorder_lvl, @Hits, @BigImg, @Smallimg, @Thumnail);
SELECT phoneID, Network, man_id, date_pub, status, dimension, weight, Disp_type, Disp_size, rng_type, custamization, vibration, phn_book, call_rec, card_slot, GPRS, HSCSD, EDGE, status_3g, WLAN, Blootooth, Infrared, USB, OS, Messeging, Browser, Clock, Games, Colors, Lang_stat, Camara, Other_features, Bat_type, Bat_standby, bat_talk, Price, Quantity, Reorder_lvl, Hits, BigImg, Smallimg, Thumnail FROM phone_details WHERE (phoneID = @phoneID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Network", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@date_pub", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@dimension", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@weight", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Disp_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Disp_size", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rng_type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@custamization", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@vibration", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phn_book", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@call_rec", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@card_slot", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GPRS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HSCSD", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EDGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status_3g", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@WLAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Blootooth", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Infrared", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USB", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Messeging", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Browser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Clock", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Games", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Colors", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Lang_stat", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Camara", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Other_features", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Bat_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Bat_standby", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@bat_talk", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "Price", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BigImg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Smallimg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thumnail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[phone_details] SET [phoneID] = @phoneID, [Network] = @Network, [man" +
                "_id] = @man_id, [date_pub] = @date_pub, [status] = @status, [dimension] = @dimen" +
                "sion, [weight] = @weight, [Disp_type] = @Disp_type, [Disp_size] = @Disp_size, [r" +
                "ng_type] = @rng_type, [custamization] = @custamization, [vibration] = @vibration" +
                ", [phn_book] = @phn_book, [call_rec] = @call_rec, [card_slot] = @card_slot, [GPR" +
                "S] = @GPRS, [HSCSD] = @HSCSD, [EDGE] = @EDGE, [status_3g] = @status_3g, [WLAN] =" +
                " @WLAN, [Blootooth] = @Blootooth, [Infrared] = @Infrared, [USB] = @USB, [OS] = @" +
                "OS, [Messeging] = @Messeging, [Browser] = @Browser, [Clock] = @Clock, [Games] = " +
                "@Games, [Colors] = @Colors, [Lang_stat] = @Lang_stat, [Camara] = @Camara, [Other" +
                "_features] = @Other_features, [Bat_type] = @Bat_type, [Bat_standby] = @Bat_stand" +
                "by, [bat_talk] = @bat_talk, [Price] = @Price, [Quantity] = @Quantity, [Reorder_l" +
                "vl] = @Reorder_lvl, [Hits] = @Hits, [BigImg] = @BigImg, [Smallimg] = @Smallimg, " +
                "[Thumnail] = @Thumnail WHERE (([phoneID] = @Original_phoneID) AND ((@IsNull_Netw" +
                "ork = 1 AND [Network] IS NULL) OR ([Network] = @Original_Network)) AND ([man_id]" +
                " = @Original_man_id) AND ((@IsNull_date_pub = 1 AND [date_pub] IS NULL) OR ([dat" +
                "e_pub] = @Original_date_pub)) AND ((@IsNull_status = 1 AND [status] IS NULL) OR " +
                "([status] = @Original_status)) AND ((@IsNull_dimension = 1 AND [dimension] IS NU" +
                "LL) OR ([dimension] = @Original_dimension)) AND ((@IsNull_weight = 1 AND [weight" +
                "] IS NULL) OR ([weight] = @Original_weight)) AND ((@IsNull_Disp_type = 1 AND [Di" +
                "sp_type] IS NULL) OR ([Disp_type] = @Original_Disp_type)) AND ((@IsNull_Disp_siz" +
                "e = 1 AND [Disp_size] IS NULL) OR ([Disp_size] = @Original_Disp_size)) AND ((@Is" +
                "Null_rng_type = 1 AND [rng_type] IS NULL) OR ([rng_type] = @Original_rng_type)) " +
                "AND ((@IsNull_custamization = 1 AND [custamization] IS NULL) OR ([custamization]" +
                " = @Original_custamization)) AND ((@IsNull_vibration = 1 AND [vibration] IS NULL" +
                ") OR ([vibration] = @Original_vibration)) AND ((@IsNull_phn_book = 1 AND [phn_bo" +
                "ok] IS NULL) OR ([phn_book] = @Original_phn_book)) AND ((@IsNull_call_rec = 1 AN" +
                "D [call_rec] IS NULL) OR ([call_rec] = @Original_call_rec)) AND ((@IsNull_card_s" +
                "lot = 1 AND [card_slot] IS NULL) OR ([card_slot] = @Original_card_slot)) AND ((@" +
                "IsNull_GPRS = 1 AND [GPRS] IS NULL) OR ([GPRS] = @Original_GPRS)) AND ((@IsNull_" +
                "HSCSD = 1 AND [HSCSD] IS NULL) OR ([HSCSD] = @Original_HSCSD)) AND ((@IsNull_EDG" +
                "E = 1 AND [EDGE] IS NULL) OR ([EDGE] = @Original_EDGE)) AND ((@IsNull_status_3g " +
                "= 1 AND [status_3g] IS NULL) OR ([status_3g] = @Original_status_3g)) AND ((@IsNu" +
                "ll_WLAN = 1 AND [WLAN] IS NULL) OR ([WLAN] = @Original_WLAN)) AND ((@IsNull_Bloo" +
                "tooth = 1 AND [Blootooth] IS NULL) OR ([Blootooth] = @Original_Blootooth)) AND (" +
                "(@IsNull_Infrared = 1 AND [Infrared] IS NULL) OR ([Infrared] = @Original_Infrare" +
                "d)) AND ((@IsNull_USB = 1 AND [USB] IS NULL) OR ([USB] = @Original_USB)) AND ((@" +
                "IsNull_OS = 1 AND [OS] IS NULL) OR ([OS] = @Original_OS)) AND ((@IsNull_Messegin" +
                "g = 1 AND [Messeging] IS NULL) OR ([Messeging] = @Original_Messeging)) AND ((@Is" +
                "Null_Browser = 1 AND [Browser] IS NULL) OR ([Browser] = @Original_Browser)) AND " +
                "((@IsNull_Clock = 1 AND [Clock] IS NULL) OR ([Clock] = @Original_Clock)) AND ((@" +
                "IsNull_Games = 1 AND [Games] IS NULL) OR ([Games] = @Original_Games)) AND ((@IsN" +
                "ull_Colors = 1 AND [Colors] IS NULL) OR ([Colors] = @Original_Colors)) AND ((@Is" +
                "Null_Lang_stat = 1 AND [Lang_stat] IS NULL) OR ([Lang_stat] = @Original_Lang_sta" +
                "t)) AND ((@IsNull_Camara = 1 AND [Camara] IS NULL) OR ([Camara] = @Original_Cama" +
                "ra)) AND ((@IsNull_Other_features = 1 AND [Other_features] IS NULL) OR ([Other_f" +
                "eatures] = @Original_Other_features)) AND ((@IsNull_Bat_type = 1 AND [Bat_type] " +
                "IS NULL) OR ([Bat_type] = @Original_Bat_type)) AND ((@IsNull_Bat_standby = 1 AND" +
                " [Bat_standby] IS NULL) OR ([Bat_standby] = @Original_Bat_standby)) AND ((@IsNul" +
                "l_bat_talk = 1 AND [bat_talk] IS NULL) OR ([bat_talk] = @Original_bat_talk)) AND" +
                " ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)) AND ((" +
                "@IsNull_Quantity = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Original_Quantity" +
                ")) AND ((@IsNull_Reorder_lvl = 1 AND [Reorder_lvl] IS NULL) OR ([Reorder_lvl] = " +
                "@Original_Reorder_lvl)) AND ((@IsNull_Hits = 1 AND [Hits] IS NULL) OR ([Hits] = " +
                "@Original_Hits)) AND ((@IsNull_BigImg = 1 AND [BigImg] IS NULL) OR ([BigImg] = @" +
                "Original_BigImg)) AND ((@IsNull_Smallimg = 1 AND [Smallimg] IS NULL) OR ([Smalli" +
                "mg] = @Original_Smallimg)) AND ((@IsNull_Thumnail = 1 AND [Thumnail] IS NULL) OR" +
                " ([Thumnail] = @Original_Thumnail)));\r\nSELECT phoneID, Network, man_id, date_pub" +
                ", status, dimension, weight, Disp_type, Disp_size, rng_type, custamization, vibr" +
                "ation, phn_book, call_rec, card_slot, GPRS, HSCSD, EDGE, status_3g, WLAN, Blooto" +
                "oth, Infrared, USB, OS, Messeging, Browser, Clock, Games, Colors, Lang_stat, Cam" +
                "ara, Other_features, Bat_type, Bat_standby, bat_talk, Price, Quantity, Reorder_l" +
                "vl, Hits, BigImg, Smallimg, Thumnail FROM phone_details WHERE (phoneID = @phoneI" +
                "D)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Network", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@date_pub", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@dimension", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@weight", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Disp_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Disp_size", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rng_type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@custamization", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@vibration", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phn_book", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@call_rec", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@card_slot", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GPRS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HSCSD", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EDGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status_3g", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@WLAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Blootooth", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Infrared", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USB", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Messeging", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Browser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Clock", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Games", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Colors", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Lang_stat", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Camara", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Other_features", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Bat_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Bat_standby", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@bat_talk", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "Price", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BigImg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Smallimg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Thumnail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Network", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Network", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Network", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_man_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_date_pub", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_date_pub", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "date_pub", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_dimension", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_dimension", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "dimension", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_weight", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Disp_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Disp_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Disp_size", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Disp_size", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Disp_size", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_rng_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_rng_type", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "rng_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_custamization", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_custamization", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "custamization", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_vibration", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_vibration", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "vibration", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_phn_book", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_phn_book", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "phn_book", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_call_rec", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_call_rec", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "call_rec", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_card_slot", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_card_slot", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "card_slot", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GPRS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GPRS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GPRS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HSCSD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HSCSD", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "HSCSD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EDGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EDGE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EDGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status_3g", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status_3g", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "status_3g", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_WLAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_WLAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "WLAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Blootooth", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Blootooth", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Blootooth", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Infrared", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Infrared", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Infrared", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USB", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USB", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "USB", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_OS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_OS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "OS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Messeging", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Messeging", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Messeging", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Browser", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Browser", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Browser", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Clock", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Clock", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Clock", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Games", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Games", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Games", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Colors", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Colors", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Colors", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Lang_stat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Lang_stat", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Lang_stat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Camara", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Camara", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Camara", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Other_features", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Other_features", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Other_features", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Bat_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Bat_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Bat_standby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Bat_standby", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Bat_standby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_bat_talk", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_bat_talk", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "bat_talk", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Price", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Price", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "Price", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Quantity", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Quantity", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Reorder_lvl", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Reorder_lvl", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Hits", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Hits", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BigImg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BigImg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BigImg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Smallimg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Smallimg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Smallimg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_Thumnail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Thumnail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Thumnail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT phoneID, Network, man_id, date_pub, status, dimension, weight, Disp_type, Disp_size, rng_type, custamization, vibration, phn_book, call_rec, card_slot, GPRS, HSCSD, EDGE, status_3g, WLAN, Blootooth, Infrared, USB, OS, Messeging, Browser, Clock, Games, Colors, Lang_stat, Camara, Other_features, Bat_type, Bat_standby, bat_talk, Price, Quantity, Reorder_lvl, Hits, BigImg, Smallimg, Thumnail FROM dbo.phone_details";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.phone_detailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.phone_detailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.phone_detailsDataTable dataTable = new gsmlanka_DataDataSet1.phone_detailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.phone_detailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "phone_details");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_phoneID, 
                    string Original_Network, 
                    int Original_man_id, 
                    string Original_date_pub, 
                    string Original_status, 
                    string Original_dimension, 
                    string Original_weight, 
                    string Original_Disp_type, 
                    string Original_Disp_size, 
                    string Original_rng_type, 
                    string Original_custamization, 
                    string Original_vibration, 
                    string Original_phn_book, 
                    string Original_call_rec, 
                    string Original_card_slot, 
                    string Original_GPRS, 
                    string Original_HSCSD, 
                    string Original_EDGE, 
                    string Original_status_3g, 
                    string Original_WLAN, 
                    string Original_Blootooth, 
                    string Original_Infrared, 
                    string Original_USB, 
                    string Original_OS, 
                    string Original_Messeging, 
                    string Original_Browser, 
                    string Original_Clock, 
                    string Original_Games, 
                    string Original_Colors, 
                    string Original_Lang_stat, 
                    string Original_Camara, 
                    string Original_Other_features, 
                    string Original_Bat_type, 
                    string Original_Bat_standby, 
                    string Original_bat_talk, 
                    System.Nullable<decimal> Original_Price, 
                    System.Nullable<int> Original_Quantity, 
                    System.Nullable<int> Original_Reorder_lvl, 
                    System.Nullable<int> Original_Hits, 
                    string Original_BigImg, 
                    string Original_Smallimg, 
                    string Original_Thumnail) {
            if ((Original_phoneID == null)) {
                throw new System.ArgumentNullException("Original_phoneID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_phoneID));
            }
            if ((Original_Network == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Network));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_man_id));
            if ((Original_date_pub == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_date_pub));
            }
            if ((Original_status == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_status));
            }
            if ((Original_dimension == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_dimension));
            }
            if ((Original_weight == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_weight));
            }
            if ((Original_Disp_type == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Disp_type));
            }
            if ((Original_Disp_size == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Disp_size));
            }
            if ((Original_rng_type == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_rng_type));
            }
            if ((Original_custamization == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_custamization));
            }
            if ((Original_vibration == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_vibration));
            }
            if ((Original_phn_book == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_phn_book));
            }
            if ((Original_call_rec == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_call_rec));
            }
            if ((Original_card_slot == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_card_slot));
            }
            if ((Original_GPRS == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_GPRS));
            }
            if ((Original_HSCSD == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_HSCSD));
            }
            if ((Original_EDGE == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_EDGE));
            }
            if ((Original_status_3g == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_status_3g));
            }
            if ((Original_WLAN == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_WLAN));
            }
            if ((Original_Blootooth == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_Blootooth));
            }
            if ((Original_Infrared == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_Infrared));
            }
            if ((Original_USB == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_USB));
            }
            if ((Original_OS == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_OS));
            }
            if ((Original_Messeging == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_Messeging));
            }
            if ((Original_Browser == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_Browser));
            }
            if ((Original_Clock == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_Clock));
            }
            if ((Original_Games == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_Games));
            }
            if ((Original_Colors == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_Colors));
            }
            if ((Original_Lang_stat == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_Lang_stat));
            }
            if ((Original_Camara == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_Camara));
            }
            if ((Original_Other_features == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_Other_features));
            }
            if ((Original_Bat_type == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_Bat_type));
            }
            if ((Original_Bat_standby == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_Bat_standby));
            }
            if ((Original_bat_talk == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_bat_talk));
            }
            if ((Original_Price.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_Price.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = System.DBNull.Value;
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((int)(Original_Quantity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = System.DBNull.Value;
            }
            if ((Original_Reorder_lvl.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((int)(Original_Reorder_lvl.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = System.DBNull.Value;
            }
            if ((Original_Hits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((int)(Original_Hits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = System.DBNull.Value;
            }
            if ((Original_BigImg == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_BigImg));
            }
            if ((Original_Smallimg == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_Smallimg));
            }
            if ((Original_Thumnail == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_Thumnail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string phoneID, 
                    string Network, 
                    int man_id, 
                    string date_pub, 
                    string status, 
                    string dimension, 
                    string weight, 
                    string Disp_type, 
                    string Disp_size, 
                    string rng_type, 
                    string custamization, 
                    string vibration, 
                    string phn_book, 
                    string call_rec, 
                    string card_slot, 
                    string GPRS, 
                    string HSCSD, 
                    string EDGE, 
                    string status_3g, 
                    string WLAN, 
                    string Blootooth, 
                    string Infrared, 
                    string USB, 
                    string OS, 
                    string Messeging, 
                    string Browser, 
                    string Clock, 
                    string Games, 
                    string Colors, 
                    string Lang_stat, 
                    string Camara, 
                    string Other_features, 
                    string Bat_type, 
                    string Bat_standby, 
                    string bat_talk, 
                    System.Nullable<decimal> Price, 
                    System.Nullable<int> Quantity, 
                    System.Nullable<int> Reorder_lvl, 
                    System.Nullable<int> Hits, 
                    string BigImg, 
                    string Smallimg, 
                    string Thumnail) {
            if ((phoneID == null)) {
                throw new System.ArgumentNullException("phoneID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(phoneID));
            }
            if ((Network == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Network));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(man_id));
            if ((date_pub == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(date_pub));
            }
            if ((status == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(status));
            }
            if ((dimension == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dimension));
            }
            if ((weight == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(weight));
            }
            if ((Disp_type == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Disp_type));
            }
            if ((Disp_size == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Disp_size));
            }
            if ((rng_type == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(rng_type));
            }
            if ((custamization == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(custamization));
            }
            if ((vibration == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(vibration));
            }
            if ((phn_book == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(phn_book));
            }
            if ((call_rec == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(call_rec));
            }
            if ((card_slot == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(card_slot));
            }
            if ((GPRS == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(GPRS));
            }
            if ((HSCSD == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(HSCSD));
            }
            if ((EDGE == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(EDGE));
            }
            if ((status_3g == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(status_3g));
            }
            if ((WLAN == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(WLAN));
            }
            if ((Blootooth == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Blootooth));
            }
            if ((Infrared == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Infrared));
            }
            if ((USB == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(USB));
            }
            if ((OS == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(OS));
            }
            if ((Messeging == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Messeging));
            }
            if ((Browser == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Browser));
            }
            if ((Clock == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Clock));
            }
            if ((Games == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Games));
            }
            if ((Colors == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Colors));
            }
            if ((Lang_stat == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Lang_stat));
            }
            if ((Camara == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Camara));
            }
            if ((Other_features == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Other_features));
            }
            if ((Bat_type == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Bat_type));
            }
            if ((Bat_standby == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Bat_standby));
            }
            if ((bat_talk == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(bat_talk));
            }
            if ((Price.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(Price.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Reorder_lvl.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(Reorder_lvl.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Hits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(Hits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((BigImg == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(BigImg));
            }
            if ((Smallimg == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Smallimg));
            }
            if ((Thumnail == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(Thumnail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string phoneID, 
                    string Network, 
                    int man_id, 
                    string date_pub, 
                    string status, 
                    string dimension, 
                    string weight, 
                    string Disp_type, 
                    string Disp_size, 
                    string rng_type, 
                    string custamization, 
                    string vibration, 
                    string phn_book, 
                    string call_rec, 
                    string card_slot, 
                    string GPRS, 
                    string HSCSD, 
                    string EDGE, 
                    string status_3g, 
                    string WLAN, 
                    string Blootooth, 
                    string Infrared, 
                    string USB, 
                    string OS, 
                    string Messeging, 
                    string Browser, 
                    string Clock, 
                    string Games, 
                    string Colors, 
                    string Lang_stat, 
                    string Camara, 
                    string Other_features, 
                    string Bat_type, 
                    string Bat_standby, 
                    string bat_talk, 
                    System.Nullable<decimal> Price, 
                    System.Nullable<int> Quantity, 
                    System.Nullable<int> Reorder_lvl, 
                    System.Nullable<int> Hits, 
                    string BigImg, 
                    string Smallimg, 
                    string Thumnail, 
                    string Original_phoneID, 
                    string Original_Network, 
                    int Original_man_id, 
                    string Original_date_pub, 
                    string Original_status, 
                    string Original_dimension, 
                    string Original_weight, 
                    string Original_Disp_type, 
                    string Original_Disp_size, 
                    string Original_rng_type, 
                    string Original_custamization, 
                    string Original_vibration, 
                    string Original_phn_book, 
                    string Original_call_rec, 
                    string Original_card_slot, 
                    string Original_GPRS, 
                    string Original_HSCSD, 
                    string Original_EDGE, 
                    string Original_status_3g, 
                    string Original_WLAN, 
                    string Original_Blootooth, 
                    string Original_Infrared, 
                    string Original_USB, 
                    string Original_OS, 
                    string Original_Messeging, 
                    string Original_Browser, 
                    string Original_Clock, 
                    string Original_Games, 
                    string Original_Colors, 
                    string Original_Lang_stat, 
                    string Original_Camara, 
                    string Original_Other_features, 
                    string Original_Bat_type, 
                    string Original_Bat_standby, 
                    string Original_bat_talk, 
                    System.Nullable<decimal> Original_Price, 
                    System.Nullable<int> Original_Quantity, 
                    System.Nullable<int> Original_Reorder_lvl, 
                    System.Nullable<int> Original_Hits, 
                    string Original_BigImg, 
                    string Original_Smallimg, 
                    string Original_Thumnail) {
            if ((phoneID == null)) {
                throw new System.ArgumentNullException("phoneID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(phoneID));
            }
            if ((Network == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Network));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(man_id));
            if ((date_pub == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(date_pub));
            }
            if ((status == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(status));
            }
            if ((dimension == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dimension));
            }
            if ((weight == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(weight));
            }
            if ((Disp_type == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Disp_type));
            }
            if ((Disp_size == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Disp_size));
            }
            if ((rng_type == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(rng_type));
            }
            if ((custamization == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(custamization));
            }
            if ((vibration == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(vibration));
            }
            if ((phn_book == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(phn_book));
            }
            if ((call_rec == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(call_rec));
            }
            if ((card_slot == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(card_slot));
            }
            if ((GPRS == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(GPRS));
            }
            if ((HSCSD == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(HSCSD));
            }
            if ((EDGE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(EDGE));
            }
            if ((status_3g == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(status_3g));
            }
            if ((WLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(WLAN));
            }
            if ((Blootooth == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Blootooth));
            }
            if ((Infrared == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Infrared));
            }
            if ((USB == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(USB));
            }
            if ((OS == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(OS));
            }
            if ((Messeging == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Messeging));
            }
            if ((Browser == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Browser));
            }
            if ((Clock == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Clock));
            }
            if ((Games == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Games));
            }
            if ((Colors == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Colors));
            }
            if ((Lang_stat == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Lang_stat));
            }
            if ((Camara == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Camara));
            }
            if ((Other_features == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Other_features));
            }
            if ((Bat_type == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Bat_type));
            }
            if ((Bat_standby == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Bat_standby));
            }
            if ((bat_talk == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(bat_talk));
            }
            if ((Price.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Price.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Reorder_lvl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Reorder_lvl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Hits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Hits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((BigImg == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(BigImg));
            }
            if ((Smallimg == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Smallimg));
            }
            if ((Thumnail == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Thumnail));
            }
            if ((Original_phoneID == null)) {
                throw new System.ArgumentNullException("Original_phoneID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_phoneID));
            }
            if ((Original_Network == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Network));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_man_id));
            if ((Original_date_pub == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_date_pub));
            }
            if ((Original_status == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_status));
            }
            if ((Original_dimension == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_dimension));
            }
            if ((Original_weight == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_weight));
            }
            if ((Original_Disp_type == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Disp_type));
            }
            if ((Original_Disp_size == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_Disp_size));
            }
            if ((Original_rng_type == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_rng_type));
            }
            if ((Original_custamization == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_custamization));
            }
            if ((Original_vibration == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_vibration));
            }
            if ((Original_phn_book == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_phn_book));
            }
            if ((Original_call_rec == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_call_rec));
            }
            if ((Original_card_slot == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_card_slot));
            }
            if ((Original_GPRS == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_GPRS));
            }
            if ((Original_HSCSD == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_HSCSD));
            }
            if ((Original_EDGE == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_EDGE));
            }
            if ((Original_status_3g == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_status_3g));
            }
            if ((Original_WLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_WLAN));
            }
            if ((Original_Blootooth == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_Blootooth));
            }
            if ((Original_Infrared == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_Infrared));
            }
            if ((Original_USB == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_USB));
            }
            if ((Original_OS == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_OS));
            }
            if ((Original_Messeging == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_Messeging));
            }
            if ((Original_Browser == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_Browser));
            }
            if ((Original_Clock == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Clock));
            }
            if ((Original_Games == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_Games));
            }
            if ((Original_Colors == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_Colors));
            }
            if ((Original_Lang_stat == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_Lang_stat));
            }
            if ((Original_Camara == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_Camara));
            }
            if ((Original_Other_features == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_Other_features));
            }
            if ((Original_Bat_type == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_Bat_type));
            }
            if ((Original_Bat_standby == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_Bat_standby));
            }
            if ((Original_bat_talk == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_bat_talk));
            }
            if ((Original_Price.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_Price.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = System.DBNull.Value;
            }
            if ((Original_Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = System.DBNull.Value;
            }
            if ((Original_Reorder_lvl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(Original_Reorder_lvl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = System.DBNull.Value;
            }
            if ((Original_Hits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_Hits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = System.DBNull.Value;
            }
            if ((Original_BigImg == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_BigImg));
            }
            if ((Original_Smallimg == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_Smallimg));
            }
            if ((Original_Thumnail == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_Thumnail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ratingsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ratingsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ratings";
            tableMapping.ColumnMappings.Add("ratingID", "ratingID");
            tableMapping.ColumnMappings.Add("rating", "rating");
            tableMapping.ColumnMappings.Add("ip", "ip");
            tableMapping.ColumnMappings.Add("phoneID", "phoneID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ratings] ([rating], [ip], [phoneID]) VALUES (@rating, @ip, @ph" +
                "oneID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@rating", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "rating", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ip", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ip", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@phoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "phoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ratingID, rating, ip, phoneID FROM dbo.ratings";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.ratingsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.ratingsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.ratingsDataTable dataTable = new gsmlanka_DataDataSet1.ratingsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.ratingsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ratings");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> rating, string ip, string phoneID) {
            if ((rating.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(rating.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((ip == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ip));
            }
            if ((phoneID == null)) {
                throw new System.ArgumentNullException("phoneID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(phoneID));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class temp_cartTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public temp_cartTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "temp_cart";
            tableMapping.ColumnMappings.Add("transID", "transID");
            tableMapping.ColumnMappings.Add("secCode", "secCode");
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("PhoneID", "PhoneID");
            tableMapping.ColumnMappings.Add("man_Id", "man_Id");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("totalamount", "totalamount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[temp_cart] ([transID], [secCode], [userID], [PhoneID], [man_Id" +
                "], [price], [Qty], [totalamount]) VALUES (@transID, @secCode, @userID, @PhoneID," +
                " @man_Id, @price, @Qty, @totalamount)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@transID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "transID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@secCode", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "secCode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@userID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "userID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhoneID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PhoneID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@man_Id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "man_Id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@price", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "price", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Qty", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Qty", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@totalamount", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "totalamount", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT transID, secCode, userID, PhoneID, man_Id, price, Qty, totalamount FROM db" +
                "o.temp_cart";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.temp_cartDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.temp_cartDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.temp_cartDataTable dataTable = new gsmlanka_DataDataSet1.temp_cartDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.temp_cartDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "temp_cart");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string transID, System.Nullable<int> secCode, string userID, string PhoneID, int man_Id, decimal price, int Qty, decimal totalamount) {
            if ((transID == null)) {
                throw new System.ArgumentNullException("transID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(transID));
            }
            if ((secCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(secCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((userID == null)) {
                throw new System.ArgumentNullException("userID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(userID));
            }
            if ((PhoneID == null)) {
                throw new System.ArgumentNullException("PhoneID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PhoneID));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(man_Id));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(price));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Qty));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(totalamount));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UsersTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Users";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("Pass_word", "Pass_word");
            tableMapping.ColumnMappings.Add("F_Name", "F_Name");
            tableMapping.ColumnMappings.Add("L_Name", "L_Name");
            tableMapping.ColumnMappings.Add("Bday", "Bday");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Sec_Question", "Sec_Question");
            tableMapping.ColumnMappings.Add("Answer", "Answer");
            tableMapping.ColumnMappings.Add("Priviladge", "Priviladge");
            tableMapping.ColumnMappings.Add("Posts", "Posts");
            tableMapping.ColumnMappings.Add("JoinedDate", "JoinedDate");
            tableMapping.ColumnMappings.Add("ImageURL", "ImageURL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Users] ([UserID], [Pass_word], [F_Name], [L_Name], [Bday], [Gender], [Email], [Country], [Zip], [Address], [Phone], [Sec_Question], [Answer], [Priviladge], [Posts], [JoinedDate], [ImageURL]) VALUES (@UserID, @Pass_word, @F_Name, @L_Name, @Bday, @Gender, @Email, @Country, @Zip, @Address, @Phone, @Sec_Question, @Answer, @Priviladge, @Posts, @JoinedDate, @ImageURL)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@UserID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "UserID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Pass_word", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Pass_word", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@F_Name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "F_Name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@L_Name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "L_Name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Bday", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Bday", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Gender", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Gender", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Country", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Country", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Zip", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Zip", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Phone", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "Phone", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Sec_Question", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Sec_Question", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Answer", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Answer", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Priviladge", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "Priviladge", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Posts", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "Posts", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JoinedDate", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "JoinedDate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ImageURL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ImageURL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::binding_source1.Properties.Settings.Default.gsmlanka_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UserID, Pass_word, F_Name, L_Name, Bday, Gender, Email, Country, Zip, Addr" +
                "ess, Phone, Sec_Question, Answer, Priviladge, Posts, JoinedDate, ImageURL FROM d" +
                "bo.Users";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsmlanka_DataDataSet1.UsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsmlanka_DataDataSet1.UsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsmlanka_DataDataSet1.UsersDataTable dataTable = new gsmlanka_DataDataSet1.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1.UsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsmlanka_DataDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Users");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string UserID, 
                    string Pass_word, 
                    string F_Name, 
                    string L_Name, 
                    string Bday, 
                    string Gender, 
                    string Email, 
                    string Country, 
                    string Zip, 
                    string Address, 
                    string Phone, 
                    string Sec_Question, 
                    string Answer, 
                    string Priviladge, 
                    System.Nullable<int> Posts, 
                    string JoinedDate, 
                    string ImageURL) {
            if ((UserID == null)) {
                throw new System.ArgumentNullException("UserID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserID));
            }
            if ((Pass_word == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Pass_word));
            }
            if ((F_Name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(F_Name));
            }
            if ((L_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(L_Name));
            }
            if ((Bday == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Bday));
            }
            if ((Gender == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Gender));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Email));
            }
            if ((Country == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Country));
            }
            if ((Zip == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Zip));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Address));
            }
            if ((Phone == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Phone));
            }
            if ((Sec_Question == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Sec_Question));
            }
            if ((Answer == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Answer));
            }
            if ((Priviladge == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Priviladge));
            }
            if ((Posts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(Posts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((JoinedDate == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(JoinedDate));
            }
            if ((ImageURL == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ImageURL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591