From: "Saved by Windows Internet Explorer 7"
Subject: C# 3.0 in a Nutshell - Code Listings
Date: Mon, 21 Apr 2008 11:58:21 +0200
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_00DF_01C8A3A6.FE938B00"
X-MimeOLE: Produced By Microsoft MimeOLE V6.0.6000.16545

This is a multi-part message in MIME format.

------=_NextPart_000_00DF_01C8A3A6.FE938B00
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.albahari.com/nutshell/ch14.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML lang=3Den><HEAD><TITLE>C# 3.0 in a Nutshell - Code =
Listings</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252"><LINK=20
href=3D"http://www.albahari.com/nutshell/styles.css" type=3Dtext/css=20
rel=3Dstylesheet><LINK =
href=3D"http://www.albahari.com/nutshell/styles.css"=20
type=3Dtext/css rel=3Dstylesheet><LINK media=3Dprint=20
href=3D"http://www.albahari.com/nutshell/print.css" type=3Dtext/css =
rel=3Dstylesheet>
<STYLE type=3Dtext/css>A.sidelink2:visited {
	COLOR: black
}
A.sidelink2:link {
	COLOR: black
}
</STYLE>
<!--[if IE 6]>
<link href=3D"ie.css" rel=3D"stylesheet" type=3D"text/css" =
media=3D"screen">
<![endif]--><!--[if IE 7]><LINK media=3Dscreen=20
href=3D"http://www.albahari.com/nutshell/ie7.css" type=3Dtext/css =
rel=3Dstylesheet><![endif]-->
<META content=3D"MSHTML 6.00.6000.16643" name=3DGENERATOR></HEAD>
<BODY>
<DIV id=3Dmaincode>
<H1>Code Listings</H1>
<H2>Chapter 14: Networking</H2>
<P>IP Addresses:</P><PRE>IPAddress a1 =3D new IPAddress (new byte[] { =
101, 102, 103, 104 });
IPAddress a2 =3D IPAddress.Parse ("101.102.103.104");
Console.WriteLine (a1.Equals (a2));                     // True
Console.WriteLine (a1.AddressFamily);                   // InterNetwork

IPAddress a3 =3D IPAddress.Parse
  ("[3EA0:FFFF:198A:E4A3:4FF2:54fA:41BC:8D31]");
Console.WriteLine (a3.AddressFamily);   // =
InterNetworkV6</PRE><PRE>IPAddress a =3D IPAddress.Parse =
("101.102.103.104");
IPEndPoint ep =3D new IPEndPoint (a, 222);           // Port 222
Console.WriteLine (ep.ToString());                 // =
101.102.103.104:222</PRE>
<P>URIs:</P><PRE>Uri info =3D new Uri =
("http://www.domain.com:80/info/");
Uri page =3D new Uri ("http://www.domain.com/info/page.html");

Console.WriteLine (info.Host);     // www.domain.com
Console.WriteLine (info.Port);     // 80
Console.WriteLine (page.Port);     // 80  (Uri knows the default HTTP =
port)

Console.WriteLine (info.IsBaseOf (page));         // True
Uri relative =3D info.MakeRelativeUri (page);
Console.WriteLine (relative.IsAbsoluteUri);       // False
Console.WriteLine (relative.ToString());          // page.html</PRE>
<P>Simple use of WebClient:</P><PRE>using (WebClient wc =3D new =
WebClient())
{
  wc.Proxy =3D null;
  wc.DownloadFile ("http://www.albahari.com/nutshell/code.html",
                   "code.html");
}
System.Diagnostics.Process.Start ("code.html");</PRE>
<P>Simple use of WebRequest / WebResponse:</P><PRE>WebRequest req =3D =
WebRequest.Create=20
                ("http://www.albahari.com/nutshell/code.html");
req.Proxy =3D null;
using (WebResponse res =3D req.GetResponse())
using (Stream s =3D res.GetResponseStream())
using (StreamReader sr =3D new StreamReader(s))
  File.WriteAllText ("code.html", sr.ReadToEnd());

System.Diagnostics.Process.Start ("code.html");</PRE>
<P>Proxies:</P><PRE>// Create a WebProxy with the proxy's IP address and =
port. You can
// optionally set Credentials if the proxy needs a username/password.

WebProxy p =3D new WebProxy ("192.178.10.49", 808);
p.Credentials =3D new NetworkCredential ("username", "password");
// or:
p.Credentials =3D new NetworkCredential ("username", "password", =
"domain");

using (WebClient wc =3D new WebClient())
{
  wc.Proxy =3D p;
  ...
}

// Same procedure with a WebRequest object:
WebRequest req =3D WebRequest.Create ("...");
req.Proxy =3D p;</PRE>
<P>Authentication:</P><PRE>using (WebClient wc =3D new WebClient())
{
  wc.Proxy =3D null;
  wc.BaseAddress =3D "ftp://ftp.albahari.com/incoming/";

  // Authenticate, then upload and download a file to the FTP server.
  // The same approach also works for HTTP and HTTPS.

  string username =3D "anonymous@albahari.com";
  string password =3D "";
  wc.Credentials =3D new NetworkCredential (username, password);

  wc.DownloadFile ("guestbook.txt", "guestbook.txt");
 =20
  string data =3D "Hello from " + Environment.UserName + "!\r\n";
  File.AppendAllText ("guestbook.txt", data);

  wc.UploadFile ("guestbook.txt", "guestbook.txt");
}</PRE>
<P>CredentialCache:</P><PRE>CredentialCache cache =3D new =
CredentialCache();
Uri prefix =3D new Uri ("http://exchange.mydomain.com");
cache.Add (prefix, "Digest",  new NetworkCredential ("joe", "passwd"));
cache.Add (prefix, "Negotiate", new NetworkCredential ("joe", =
"passwd"));

WebClient wc =3D new WebClient();
wc.Credentials =3D cache;
...</PRE>
<P>Concurrency without asynchronous event methods:</P><PRE>using System;
using System.Net;
using System.Threading;

class ThreadTest
{
  static void Main()
  {
    new Thread (Download).Start();
    Console.WriteLine ("I'm still here while the download's =
happening!");
    Console.ReadLine();
  }

  static void Download()
  {
    using (WebClient wc =3D new WebClient())
      try
      {
        wc.Proxy =3D null;
        wc.DownloadFile ("http://www.oreilly.com", "oreilly.html");
        Console.WriteLine ("Finished!");
      }
      catch (Exception ex)
      {
        // Process exception...
      }
  }
}</PRE>
<P>Exception handling with =
WebClient/WebRequest/WebResponse:</P><PRE>using (WebClient wc =3D new =
WebClient())
  try
  {
    wc.Proxy =3D null;
    string s =3D wc.DownloadString ("http://www.albahari.com/notthere");
  }
  catch (WebException ex)
  {
    if (ex.Status =3D=3D WebExceptionStatus.NameResolutionFailure)
      Console.WriteLine ("Bad domain name");
    else if (ex.Status =3D=3D WebExceptionStatus.ProtocolError)
    {
      HttpWebResponse response =3D (HttpWebResponse) ex.Response;
      Console.WriteLine (response.StatusDescription);      // "Not =
Found"
      if (response.StatusCode =3D=3D HttpStatusCode.NotFound)
        Console.WriteLine ("Not there!");                  // "Not =
there!"
    }
    else throw;
  }</PRE>
<P>HTTP headers:</P><PRE>using (WebClient wc =3D new WebClient())
{
  wc.Proxy =3D null;
  wc.Headers.Add ("CustomHeader", "JustPlaying/1.0");
  wc.DownloadString ("http://www.oreilly.com");

  foreach (string name in wc.ResponseHeaders.Keys)
    Console.WriteLine (name + "=3D" + wc.ResponseHeaders [name]);
}</PRE>
<P>HTTP query strings:</P><PRE>using (WebClient wc =3D new WebClient())
{
  wc.Proxy =3D null;
  wc.QueryString.Add ("q", "WebClient");     // Search for "WebClient"
  wc.QueryString.Add ("hl", "fr");           // Display page in French
  wc.DownloadFile ("http://www.google.com/search", "results.html");
  System.Diagnostics.Process.Start ("results.html");
}</PRE>
<P>Uploading form data with WebClient:</P><PRE>using (WebClient wc =3D =
new WebClient())
{       =20
  wc.Proxy =3D null;
 =20
  var data =3D new System.Collections.Specialized.NameValueCollection();
  data.Add ("searchtextbox", "webclient");
  data.Add ("searchmode", "simple");

  byte[] result =3D wc.UploadValues ("http://safari.oreilly.com/search",
                                   "POST", data);

  System.IO.File.WriteAllBytes ("SearchResults.html", result);
  System.Diagnostics.Process.Start ("SearchResults.html");
}</PRE>
<P>Uploading form data with WebRequest:</P><PRE>WebRequest req =3D =
WebRequest.Create ("http://safari.oreilly.com/search");

req.Proxy =3D null;
req.Method =3D "POST";
req.ContentType =3D "application/x-www-form-urlencoded";

string reqString
  =3D "searchtextbox=3Dwebclient&amp;searchmode=3Dsimple";
byte[] reqData =3D Encoding.UTF8.GetBytes (reqString);
req.ContentLength =3D reqData.Length;

using (Stream reqStream =3D req.GetRequestStream())
  reqStream.Write (reqData, 0, reqData.Length);

using (WebResponse res =3D req.GetResponse())
using (Stream resSteam =3D res.GetResponseStream())
using (StreamReader sr =3D new StreamReader (resSteam))
  File.WriteAllText ("SearchResults.html", sr.ReadToEnd());

System.Diagnostics.Process.Start ("SearchResults.html");</PRE>
<P>Cookies:</P><PRE>CookieContainer cc =3D new CookieContainer();

var request =3D (HttpWebRequest) WebRequest.Create =
("http://www.google.com");
request.Proxy =3D null;
request.CookieContainer =3D cc;
using (var response =3D (HttpWebResponse) request.GetResponse())
{
  foreach (Cookie c in response.Cookies)
  {
    Console.WriteLine (" Name:   " + c.Name);
    Console.WriteLine (" Value:  " + c.Value);
    Console.WriteLine (" Path:   " + c.Path);
    Console.WriteLine (" Domain: " + c.Domain);
  }
  // Read response stream...
}</PRE>
<P>Forms authentication:</P><PRE>string loginUri =3D =
"http://www.webshots.com/login";
string username =3D "username";
string password =3D "password";
string reqString =3D "username=3D" + username + "&amp;password=3D" + =
password;
byte[] requestData =3D Encoding.UTF8.GetBytes (reqString);

CookieContainer cc =3D new CookieContainer();
var request =3D (HttpWebRequest)WebRequest.Create (loginUri);
request.Proxy =3D null;
request.CookieContainer =3D cc;
request.Method =3D "POST";

request.ContentType =3D "application/x-www-form-urlencoded";   =20
request.ContentLength =3D requestData.Length;
using (Stream s =3D request.GetRequestStream())
  s.Write (requestData, 0, requestData.Length);

using (var response =3D (HttpWebResponse) request.GetResponse())
  foreach (Cookie c in response.Cookies)
    Console.WriteLine (c.Name + " =3D " + c.Value);</PRE>
<P>SSL:</P><PRE>using System.Net;
using System.Net.Security;
using System.Security.Cryptography.X509Certificates;
=85
static void ConfigureSSL()
{
  ServicePointManager.ServerCertificateValidationCallback =3D =
CertChecker;
}

static bool CertChecker (object sender, X509Certificate certificate,
                         X509Chain chain, SslPolicyErrors errors)
{
  // Return true if you're happy with the certificate
  =85
}</PRE>
<P>Writing a simple HTTP server:</P><PRE>static void Main()
{
  new System.Threading.Thread (Listen).Start(); // Run server in =
parallel.
  Thread.Sleep (500);                           // Wait half a second.
 =20
  using (WebClient wc =3D new WebClient())        // Make a client =
request.
    Console.WriteLine (wc.DownloadString    =20
      ("http://localhost:51111/MyApp/Request.txt"));
}

static void Listen()
{
  HttpListener listener =3D new HttpListener();
  listener.Prefixes.Add ("http://localhost:51111/MyApp/");  // Listen on
  listener.Start();                                         // port =
51111.

  // Wait for a client request:
  HttpListenerContext context =3D listener.GetContext();

  // Respond to the request:
  string msg =3D "You asked for: " + context.Request.RawUrl;
  context.Response.ContentLength64 =3D Encoding.UTF8.GetByteCount (msg);
  context.Response.StatusCode =3D (int) HttpStatusCode.OK;

  using (Stream s =3D context.Response.OutputStream)
  using (StreamWriter writer =3D new StreamWriter (s))
    writer.Write (msg);

  listener.Stop();
}</PRE>
<P>Writing a blocking pooled HTTP server:</P><PRE>using System;
using System.IO;
using System.Net;
using System.Text;
using System.Threading;

class WebServer
{
  HttpListener _listener;
  string _baseFolder;      // Your web page folder.

  public WebServer (string uriPrefix, string baseFolder)
  {
    System.Threading.ThreadPool.SetMaxThreads (50, 1000);
    System.Threading.ThreadPool.SetMinThreads (50, 50);
    _listener =3D new HttpListener();
    _listener.Prefixes.Add (uriPrefix);
    _baseFolder =3D baseFolder;
  }

  public void Start()          // Run this on a separate thread, as
  {                            // we did before.
    _listener.Start();
    while (true)
      try
      {
        HttpListenerContext request =3D _listener.GetContext();
        ThreadPool.QueueUserWorkItem (ProcessRequest, request);
      }
      catch (HttpListenerException)     { break; }   // Listener =
stopped.
      catch (InvalidOperationException) { break; }   // Listener =
stopped.
  }

  public void Stop() { _listener.Stop(); }

  void ProcessRequest (object listenerContext)
  {
    try
    {
      var context =3D (HttpListenerContext) listenerContext;
      string filename =3D Path.GetFileName (context.Request.RawUrl);
      string path =3D Path.Combine (_baseFolder, filename);
      byte[] msg;
      if (!File.Exists (path))
      {
        context.Response.StatusCode =3D (int) HttpStatusCode.NotFound;
        msg =3D Encoding.UTF8.GetBytes ("Sorry, that page does not =
exist");
      }
      else
      {
        context.Response.StatusCode =3D (int) HttpStatusCode.OK;
        msg =3D File.ReadAllBytes (path);
      }
      context.Response.ContentLength64 =3D msg.Length;
      using (Stream s =3D context.Response.OutputStream)
        s.Write (msg, 0, msg.Length);
    }
    catch (Exception ex) { Console.WriteLine ("Request error: " + ex); }
  }
}</PRE><PRE>static void Main()
{
  // Listen on the default port (80), serving files in =
e:\mydocs\webroot:
  var server =3D new WebServer ("http://localhost/", =
@"e:\mydocs\webroot");

  // Start the server on a parallel thread:
  new System.Threading.Thread (server.Start).Start(); =20

  Console.WriteLine ("Server running... press Enter to stop");
  Console.ReadLine();
  server.Stop();
}</PRE>
<P>Using FTP:</P><PRE>using (WebClient wc =3D new WebClient())
{
  wc.Proxy =3D null;
  wc.Credentials =3D new NetworkCredential ("anonymous@albahari.com", =
"");
  wc.BaseAddress =3D "ftp://ftp.albahari.com/incoming/";

  wc.UploadString ("tempfile.txt", "hello!");
  Console.WriteLine (wc.DownloadString ("tempfile.txt"));   // hello!
}</PRE>
<P>FTP ListDirectory:</P><PRE>var req =3D (FtpWebRequest) =
WebRequest.Create (
                          "ftp://ftp.albahari.com/incoming");
req.Proxy =3D null;
req.Credentials =3D new NetworkCredential ("anonymous@albahari.com", =
"");

req.Method =3D WebRequestMethods.Ftp.ListDirectory;

using (WebResponse resp =3D req.GetResponse())
using (StreamReader reader =3D new StreamReader =
(resp.GetResponseStream()) )
  Console.WriteLine (reader.ReadToEnd());</PRE>
<P>FTP GetFileSize:</P><PRE>var req =3D (FtpWebRequest) =
WebRequest.Create (
                          =
"ftp://ftp.albahari.com/incoming/tempfile.txt");
req.Proxy =3D null;
req.Credentials =3D new NetworkCredential ("anonymous@albahari.com", =
"");

req.Method =3D WebRequestMethods.Ftp.GetFileSize;

using (WebResponse resp =3D req.GetResponse())
  Console.WriteLine (resp.ContentLength);             // 6</PRE>
<P>FTP LastModified:</P><PRE>req.Method =3D =
WebRequestMethods.Ftp.GetDateTimestamp;

using (var resp =3D (FtpWebResponse) req.GetResponse() )
  Console.WriteLine (resp.LastModified);</PRE>
<P>FTP Rename:</P><PRE>var req =3D (FtpWebRequest) WebRequest.Create (
                          =
"ftp://ftp.albahari.com/incoming/tempfile.txt");
req.Proxy =3D null;
req.Credentials =3D new NetworkCredential ("anonymous@albahari.com", =
"");

req.Method =3D WebRequestMethods.Ftp.Rename;
req.RenameTo =3D "deleteme.txt";

req.GetResponse().Close();        // Perform the rename</PRE>
<P>FTP DeleteFile:</P><PRE>var req =3D (FtpWebRequest) WebRequest.Create =
(
                          =
"ftp://ftp.albahari.com/incoming/deleteme.txt");
req.Proxy =3D null;
req.Credentials =3D new NetworkCredential ("anonymous@albahari.com", =
"");

req.Method =3D WebRequestMethods.Ftp.DeleteFile;

req.GetResponse().Close();        // Perform the deletion</PRE>
<P>Sending Mail with SmtpClient:</P><PRE>SmtpClient client =3D new =
SmtpClient();
client.Host =3D "mail.myisp.net";
client.Send ("from@adomain.com", "to@adomain.com", "subject", =
"body");</PRE>
<P>Mail attachments:</P><PRE>SmtpClient client =3D new SmtpClient();
client.Host =3D "mail.myisp.net";
MailMessage mm =3D new MailMessage();

mm.Sender =3D new MailAddress ("kay@domain.com", "Kay");
mm.From   =3D new MailAddress ("kay@domain.com", "Kay");
mm.To.Add  (new MailAddress ("bob@domain.com", "Bob"));
mm.CC.Add  (new MailAddress ("dan@domain.com", "Dan"));
mm.Subject =3D "Hello!";
mm.Body =3D "Hi there. Here's the photo!";
mm.IsBodyHtml =3D false;
mm.Priority =3D MailPriority.High;

Attachment a =3D new Attachment ("photo.jpg",
                               =
System.Net.Mime.MediaTypeNames.Image.Jpeg);
mm.Attachments.Add (a);

client.Send (mm);</PRE>
<P>TCP ping-pong:</P><PRE>using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Threading;

class TcpDemo
{
  static void Main()
  {
    new Thread (Server).Start();       // Run server method =
concurrently.
    Thread.Sleep (500);                // Give server time to start.
    Client();
  }

  static void Client()
  {
    using (TcpClient client =3D new TcpClient ("localhost", 51111))      =
     =20
    using (NetworkStream n =3D client.GetStream())
    {
      BinaryWriter w =3D new BinaryWriter (n);
      w.Write ("Hello");
      w.Flush();
      Console.WriteLine (new BinaryReader (n).ReadString());
    }
  }

  static void Server()     // Handles a single client request, then =
exits.
  {
    TcpListener listener =3D new TcpListener (IPAddress.Any, 51111);
    listener.Start();
    using (TcpClient c =3D listener.AcceptTcpClient())
    using (NetworkStream n =3D c.GetStream())
    {
      string msg =3D new BinaryReader (n).ReadString();
      BinaryWriter w =3D new BinaryWriter (n);
      w.Write (msg + " right back!");
      w.Flush();                      // Must call Flush because we're =
not
    }                                 // disposing the writer.
    listener.Stop();
  }
}</PRE>
<P>Receiving POP3 mail:</P><PRE>static void Receive()
{
  using (TcpClient client =3D new TcpClient ("mail.isp.com ", 110))
  using (NetworkStream n =3D client.GetStream())
  {
    ReadLine (n);                             // Read the welcome =
message.
    SendCommand (n, "USER username");
    SendCommand (n, "PASS password");
    SendCommand (n, "LIST");                  // Retrieve message IDs
    List&lt;int&gt; messageIDs =3D new List&lt;int&gt;();
    while (true)
    {
      string line =3D ReadLine (n);             // e.g.  "1 1876"
      if (line =3D=3D ".") break;
      messageIDs.Add (int.Parse (line.Split (' ')[0] ));   // Message ID
    }

    foreach (int id in messageIDs)         // Retrieve each message.
    {
      SendCommand (n, "RETR " + id);
      string randomFile =3D Guid.NewGuid().ToString() + ".eml";
      using (StreamWriter writer =3D File.CreateText (randomFile))
        while (true)
        {
          string line =3D ReadLine (n);      // Read next line of =
message.
          if (line =3D=3D ".") break;          // Single dot =3D end of =
message.
          if (line =3D=3D "..") line =3D ".";    // "Escape out" double =
dot.
          writer.WriteLine (line);         // Write to output file.
        }
      SendCommand (n, "DELE " + id);       // Delete message off server.
    }
    SendCommand (n, "QUIT");
  }
}

static string ReadLine (Stream s)
{
  List&lt;byte&gt; lineBuffer =3D new List&lt;byte&gt;();
  while (true)
  {
    int b =3D s.ReadByte();
    if (b =3D=3D 10 || b &lt; 0) break;
    if (b !=3D 13) lineBuffer.Add ((byte)b);
  }
  return Encoding.UTF8.GetString (lineBuffer.ToArray());
}

static void SendCommand (Stream stream, string line)
{
  byte[] data =3D Encoding.UTF8.GetBytes (line + "\r\n");
  stream.Write (data, 0, data.Length);
  string response =3D ReadLine (stream);
  if (!response.StartsWith ("+OK"))
    throw new Exception ("POP Error: " + response);
}</PRE>
<P style=3D"TEXT-ALIGN: center"><SPAN style=3D"FONT-SIZE: 80%">=A9 2007, =
O'Reilly=20
Media, Inc. All rights reserved</SPAN></P></DIV><!--webbot =
bot=3D"Include" U-Include=3D"sidecode.html" TAG=3D"BODY" startspan -->
<DIV id=3Dside>
<DIV id=3Dsideinner>
<TABLE cellSpacing=3D0 cellPadding=3D0 width=3D"100%" border=3D0>
  <TBODY>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle><A=20
      href=3D"http://www.albahari.com/nutshell/"><IMG alt=3D"C# 3.0 in a =
Nutshell"=20
      src=3D""> </A></TD></TR></TBODY></TABLE>
<DIV class=3Dshadow>
<DIV class=3Dshadowinner>
<TABLE class=3Dsidetable cellSpacing=3D0 cellPadding=3D0 width=3D"100%" =
border=3D0>
  <TBODY>
  <TR>
    <TD vAlign=3Dcenter align=3Dmiddle><A=20
      href=3D"http://www.albahari.com/nutshell/"><IMG alt=3D"C# 3.0" =
src=3D"">=20
  </A></TD></TR>
  <TR>
    <TD style=3D"BACKGROUND: #bf2c19" vAlign=3Dcenter align=3Dmiddle><A=20
      href=3D"http://www.albahari.com/nutshell/"><IMG alt=3D"in a =
Nutshell" src=3D"">=20
      </A></TD></TR>
  <TR>
    <TD vAlign=3Dcenter align=3Dmiddle><A=20
      href=3D"http://www.albahari.com/nutshell/"><IMG=20
      alt=3D"Joseph Albahari &amp; Ben Albahari" src=3D""> =
</A></TD></TR>
  <TR>
    <TD align=3Dmiddle>
      <P class=3Dcompanionwebsite>Companion Website</P></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle>
      <TABLE class=3Dsidelink cellSpacing=3D0 cellPadding=3D0 =
width=3D"90%">
        <TBODY>
        <TR>
          <TD vAlign=3Dbottom align=3Dleft><IMG alt=3D"" src=3D""> </TD>
          <TD vAlign=3Dbottom align=3Dright><A class=3Dsidelink1=20
            href=3D"http://www.albahari.com/nutshell/about.html">About =
the=20
            Book</A> </TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle><!-- #BeginEditable "subcontent1" =
-->&nbsp;<!-- #EndEditable --></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle>
      <TABLE class=3Dsidelink cellSpacing=3D0 cellPadding=3D0 =
width=3D"90%">
        <TBODY>
        <TR>
          <TD vAlign=3Dbottom align=3Dleft><IMG alt=3D"" src=3D""> </TD>
          <TD vAlign=3Dbottom align=3Dright><A class=3Dsidelink2=20
            href=3D"http://www.albahari.com/nutshell/code.html">Code =
Listings</A>=20
          </TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle><!-- #BeginEditable "subcontent2" =
-->
      <TABLE class=3Dsubcontent cellSpacing=3D0 cellPadding=3D0 =
width=3D"90%">
        <TBODY>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch06.html">Chapter =
6</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch16.html">Chapter=20
        16</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch07.html">Chapter =
7</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch17.html">Chapter=20
        17</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch08.html">Chapter =
8</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch18.html">Chapter=20
        18</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch09.html">Chapter =
9</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch19.html">Chapter=20
        19</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch10.html">Chapter =
10</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch20.html">Chapter=20
        20</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch11.html">Chapter =
11</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch21.html">Chapter=20
        21</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch13.html">Chapter =
13</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch22.html">Chapter=20
        22</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch14.html">Chapter =
14</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch23.html">Chapter=20
        23</A></TD></TR>
        <TR>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch15.html">Chapter =
15</A></TD>
          <TD align=3Dright><A class=3Dsublink=20
            href=3D"http://www.albahari.com/nutshell/ch24.html">Chapter=20
        24</A></TD></TR></TBODY></TABLE><!-- #EndEditable --></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle>
      <TABLE class=3Dsidelink cellSpacing=3D0 cellPadding=3D0 =
width=3D"90%">
        <TBODY>
        <TR>
          <TD vAlign=3Dbottom align=3Dleft><IMG alt=3D"" src=3D""> </TD>
          <TD vAlign=3Dbottom align=3Dright><A class=3Dsidelink3=20
            =
href=3D"http://www.albahari.com/nutshell/extras.html">Extras</A>=20
        </TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle><!-- #BeginEditable "subcontent3" =
-->&nbsp;<!-- #EndEditable --></TD></TR>
  <TR>
    <TD vAlign=3Dtop align=3Dmiddle>
      <TABLE class=3Dsidelink cellSpacing=3D0 cellPadding=3D0 =
width=3D"90%">
        <TBODY>
        <TR>
          <TD vAlign=3Dbottom align=3Dleft><IMG alt=3D"" src=3D""> </TD>
          <TD vAlign=3Dbottom align=3Dright><A class=3Dsidelink4=20
            =
href=3D"http://www.albahari.com/nutshell/contact.html">Contact=20
            Authors</A> </TD></TR></TBODY></TABLE><BR></TD></TR>
  <TR>
    <TD align=3Dright>
      <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D"95%">
        <TBODY>
        <TR>
          <TD align=3Dleft>
            <FORM action=3Dhttp://books.google.com/books#search>
            <P><SPAN style=3D"FONT-SIZE: 90%"><B>Search =
book:</B></SPAN><BR><INPUT=20
            type=3Dhidden value=3D_Y0rWd-Q2xkC name=3Did> <INPUT =
name=3Dq> <INPUT type=3Dsubmit value=3DGo>=20
  =
</P></FORM></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></DIV></DI=
V>
<DIV style=3D"MARGIN-TOP: 0.5em">
<TABLE>
  <TBODY>
  <TR>
    <TD><A href=3D"http://www.albahari.com/nutshell/amazon/"><IMG=20
      alt=3D"Buy from amazon.com" src=3D""> </A></TD>
    <TD>Available =
now</TD></TR></TBODY></TABLE></DIV></DIV></DIV><!--webbot =
bot=3D"Include" i-checksum=3D"45118" endspan --></BODY></HTML>

------=_NextPart_000_00DF_01C8A3A6.FE938B00
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.albahari.com/nutshell/styles.css

BODY {
	PADDING-LEFT: 320px; BACKGROUND: #f6f6f6; MARGIN: 0px; COLOR: black; =
FONT-FAMILY: cambria, georgia, serif
}
P {
	FONT-SIZE: 105%
}
DIV#main {
	PADDING-RIGHT: 3em; MIN-WIDTH: 20em; MAX-WIDTH: 40em; PADDING-BOTTOM: =
0.5em; PADDING-TOP: 0.5em
}
DIV#maincode {
	PADDING-RIGHT: 3em; MIN-WIDTH: 45em; MAX-WIDTH: 55em; PADDING-BOTTOM: =
0.5em; PADDING-TOP: 0.5em
}
DIV#maininner {
=09
}
DIV#side {
	PADDING-LEFT: 20px; FONT-SIZE: 90%; BACKGROUND: #f6f6f6; LEFT: 0px; =
OVERFLOW: auto; WIDTH: 270px; COLOR: black; FONT-FAMILY: arial, =
sans-serif; POSITION: absolute; TOP: 0px; HEIGHT: 100%
}
DIV#sideinner {
=09
}

@media Screen   =20
{
BODY > DIV#side {
	POSITION: fixed
}
    }
.shadow {
	MARGIN-TOP: 6px; BACKGROUND: url(shadow.gif) no-repeat right bottom; =
MARGIN-LEFT: 0px
}
.shadowinner {
	RIGHT: 6px; BOTTOM: 6px; POSITION: relative
}
TABLE.sidetable {
	BORDER-RIGHT: #bf2c19 4px solid; BORDER-TOP: #bf2c19 4px solid; =
BACKGROUND: white; BORDER-LEFT: #bf2c19 4px solid; BORDER-BOTTOM: =
#bf2c19 4px solid
}
TABLE.sidelink {
	MARGIN-TOP: 0em; MARGIN-BOTTOM: 0em; BORDER-BOTTOM: #4c4c4c 2px solid
}
TABLE.subcontent {
	MARGIN-TOP: 0.2em; MARGIN-BOTTOM: 0.3em
}
P.companionwebsite {
	MARGIN-TOP: 0.5em; FONT-WEIGHT: bold; FONT-SIZE: 90%; MARGIN-BOTTOM: =
0.5em; COLOR: #bf2c19; FONT-FAMILY: arial, sans-serif
}
P.foot {
	FONT-SIZE: 80%; COLOR: #4c4c4c
}
P {
	MARGIN-TOP: 0.7em; MARGIN-BOTTOM: 0.7em
}
LI {
	MARGIN-TOP: 0.7em; MARGIN-BOTTOM: 0.7em
}
UL {
	MARGIN-TOP: 0.5em; MARGIN-BOTTOM: 0.6em
}
IMG {
	DISPLAY: block; BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none
}
A.sidelink:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink1:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink1:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink2:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink2:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink3:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink3:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink4:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink4:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A:link {
	COLOR: #0060c0
}
A.sublink:link {
	COLOR: #0060c0
}
A:visited {
	COLOR: #4c4c4c
}
A.sublink:link {
	COLOR: #4c4c4c
}
A.sublink:link {
	FONT-WEIGHT: bold; FONT-SIZE: 90%; FONT-FAMILY: arial; TEXT-DECORATION: =
none
}
A.sublink:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 90%; FONT-FAMILY: arial; TEXT-DECORATION: =
none
}
P.cell {
	MARGIN: 0.3em
}
PRE {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
P.progout {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
P.boilercode {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
PRE {
	BORDER-RIGHT: #808080 thin solid; PADDING-RIGHT: 0.3em; BORDER-TOP: =
#808080 thin solid; MARGIN-TOP: 0.3em; PADDING-LEFT: 0.3em; =
MARGIN-BOTTOM: 0.9em; PADDING-BOTTOM: 0.1pt; BORDER-LEFT: #808080 thin =
solid; PADDING-TOP: 0.2em; BORDER-BOTTOM: #808080 thin solid; =
BACKGROUND-COLOR: #f9f8dd
}
P.question {
	MARGIN-TOP: 1.5em; FONT-WEIGHT: bold; COLOR: #bf2c19; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
P.tocchapter {
	MARGIN-TOP: 0.7em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0.2em; =
BORDER-BOTTOM: #4c4c4c thin solid; FONT-FAMILY: arial, sans-serif
}
P.progout {
	BORDER-RIGHT: thin ridge; PADDING-RIGHT: 0.3em; BORDER-TOP: thin ridge; =
PADDING-LEFT: 0.3em; BACKGROUND-IMAGE: url(output.png); PADDING-BOTTOM: =
0.3em; MARGIN: 0.6em 7mm; BORDER-LEFT: thin ridge; COLOR: white; =
PADDING-TOP: 27px; BORDER-BOTTOM: thin ridge; BACKGROUND-REPEAT: =
repeat-x; BACKGROUND-COLOR: #202020
}
P.caption {
	MARGIN-TOP: 1em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0.2em; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
P.boilercode {
	BORDER-RIGHT: #808080 thin dashed; PADDING-RIGHT: 0.3em; BORDER-TOP: =
#808080 thin dashed; MARGIN-TOP: 0.3em; PADDING-LEFT: 0.3em; =
MARGIN-BOTTOM: 0.6em; PADDING-BOTTOM: 0pt; BORDER-LEFT: #808080 thin =
dashed; PADDING-TOP: 0.2em; BORDER-BOTTOM: #808080 thin dashed; =
BACKGROUND-COLOR: #f9f8dd
}
P.boilercaption {
	MARGIN-TOP: 0.5em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0em; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
DIV.figure {
	BORDER-RIGHT: #4c4c4c thin solid; PADDING-RIGHT: 0.5em; BORDER-TOP: =
#4c4c4c thin solid; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; =
BORDER-LEFT: #4c4c4c thin solid; PADDING-TOP: 0.5em; BORDER-BOTTOM: =
#4c4c4c thin solid; BACKGROUND-COLOR: white; TEXT-ALIGN: center
}
P.figurecaption {
	FONT-SIZE: 90%; MARGIN-BOTTOM: 1em; FONT-STYLE: italic
}
P.title {
	MARGIN-TOP: 0.4em; FONT-WEIGHT: bold; FONT-SIZE: 220%; MARGIN-BOTTOM: =
0.2em; COLOR: #4c4c4c; FONT-FAMILY: candara, sans-serif; TEXT-ALIGN: =
center
}
P.titlequote {
	MARGIN-TOP: 0.2em; FONT-WEIGHT: bold; FONT-SIZE: 110%; MARGIN-BOTTOM: =
2em; COLOR: #bf2c19; FONT-STYLE: italic; FONT-FAMILY: candara, =
sans-serif; TEXT-ALIGN: center
}
H1 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H2 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H3 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H1 {
	MARGIN-TOP: 1em; FONT-SIZE: 170%; MARGIN-BOTTOM: 0.4em; PADDING-BOTTOM: =
0em; COLOR: #4c4c4c; BORDER-BOTTOM: 2px solid
}
H2 {
	MARGIN-TOP: 1.3em; FONT-SIZE: 130%; MARGIN-BOTTOM: 0.5em; COLOR: =
#bf2c19
}
H3 {
	MARGIN-TOP: 1em; MARGIN-BOTTOM: 0em; FONT-STYLE: italic
}
H4 {
	MARGIN-TOP: 1em; FONT-SIZE: 110%; MARGIN-BOTTOM: 0.2em; FONT-FAMILY: =
candara, sans-serif
}
P.note {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; PADDING-LEFT: 80px; BACKGROUND-IMAGE: =
url(pawprints.png); PADDING-BOTTOM: 16px; MARGIN: 0.5em 7mm; =
BORDER-LEFT: thin solid; PADDING-TOP: 16px; BORDER-BOTTOM: thin solid; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-COLOR: white
}
P.warning {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; PADDING-LEFT: 80px; BACKGROUND-IMAGE: =
url(pawprints.png); PADDING-BOTTOM: 16px; MARGIN: 0.5em 7mm; =
BORDER-LEFT: thin solid; PADDING-TOP: 16px; BORDER-BOTTOM: thin solid; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-COLOR: white
}
P.note {
	BORDER-LEFT-COLOR: navy; BORDER-BOTTOM-COLOR: navy; BORDER-TOP-COLOR: =
navy; BORDER-RIGHT-COLOR: navy
}
P.warning {
	BORDER-LEFT-COLOR: #b02000; BORDER-BOTTOM-COLOR: #b02000; =
BORDER-TOP-COLOR: #b02000; BORDER-RIGHT-COLOR: #b02000
}
SPAN.pseudo {
	COLOR: #ff6600; FONT-FAMILY: "comic sans ms", cursive
}
SPAN.lit {
	FONT-WEIGHT: bold
}
SPAN.techitalic {
	FONT-STYLE: italic
}
SPAN.emphasis {
	FONT-STYLE: italic
}
SPAN.strong {
	FONT-WEIGHT: bold
}
SPAN.blue {
	COLOR: blue
}
SPAN.red {
	COLOR: red
}
P.quizq {
	BACKGROUND-POSITION: 3px 20%; MARGIN-TOP: 3em; PADDING-LEFT: 80px; =
FONT-WEIGHT: bold; BACKGROUND-IMAGE: url(quizq.png); PADDING-BOTTOM: =
15px; PADDING-TOP: 15px; BACKGROUND-REPEAT: no-repeat
}
DIV.quiza {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; MARGIN-TOP: 0.5em; DISPLAY: none; =
PADDING-LEFT: 80px; BACKGROUND-IMAGE: url(pawprints.png); MARGIN-BOTTOM: =
0.3em; PADDING-BOTTOM: 2px; MARGIN-LEFT: 0px; BORDER-LEFT: thin solid; =
PADDING-TOP: 2px; BORDER-BOTTOM: thin solid; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-COLOR: white
}

------=_NextPart_000_00DF_01C8A3A6.FE938B00
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.albahari.com/nutshell/styles.css

BODY {
	PADDING-LEFT: 320px; BACKGROUND: #f6f6f6; MARGIN: 0px; COLOR: black; =
FONT-FAMILY: cambria, georgia, serif
}
P {
	FONT-SIZE: 105%
}
DIV#main {
	PADDING-RIGHT: 3em; MIN-WIDTH: 20em; MAX-WIDTH: 40em; PADDING-BOTTOM: =
0.5em; PADDING-TOP: 0.5em
}
DIV#maincode {
	PADDING-RIGHT: 3em; MIN-WIDTH: 45em; MAX-WIDTH: 55em; PADDING-BOTTOM: =
0.5em; PADDING-TOP: 0.5em
}
DIV#maininner {
=09
}
DIV#side {
	PADDING-LEFT: 20px; FONT-SIZE: 90%; BACKGROUND: #f6f6f6; LEFT: 0px; =
OVERFLOW: auto; WIDTH: 270px; COLOR: black; FONT-FAMILY: arial, =
sans-serif; POSITION: absolute; TOP: 0px; HEIGHT: 100%
}
DIV#sideinner {
=09
}

@media Screen   =20
{
BODY > DIV#side {
	POSITION: fixed
}
    }
.shadow {
	MARGIN-TOP: 6px; BACKGROUND: url(shadow.gif) no-repeat right bottom; =
MARGIN-LEFT: 0px
}
.shadowinner {
	RIGHT: 6px; BOTTOM: 6px; POSITION: relative
}
TABLE.sidetable {
	BORDER-RIGHT: #bf2c19 4px solid; BORDER-TOP: #bf2c19 4px solid; =
BACKGROUND: white; BORDER-LEFT: #bf2c19 4px solid; BORDER-BOTTOM: =
#bf2c19 4px solid
}
TABLE.sidelink {
	MARGIN-TOP: 0em; MARGIN-BOTTOM: 0em; BORDER-BOTTOM: #4c4c4c 2px solid
}
TABLE.subcontent {
	MARGIN-TOP: 0.2em; MARGIN-BOTTOM: 0.3em
}
P.companionwebsite {
	MARGIN-TOP: 0.5em; FONT-WEIGHT: bold; FONT-SIZE: 90%; MARGIN-BOTTOM: =
0.5em; COLOR: #bf2c19; FONT-FAMILY: arial, sans-serif
}
P.foot {
	FONT-SIZE: 80%; COLOR: #4c4c4c
}
P {
	MARGIN-TOP: 0.7em; MARGIN-BOTTOM: 0.7em
}
LI {
	MARGIN-TOP: 0.7em; MARGIN-BOTTOM: 0.7em
}
UL {
	MARGIN-TOP: 0.5em; MARGIN-BOTTOM: 0.6em
}
IMG {
	DISPLAY: block; BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; BORDER-BOTTOM-STYLE: none
}
A.sidelink:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink1:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink1:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink2:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink2:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink3:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink3:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink4:link {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A.sidelink4:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 110%; COLOR: #0060c0; FONT-FAMILY: arial, =
sans-serif; TEXT-DECORATION: none
}
A:link {
	COLOR: #0060c0
}
A.sublink:link {
	COLOR: #0060c0
}
A:visited {
	COLOR: #4c4c4c
}
A.sublink:link {
	COLOR: #4c4c4c
}
A.sublink:link {
	FONT-WEIGHT: bold; FONT-SIZE: 90%; FONT-FAMILY: arial; TEXT-DECORATION: =
none
}
A.sublink:visited {
	FONT-WEIGHT: bold; FONT-SIZE: 90%; FONT-FAMILY: arial; TEXT-DECORATION: =
none
}
P.cell {
	MARGIN: 0.3em
}
PRE {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
P.progout {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
P.boilercode {
	FONT-SIZE: 90%; FONT-FAMILY: consolas, "courier new", monospace
}
PRE {
	BORDER-RIGHT: #808080 thin solid; PADDING-RIGHT: 0.3em; BORDER-TOP: =
#808080 thin solid; MARGIN-TOP: 0.3em; PADDING-LEFT: 0.3em; =
MARGIN-BOTTOM: 0.9em; PADDING-BOTTOM: 0.1pt; BORDER-LEFT: #808080 thin =
solid; PADDING-TOP: 0.2em; BORDER-BOTTOM: #808080 thin solid; =
BACKGROUND-COLOR: #f9f8dd
}
P.question {
	MARGIN-TOP: 1.5em; FONT-WEIGHT: bold; COLOR: #bf2c19; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
P.tocchapter {
	MARGIN-TOP: 0.7em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0.2em; =
BORDER-BOTTOM: #4c4c4c thin solid; FONT-FAMILY: arial, sans-serif
}
P.progout {
	BORDER-RIGHT: thin ridge; PADDING-RIGHT: 0.3em; BORDER-TOP: thin ridge; =
PADDING-LEFT: 0.3em; BACKGROUND-IMAGE: url(output.png); PADDING-BOTTOM: =
0.3em; MARGIN: 0.6em 7mm; BORDER-LEFT: thin ridge; COLOR: white; =
PADDING-TOP: 27px; BORDER-BOTTOM: thin ridge; BACKGROUND-REPEAT: =
repeat-x; BACKGROUND-COLOR: #202020
}
P.caption {
	MARGIN-TOP: 1em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0.2em; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
P.boilercode {
	BORDER-RIGHT: #808080 thin dashed; PADDING-RIGHT: 0.3em; BORDER-TOP: =
#808080 thin dashed; MARGIN-TOP: 0.3em; PADDING-LEFT: 0.3em; =
MARGIN-BOTTOM: 0.6em; PADDING-BOTTOM: 0pt; BORDER-LEFT: #808080 thin =
dashed; PADDING-TOP: 0.2em; BORDER-BOTTOM: #808080 thin dashed; =
BACKGROUND-COLOR: #f9f8dd
}
P.boilercaption {
	MARGIN-TOP: 0.5em; FONT-WEIGHT: bold; MARGIN-BOTTOM: 0em; FONT-STYLE: =
italic; FONT-FAMILY: arial, sans-serif
}
DIV.figure {
	BORDER-RIGHT: #4c4c4c thin solid; PADDING-RIGHT: 0.5em; BORDER-TOP: =
#4c4c4c thin solid; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; =
BORDER-LEFT: #4c4c4c thin solid; PADDING-TOP: 0.5em; BORDER-BOTTOM: =
#4c4c4c thin solid; BACKGROUND-COLOR: white; TEXT-ALIGN: center
}
P.figurecaption {
	FONT-SIZE: 90%; MARGIN-BOTTOM: 1em; FONT-STYLE: italic
}
P.title {
	MARGIN-TOP: 0.4em; FONT-WEIGHT: bold; FONT-SIZE: 220%; MARGIN-BOTTOM: =
0.2em; COLOR: #4c4c4c; FONT-FAMILY: candara, sans-serif; TEXT-ALIGN: =
center
}
P.titlequote {
	MARGIN-TOP: 0.2em; FONT-WEIGHT: bold; FONT-SIZE: 110%; MARGIN-BOTTOM: =
2em; COLOR: #bf2c19; FONT-STYLE: italic; FONT-FAMILY: candara, =
sans-serif; TEXT-ALIGN: center
}
H1 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H2 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H3 {
	FONT-WEIGHT: bold; FONT-FAMILY: arial, sans-serif; TEXT-ALIGN: left
}
H1 {
	MARGIN-TOP: 1em; FONT-SIZE: 170%; MARGIN-BOTTOM: 0.4em; PADDING-BOTTOM: =
0em; COLOR: #4c4c4c; BORDER-BOTTOM: 2px solid
}
H2 {
	MARGIN-TOP: 1.3em; FONT-SIZE: 130%; MARGIN-BOTTOM: 0.5em; COLOR: =
#bf2c19
}
H3 {
	MARGIN-TOP: 1em; MARGIN-BOTTOM: 0em; FONT-STYLE: italic
}
H4 {
	MARGIN-TOP: 1em; FONT-SIZE: 110%; MARGIN-BOTTOM: 0.2em; FONT-FAMILY: =
candara, sans-serif
}
P.note {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; PADDING-LEFT: 80px; BACKGROUND-IMAGE: =
url(pawprints.png); PADDING-BOTTOM: 16px; MARGIN: 0.5em 7mm; =
BORDER-LEFT: thin solid; PADDING-TOP: 16px; BORDER-BOTTOM: thin solid; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-COLOR: white
}
P.warning {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; PADDING-LEFT: 80px; BACKGROUND-IMAGE: =
url(pawprints.png); PADDING-BOTTOM: 16px; MARGIN: 0.5em 7mm; =
BORDER-LEFT: thin solid; PADDING-TOP: 16px; BORDER-BOTTOM: thin solid; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-COLOR: white
}
P.note {
	BORDER-LEFT-COLOR: navy; BORDER-BOTTOM-COLOR: navy; BORDER-TOP-COLOR: =
navy; BORDER-RIGHT-COLOR: navy
}
P.warning {
	BORDER-LEFT-COLOR: #b02000; BORDER-BOTTOM-COLOR: #b02000; =
BORDER-TOP-COLOR: #b02000; BORDER-RIGHT-COLOR: #b02000
}
SPAN.pseudo {
	COLOR: #ff6600; FONT-FAMILY: "comic sans ms", cursive
}
SPAN.lit {
	FONT-WEIGHT: bold
}
SPAN.techitalic {
	FONT-STYLE: italic
}
SPAN.emphasis {
	FONT-STYLE: italic
}
SPAN.strong {
	FONT-WEIGHT: bold
}
SPAN.blue {
	COLOR: blue
}
SPAN.red {
	COLOR: red
}
P.quizq {
	BACKGROUND-POSITION: 3px 20%; MARGIN-TOP: 3em; PADDING-LEFT: 80px; =
FONT-WEIGHT: bold; BACKGROUND-IMAGE: url(quizq.png); PADDING-BOTTOM: =
15px; PADDING-TOP: 15px; BACKGROUND-REPEAT: no-repeat
}
DIV.quiza {
	BORDER-RIGHT: thin solid; PADDING-RIGHT: 1em; BACKGROUND-POSITION: 7px =
20%; BORDER-TOP: thin solid; MARGIN-TOP: 0.5em; DISPLAY: none; =
PADDING-LEFT: 80px; BACKGROUND-IMAGE: url(pawprints.png); MARGIN-BOTTOM: =
0.3em; PADDING-BOTTOM: 2px; MARGIN-LEFT: 0px; BORDER-LEFT: thin solid; =
PADDING-TOP: 2px; BORDER-BOTTOM: thin solid; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-COLOR: white
}

------=_NextPart_000_00DF_01C8A3A6.FE938B00
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.albahari.com/nutshell/print.css

BODY {
	PADDING-LEFT: 0pt; FONT-SIZE: 90%; MARGIN: 1em 1%; LINE-HEIGHT: 1.2; =
FONT-FAMILY: "times new roman", serif
}
DIV#main {
	PADDING-RIGHT: 2em; MIN-WIDTH: 20em; PADDING-LEFT: 2em; MAX-WIDTH: =
55em; PADDING-BOTTOM: 2em; PADDING-TOP: 2em
}
DIV#side {
	PADDING-RIGHT: 0.5em; PADDING-LEFT: 0.5em; FONT-SIZE: 90%; BACKGROUND: =
white; LEFT: 0px; PADDING-BOTTOM: 0.5em; OVERFLOW: hidden; COLOR: black; =
PADDING-TOP: 0.5em; FONT-FAMILY: arial, sans-serif; POSITION: relative; =
TOP: 0px
}
PRE {
	FONT-SIZE: 90%; FONT-FAMILY: "courier new", monospace
}
.progout {
	FONT-SIZE: 90%; FONT-FAMILY: "courier new", monospace
}
.boilercode {
	FONT-SIZE: 90%; FONT-FAMILY: "courier new", monospace
}
.figure {
	MARGIN-LEFT: 0mm
}
.figurecaption {
	MARGIN-LEFT: 0mm
}
.progout {
	BORDER-RIGHT: ridge; PADDING-RIGHT: 0.5em; BORDER-TOP: ridge; =
PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.3em; BORDER-LEFT: ridge; COLOR: =
black; PADDING-TOP: 0.3em; BORDER-BOTTOM: ridge; BACKGROUND-COLOR: white
}
.boilercode {
	BACKGROUND-COLOR: white
}

------=_NextPart_000_00DF_01C8A3A6.FE938B00
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Location: http://www.albahari.com/nutshell/ie7.css

DIV#side {
	OVERFLOW: visible
}

@media Screen    
{
BODY > DIV#side {
	POSITION: absolute
}

}

------=_NextPart_000_00DF_01C8A3A6.FE938B00--
