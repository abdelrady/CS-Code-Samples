<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://www.codeproject.com/internet/caanetadminclass.asp -->
<HTML><HEAD><TITLE>A set of Network Management Classes - The Code Project - Internet & Network</TITLE>
<META http-equiv=Reply-to content=mailto:webmaster@codeproject.com>
<META http-equiv=Content-Type content="text/html; charset=ISO-8859-1">
<META content=en-US name=MS.LOCALE>
<META 
content="A set of classes that make it easy to work with Network Management." 
name=Description>
<META content=kbArticle name=Search.TopicType>
<META content="Carlos Antollini" name=Author>
<META content="29 Nov 2001 14:00:00 GMT" name=Search.PublishDate>
<META content="21 Jan 2002 14:00:00 GMT" name=Search.RevisedDate>
<META 
content="Free source code, , Visual C++, MFC, Windows, MFC, Network Management" 
name=keywords>
<META 
content="Article content copyright Carlos Antollini, 2001, everthing else Copyright © CodeProject, 1999-2007, All Rights Reserved." 
name=Copyright><LINK title="CodeProject Lounge Postings" 
href="http://www.codeproject.com/webservices/LoungeRSS.aspx" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - All topics" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=1" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - MFC / C++" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=2" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - C#" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=3" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - ASP.NET" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=4" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - .NET" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=5" 
type=application/rss+xml rel=alternate><LINK 
title="CodeProject Latest articles - VB.NET" 
href="http://www.codeproject.com/webservices/articlerss.aspx?cat=6" 
type=application/rss+xml rel=alternate><LINK title="The Code Project" 
href="http://www.codeproject.com/info/OpenSearch.xml" 
type=application/opensearchdescription+xml rel=search><LINK href="/favicon.ico" 
type=image/ico rel=icon><LINK href="/favicon.ico" rel="SHORTCUT ICON"><LINK 
href="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/global.css" 
type=text/css rel=stylesheet>
<SCRIPT language=javascript 
src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/oncopy.js"></SCRIPT>

<SCRIPT language=javascript>
if (top != self) top.location.href = location.href;
if (typeof(DemoUrl) != "undefined")
	document.write('<me' + 'ta http' + '-equiv="re' + 'fresh" con' + 'tent="1;url=' + DemoUrl + '">');
</SCRIPT>

<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY style="MARGIN: 0px" oncopy="return copyCode();" text=black vLink=navy 
aLink=red link=blue bgColor=white>
<SCRIPT 
src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/urchin.js" 
type=text/javascript>
</SCRIPT>

<SCRIPT type=text/javascript>
_uacct = "UA-1735123-1";
urchinTracker();
</SCRIPT>

<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD class=HeaderLogo><A href="http://www.codeproject.com/"><IMG height=90 
      alt=Home 
      src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/codeproject225x90.gif" 
      border=0></A></TD>
    <TD class=HeaderBanner><SPAN id=AdBanner4>
      <SCRIPT language=javascript>document.write("<IFRAME src=\"/script/ann/ServeHTML.aspx?C=False&id=3386&cb=6569939\" border=0 frameborder=0 scrolling=no width=728 height=90></IFRAME>");</SCRIPT>
      </SPAN></TD></TR>
  <TR>
    <TD colSpan=2>
      <TABLE class=MemberNavBar cellSpacing=0 cellPadding=5 width="100%" 
      border=0>
        <TBODY>
        <TR vAlign=center>
          <TD class=smallText style="FONT-WEIGHT: bold">4,371,495 members and 
            growing! &nbsp; 9,523 now online. </TD>
          <TD class=userNavText align=right><A 
            href="http://www.codeproject.com/script/profile/whos_who.asp?id=2959938">abdelrady2030 
            </A>| <A 
            href="http://www.codeproject.com/script/profile/modify.asp?ct=/internet/caanetadminclass.asp"><B>My 
            Settings</B></A> | <A 
            href="http://www.codeproject.com/script/profile/bookmark_list.asp">My 
            Bookmarks</A> | <A 
            href="http://www.codeproject.com/script/articles/list_articles.asp?userid=2959938">My 
            Articles</A> | <A 
            href="http://www.codeproject.com/script/profile/logoff.asp?ct=/internet/caanetadminclass.asp">Sign 
            out</A> </TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD colSpan=2>
      <TABLE class=SiteNavBar id=tblSiteToolbar cellSpacing=0 cellPadding=0>
        <TBODY>
        <TR>
          <TD><A href="http://www.codeproject.com/">Home</A></TD>
          <TD noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=2">MFC/C++</A></TD>
          <TD><A href="http://www.codeproject.com/index.asp?cat=3">C#</A></TD>
          <TD noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=4">ASP.NET</A></TD>
          <TD noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=6">VB.NET</A></TD>
          <TD noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=8">Architect</A></TD>
          <TD noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=9">SQL</A></TD>
          <TD class=SelCat noWrap><A 
            href="http://www.codeproject.com/index.asp?cat=1">All Topics</A></TD>
          <TD width="100%">&nbsp;</TD>
          <TD>
            <DIV id=MenuPos 
            style="WIDTH: 300px; POSITION: relative; TOP: 1px; HEIGHT: 22px">
            <TABLE id=MPH 
            style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; HEIGHT: 20px; BORDER-RIGHT-WIDTH: 0px" 
            cellSpacing=0 cellPadding=0 width=300>
              <TBODY>
              <TR vAlign=center>
                <TD 
                style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
                noWrap><A 
                  href="http://www.codeproject.com/info/faq.asp">Help!</A></TD>
                <TD 
                style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
                noWrap><A 
                  href="http://www.codeproject.com/info/latest.asp">Articles</A></TD>
                <TD 
                style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
                noWrap><A 
                  href="http://www.codeproject.com/script/comments/forums.asp">Message 
                  Boards</A></TD>
                <TD 
                style="BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px" 
                noWrap><A 
                  href="http://www.codeproject.com/lounge.asp">Lounge</A></TD></TR></TBODY></TABLE></DIV></TD></TR></TBODY></TABLE>
      <SCRIPT type=text/javascript>function Go(){return}</SCRIPT>

      <SCRIPT 
      src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/cpmenu_var.js" 
      type=text/javascript></SCRIPT>

      <SCRIPT 
      src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/menu10_com.js" 
      type=text/javascript></SCRIPT>

      <SCRIPT type=text/javascript>
var MPH = document.getElementById("MPH");
if (MPH) MPH.style.display='none';
</SCRIPT>
    </TD></TR>
  <TR>
    <TD colSpan=2>
      <TABLE class=ArticleHeader cellSpacing=0 cellPadding=3 width="100%">
        <TBODY>
        <TR vAlign=top>
          <TD class=smallText style="PADDING-RIGHT: 10px"><A 
            href="http://www.codeproject.com/?cat=1">All Topics</A>, <A 
            href="http://www.codeproject.com/?cat=2">MFC/C++</A> &gt;&gt; <A 
            href="http://www.codeproject.com/internet/">Internet &amp; 
            Network</A> &gt;&gt; <A 
            href="http://www.codeproject.com/internet/#General">General</A><BR><BR>
            <DIV style="FONT-WEIGHT: bold; FONT-SIZE: 16pt">A set of Network 
            Management Classes</DIV><B>By <A 
            href="http://www.codeproject.com/script/Articles/list_articles.asp?userid=7401">Carlos 
            Antollini</A></B>. <BR><BR>
            <DIV style="FONT-SIZE: 12px">A set of classes that make it easy to 
            work with Network Management.</DIV></TD>
          <TD class=smallText style="WIDTH: 200px">C++ (VC7, VC6, 
            VC5)<BR>Windows (WinXP, Win2K, NT4)<BR>MFC, Win32, 
            VS<BR>Dev<BR><SPAN style="PADDING-RIGHT: 2ex">Posted</SPAN>: <B>30 
            Nov 2001</B><BR><SPAN style="PADDING-RIGHT: 0.3ex">Updated</SPAN>: 
            <B>22 Jan 2002</B><BR><SPAN style="PADDING-RIGHT: 3ex">Views</SPAN>: 
            <B>106,054</B> </TD></TR></TD></TR></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR vAlign=top>
          <TD class=LHNavBar rowSpan=2><!-- Yes, there are IE hacks that will allow us to create a min-width DIV 
	     (eg http://www.webreference.com/programming/min-width/) but I couldn't
	     be arsed. Wait for it in v2.0 -->
            <DIV class=FeatureBlockHeader>Announcements</DIV>
            <DIV class="FeatureBlockContent RHFeatureBar">
            <DIV style="PADDING-TOP: 5px"><IMG 
            style="PADDING-RIGHT: 10px; FLOAT: left; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px" 
            height=20 alt=Comp 
            src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/prize_winner_sm.gif" 
            width=10><A 
            href="http://www.codeproject.com/script/competitions/monthly/">Monthly 
            Competition</A></DIV></DIV>
            <CENTER>
            <SCRIPT language=javascript>document.write("<a href=\"/script/admentor/admentorredir.asp?id=3075&way=ban\" target=_blank><img src=\"/script/ann/ServeImg.aspx?File=%2Fscript%2Fadmentor%2Fimages%2Faspose%5F160x600%5FAni%5FTotal%5FStr%2Egif&C=False&id=3075&cb=6569944\" alt=\"\" border=0 width=160 height=600></a>");</SCRIPT>
            </CENTER><BR><BR><IMG height=1 
            src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/t.gif" 
            width=160> </TD>
          <TD width="100%">
            <TABLE class=SearchHeaderBar cellSpacing=0 width="100%">
              <TBODY>
              <TR>
                <TD vAlign=center noWrap align=right width="60%">
                  <FORM style="MARGIN: 0px" name=Search action=/info/search.asp 
                  method=post><B>Search &nbsp;</B><INPUT class=smallText 
                  style="WIDTH: 200px" name=target> <SELECT 
                  style="FONT-WEIGHT: bold; FONT-SIZE: 8pt" name=st> <OPTION 
                    value=kw selected>Articles</OPTION> <OPTION 
                    value=au>Authors</OPTION></SELECT> <INPUT style="FONT-WEIGHT: bold; FONT-SIZE: 8pt" type=submit value=" Go! "> 
                  &nbsp; </FORM></TD>
                <TD class=tinyText noWrap><A 
                  href="http://www.codeproject.com/info/search.asp">Advanced 
                  Search</A><BR><A 
                  href="http://www.codeproject.com/script/articles/sections.asp">Sitemap</A> 
                </TD></TR></TBODY></TABLE>
            <TABLE width="100%">
              <TBODY>
              <TR vAlign=top>
                <TD class=SmallText noWrap>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD class=smallText noWrap><IMG 
                        src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/print.gif" 
                        align=absMiddle> <A 
                        href="http://www.codeproject.com/internet/caanetadminclass.asp?print=true" 
                        target=_print>Print</A></TD>
                      <TD class=smallText noWrap><IMG 
                        src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/sitebuild_icon.gif" 
                        align=absMiddle><A 
                        href="http://www.codeproject.com/script/submit/ReportProblem.asp?GUID=%2Fuseritems%2FcaaNetAdminclass%2Easp%2D11%2F30%2F2001">Broken 
                        Article?</A></TD>
                      <TD class=smallText noWrap><IMG 
                        src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/link.gif" 
                        align=absMiddle><A 
                        href="http://www.codeproject.com/script/profile/add_bookmark.asp?t=0&amp;ct=%2Finternet%2Fcaanetadminclass%2Easp&amp;guid=%2Fuseritems%2FcaaNetAdminclass%2Easp%2D11%2F30%2F2001">Bookmark</A></TD>
                      <TD class=smallText noWrap><IMG 
                        src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/mail_small.gif" 
                        align=absMiddle> <A 
                        href="http://www.codeproject.com/internet/caanetadminclass.asp#__comments">Discuss</A></TD>
                      <TD class=smallText noWrap><IMG 
                        src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/mail.gif" 
                        align=absMiddle> <A 
                        href="http://www.codeproject.com/script/recommend/form.asp?guid=%2Fuseritems%2FcaaNetAdminclass%2Easp%2D11%2F30%2F2001">Send 
                        to a friend</A></TD></TR></TBODY></TABLE></TD>
                <TD noWrap align=right><A name=__top></A>
                  <TABLE>
                    <TBODY>
                    <TR>
                      <TD class=smallText align=right>31 votes for this 
                        article.</TD>
                      <TD>
                        <TABLE cellSpacing=0 cellPadding=0 border=2>
                          <TBODY>
                          <TR>
                            <TD><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/red.gif" 
                              width=20 border=0></TD>
                            <TD><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/red.gif" 
                              width=20 border=0></TD>
                            <TD><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/red.gif" 
                              width=20 border=0></TD>
                            <TD><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/red.gif" 
                              width=20 border=0></TD>
                            <TD><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/red.gif" 
                              width=12 border=0><IMG height=5 
                              src="A set of Network Management Classes - The Code Project - Internet &amp; Network_files/white.gif" 
                              width=8 border=0></TD></TR></TBODY></TABLE></TD></TR>
                    <TR>
                      <TD class=smallText align=right colSpan=2><A 
                        title="Calculated as rating x Log10(# votes)" 
                        href="http://www.codeproject.com/script/articles/top_articles.asp?st=2">Popularity: 
                        6.87</A>. Rating: <B>4.6</B> out of 
                  5.</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD></TR>
        <TR>
          <TD class=ArticlePane><SPAN id=intelliTXT>
            <DIV id=contentdiv><!-- Article Starts -->
            <UL class=download>
              <LI class=download><A 
              href="http://www.codeproject.com/internet/caaNetAdminclass/NetAdminClass_src.zip">Download 
              source - 7 Kb</A> </LI></UL>
            <UL>
              <LI><B><A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#Overview">Overview</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#TheNetDomainClass">The 
              CNetDomain Class</A></B> 
              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#CNetDomain">CNetDomain</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetDomainName">SetDomainName</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetDomainName">GetDomainName</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetPDC">GetPDC</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#m_strErrorDomain">m_strError</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#TheCNetUsersClass">The 
              CNetUsers Class</A></B> 
              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#CNetUsers">CNetUsers</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#AddUser">Add</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DeleteUser">Delete</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetUser">SetUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetUser">GetUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetPassword">SetPassword</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#ChangePassword">ChangePassword</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#ForceChangePassword">ForceChangePassword</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#IsForcedChangePassword">IsForcedChangePassword</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DisableUser">DisableUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetUserInfo">GetUserInfo</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetFullName">SetFullName</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetFullName">GetFullName</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetComment">SetComment</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetComment">GetComment</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetHomeDirectory">SetHomeDirectory</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetHomeDirectory">GetHomeDirectory</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetHomeDirDrive">SetHomeDirDrive</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetHomeDirDrive">GetHomeDirDrive</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetUserPrivilege">SetUserPrivilege</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetUserPrivilege">GetUserPrivilege</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetOperatorPrivilege">SetOperatorPrivilege</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetOperatorPrivilege">GetOperatorPrivilege</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetNotChangePass">SetNotChangePass</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetNotChangePass">GetNoChangePass</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetWorkStations">SetWorkStations</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetWorkStations">GetWorkStations</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetBadPasswordCount">GetBadPasswordCount</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetLogonCount">GetLogonCount</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetPasswordAge">GetPasswordAge</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#IsUserDisable">IsUserDisable</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#QueryFirstUser">QueryFirstUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#QueryNextUser">QueryNextUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindFirstUser">FindFirstUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindNextUser">FindNextUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#m_strErrorUser">m_strError</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#TheCNetGroupsClass">The 
              CNetGroups Class</A></B> 
              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#CNetGroups">CNetGroups</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetGroup">GetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#AddGroup">Add</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#AddUserGroup">AddUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DeleteUserGroup">DeleteUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DeleteGroup">Delete</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindFirstGroup">FindFirstGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindNextGroup">FindNextGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindFirstUserGroup">FindFirstUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindNexttUserGroup">FindNextUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetGroup">SetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetGroup">GetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#m_strErrorGroup">m_strError</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#TheCNetLocalGroupsClass">The 
              CNetLocalGroups Class</A></B> 
              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#CNetLocalGroups">CNetLocalGroups</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetLocalGroup">GetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#AddLocalGroup">Add</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#AddUserLocalGroup">AddUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DeleteUserLocalGroup">DeleteUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#DeleteLocalGroup">Delete</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindFirstLocalGroup">FindFirstGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindNextLocalGroup">FindNextGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindFirstUserLocalGroup">FindFirstUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#FindNextUserLocalGroup">FindNextUser</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#SetLocalGroup">SetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#GetLocalGroup">GetGroup</A></B> 

              <LI><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#m_strErrorLocalGroup">m_strError</A></B> 

              <LI><B><A 
              href="http://www.codeproject.com/internet/caanetadminclass.asp#Requirements">Requirements</A></B> 
              </LI></UL>
            <P>
            <H2><B><A name=Overview>Overview</A></B></H2>
            <P>I created these classes to make it easy to work with Network 
            Management. For this I created the <CODE>CNetDomain</CODE> class, 
            the <CODE>CNetUsers</CODE> class, The <CODE>CNetGroups</CODE> class 
            and the <CODE>CNetLocalGroups</CODE> class.</P>
            <H2><A name=TheNetDomainClass>The CNetDomain Class</A></H2>
            <H3><A name=CNetDomain>CNetDomain::CNetDomain</A></H3>
            <P>Construct a <B>CNetDomain</B> object.</P><PRE>CNetDomain();
CNetDomain(CString strDomainName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strDomainName</CODE> a string that contains the 
            Domain name. If this parameter is empty, the domain where the 
            machine is logued, is used.</P>
            <P><B>Remarks:</B></P>
            <P>If you use the first construct, the CNetDomain class will work 
            only with the machine that it is running, getting and updating the 
            information on it<BR>
            <P><B>For Example:</B></P><PRE>CNetDomain pDomain(_T(""));            <I><SPAN class=cpp-comment>//This sample use the domain where </SPAN>
is logued the Machine...</I>
CNetDomain pDomain(_T("Developers"));  <I><SPAN class=cpp-comment>//This sample use the Developers </SPAN>
domain...</I>
CNetDomain pDomain();                  <I><SPAN class=cpp-comment>//This sample use the local </SPAN>
machine...</I>
</PRE><BR>
            <P><A name=SetDomainName>
            <H3>CNetDomain::SetDomainName</H3></A>
            <P><B>SetDomainName</B> set the domain name in the CNetDomain 
            object.</P><PRE><SPAN class=cpp-keyword>void</SPAN> SetDomainName(CString strDomainName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strDomainName</CODE> a string that contains the 
            Domain name.</P><BR>
            <P><A name=GetDomainName>
            <H3>CNetDomain::GetDomainName</H3></A>
            <P>The <B>GetDomainName</B> function returns the domain name in the 
            CNetDomain object.</P><PRE>CString GetDomainName();
</PRE><BR>
            <P><A name=GetPDC>
            <H3>CNetDomain::GetPDC</H3></A>
            <P>The <B>GetPDC</B> function returns the name of the Primary Domain 
            Controller (PDC).</P><PRE>DWORD GetPDC(CString&amp; strPDC);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strPDC</CODE> a buffer receives the server 
            name of the Primary Domain Controller (PDC) of the domain.
            <P>
            <P><B>Return Value</B></P>
            <P>Returns <CODE><SPAN class=cpp-literal>0</SPAN></CODE> if was 
            successfully.</P><BR>
            <P><A name=m_strErrorDomain>
            <H3>CNetDomain::m_strError</H3></A>
            <P><B>Remarks:</B></P>
            <P>The <B>m_strError</B> data member Contains the last error 
            string.</P><BR>
            <H2><A name=TheCNetUsersClass>The CNetUsers Class</A></H2>
            <H2></H2><BR>
            <P><A name=CNetUsers>
            <H3>CNetUsers::CNetUsers</H3></A>
            <P></P>
            <P>The <B>CNetUsers</B> .</P><PRE>CNetUsers();
CNetUsers(CNetDomain pDomain);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CNetDomain pDomain</CODE> </P><BR>
            <P><A name=AddUser>
            <H3>CNetUsers::Add</H3></A>
            <P></P>
            <P>The <B>Add</B> function Adds a user.</P><PRE>DWORD Add(CString strUser, CString strPassword);</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUser</CODE> A string containing the User Name to 
            add. </P>
            <P><CODE>CString strPassword</CODE> A string containing the User 
            Password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#Sample01">See 
            Sample</A></P><BR><PRE><A name=Sample01>
CNetDomain pDomain(_T(""));

CNetUsers pUsers(pDomain);

<SPAN class=cpp-keyword>if</SPAN>(pUsers.Add("TestUser", "Newpass") == <SPAN class=cpp-literal>0</SPAN>)
{
	pUsers.DisableUser(FALSE);

	BOOL bRet;

	pUsers.IsUserDisable(bRet);

	<SPAN class=cpp-keyword>if</SPAN>(bRet)
		AfxMessageBox("The user is Disable");
	<SPAN class=cpp-keyword>else</SPAN>
		AfxMessageBox("The user is Enable");
}
</A></PRE>
            <P><A name=DeleteUser>
            <H3>CNetUsers::Delete</H3></A>
            <P></P>
            <P>The <B>Delete</B> function deletes a user.</P><PRE>DWORD Delete(CString strUserName);</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetUser>
            <H3>CNetUsers::SetUser</H3></A>
            <P></P>
            <P>The <B>SetUser</B> function set a user in the CNetUsers 
            objects.</P><PRE><SPAN class=cpp-keyword>void</SPAN> SetUser(CString strUserName);</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P><BR>
            <P><A name=GetUser>
            <H3>CNetUsers::GetUser</H3></A>
            <P></P>
            <P>The <B>GetUser</B> function returns the user name in the 
            CNetUsers objects.</P><PRE>CString GetUser();</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns a string with the user name.</P><BR>
            <P><A name=SetPassword>
            <H3>CNetUsers::SetPassword</H3></A>
            <P></P>
            <P>The <B>SetPassword</B> function sets the user password.</P><PRE>DWORD SetPassword(CString strUserName, CString strPassword);
DWORD SetPassword(CString strPassword);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strPassword</CODE> A string containing the User 
            Password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=ChangePassword>
            <H3>CNetUsers::ChangePassword</H3></A>
            <P></P>
            <P>The <B>ChangePassword</B> function changes the user password.</P><PRE>DWORD ChangePassword(CString strUserName, CString strOldPassword, CString 
strNewPassword);
DWORD ChangePassword(CString strOldPassword, CString strNewPassword);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strOldPassword</CODE> A string containing the old 
            User Password.</P>
            <P><CODE>CString strNewPassword</CODE> A string containing the new 
            User Password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=ForceChangePassword>
            <H3>CNetUsers::ForceChangePassword</H3></A>
            <P></P>
            <P>The <B>ForceChangePassword</B> function forces to the user to 
            change the password in the next logon.</P><PRE>DWORD ForceChangePassword(CString strUserName, BOOL bChangePass = TRUE);
DWORD ForceChangePassword(BOOL bChangePass = TRUE);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL bChangePass</CODE> A pointer to set the change of 
            password. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=IsForcedChangePassword>
            <H3>CNetUsers::IsForcedChangePassword</H3></A>
            <P></P>
            <P>The <B>IsForcedChangePassword</B> function returns if the user 
            must to change the password in the next logon.</P><PRE>DWORD IsForcedChangePassword(CString strUserName, BOOL&amp; bChangePass);
DWORD IsForcedChangePassword(BOOL&amp; bChangePass);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL&amp; bChangePass</CODE> A reference to a variable that 
            returns if the user must to change the password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=DisableUser>
            <H3>CNetUsers::DisableUser</H3></A>
            <P></P>
            <P>The <B>DisableUser</B> function disables the user.</P><PRE>DWORD DisableUser(CString strUserName, BOOL bDisable = TRUE);
DWORD DisableUser(BOOL bDisable = TRUE);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL bDisable</CODE> A pointer to Disable the user. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#Sample01">See 
            Sample</A></P><BR>
            <P><A name=GetUserInfo>
            <H3>CNetUsers::GetUserInfo</H3></A>
            <P></P>
            <P>The <B>GetUserInfo</B> function gets info about the user.</P><PRE>DWORD GetUserInfo(CString strUserName, CNetUserInfo* pUserInfo);
DWORD GetUserInfo(CNetUserInfo* pUserInfo);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CNetUserInfo* pUserInfo</CODE> A pointer to a CNetUserInfo 
            object. </P><PRE><SPAN class=cpp-keyword>struct</SPAN> CNetUserInfo
{
	LPSTR	name;
	LPSTR	password;
	DWORD	password_age;
	DWORD	priv;
	LPSTR	home_dir;
	LPSTR	comment;
	DWORD	flags;
	LPSTR	script_path;
	DWORD	auth_flags;
	LPSTR	full_name;
	LPSTR	usr_comment;
	LPSTR	parms;
	LPSTR	workstations;
	DWORD	last_logon;
	DWORD	last_logoff;
	DWORD	acct_expires;
	DWORD	max_storage;
	DWORD	units_per_week;
	PBYTE	logon_hours;
	DWORD	bad_pw_count;
	DWORD	num_logons;
	LPSTR	logon_server;
	DWORD	country_code;
	DWORD	code_page;
	DWORD	user_id;
	DWORD	primary_group_id;
	LPSTR	profile;
	LPSTR	home_dir_drive;
	BOOL	password_expired;
};
</PRE>
            <P><B>For Example:</B></P><PRE>CNetUserInfo pUserInfo;
pUsers.GetUserInfo("Administrator", &amp;pUserInfo);
</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetFullName>
            <H3>CNetUsers::SetFullName</H3></A>
            <P></P>
            <P>The <B>SetFullName</B> function sets the User Full Name.</P><PRE>DWORD SetFullName(CString strUserName, CString strFullName);
DWORD SetFullName(CString strFullName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strFullName</CODE> A string containing the User 
            Full Name.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetFullName>
            <H3>CNetUsers::GetFullName</H3></A>
            <P></P>
            <P>The <B>GetFullName</B> function gets the User Full Name.</P><PRE>DWORD GetFullName(CString strUserName, CString&amp; strFullName);
DWORD GetFullName(CString&amp; strFullName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString&amp; strFullName</CODE> A reference to a string 
            that returns the User Full Name. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetComment>
            <H3>CNetUsers::SetComment</H3></A>
            <P></P>
            <P>The <B>SetComment</B> function sets the user comment.</P><PRE>DWORD SetComment(CString strUserName, CString strComment);
DWORD SetComment(CString strComment);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strComment</CODE> A string containing the User 
            Comment. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetComment>
            <H3>CNetUsers::GetComment</H3></A>
            <P></P>
            <P>The <B>GetComment</B> function gets the user comment.</P><PRE>DWORD GetComment(CString strUserName, CString&amp; strComment);
DWORD GetComment(CString&amp; strComment);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strComment</CODE> A reference to string that 
            returns the User Comment. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetHomeDirectory>
            <H3>CNetUsers::SetHomeDirectory</H3></A>
            <P></P>
            <P>The <B>SetHomeDirectory</B> function sets the user Home 
            Directory.</P><PRE>DWORD SetHomeDirectory(CString strUserName, CString strHomeDirectory);
DWORD SetHomeDirectory(CString strHomeDirectory);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strHomeDirectory</CODE> A string containing the 
            User Home Directory. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetHomeDirectory>
            <H3>CNetUsers::GetHomeDirectory</H3></A>
            <P></P>
            <P>The <B>GetHomeDirectory</B> function gets the user Home 
            Directory.</P><PRE>DWORD GetHomeDirectory(CString strUserName, CString&amp; strHomeDirectory);
DWORD GetHomeDirectory(CString&amp; strHomeDirectory);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString&amp; strHomeDirectory</CODE> A reference to a 
            string that returns the User Home Directory. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetHomeDirDrive>
            <H3>CNetUsers::SetHomeDirDrive</H3></A>
            <P></P>
            <P>The <B>SetHomeDirDrive</B> function sets the drive letter to 
            assign to the user's home directory for logon purposes.</P><PRE>DWORD SetHomeDirDrive(CString strUserName, CString strHomeDirDrive);
DWORD SetHomeDirDrive(CString strHomeDirDrive);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString strHomeDirDrive</CODE> A string containing the 
            Drive letter. </P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetHomeDirDrive>
            <H3>CNetUsers::GetHomeDirDrive</H3></A>
            <P></P>
            <P>The <B>GetHomeDirDrive</B> function gets the drive letter 
            assigned to the user's home directory for logon purposes.</P><PRE>DWORD GetHomeDirDrive(CString strUserName, CString&amp; strHomeDirectory);
DWORD GetHomeDirDrive(CString&amp; strHomeDirectory);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString&amp; strHomeDirDrive</CODE> A string containing the 
            Drive letter.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetUserPrivilege>
            <H3>CNetUsers::SetUserPrivilege</H3></A>
            <P></P>
            <P>The <B>SetUserPrivilege</B> function sets the user Privilege.</P><PRE>DWORD SetUserPrivilege(CString strUserName, <SPAN class=cpp-keyword>int</SPAN> nPrivilege);
DWORD SetUserPrivilege(<SPAN class=cpp-keyword>int</SPAN> nPrivilege);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>int</SPAN> nPrivilege</CODE> can be 
            one of the following values:</P>
            <P>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUsers::usrPrivGuest</B>&nbsp;&nbsp;&nbsp;Guest<BR>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUsers::usrPrivUser</B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User<BR>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUsers::usrPrivAdmin</B>&nbsp;&nbsp;&nbsp;Administrator</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetUserPrivilege>
            <H3>CNetUsers::GetUserPrivilege</H3></A>
            <P></P>
            <P>The <B>GetUserPrivilege</B> function gets the user Privilege.</P><PRE>DWORD GetUserPrivilege(CString strUserName, <SPAN class=cpp-keyword>int</SPAN>&amp; nPrivilege);
DWORD GetUserPrivilege(<SPAN class=cpp-keyword>int</SPAN>&amp; nPrivilege);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>int</SPAN>&amp; nPrivilege</CODE> A 
            numeric reference that returns the User Privilege. See <A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#SetUserPrivilege">SetUserPrivilege</A></P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetOperatorPrivilege>
            <H3>CNetUsers::SetOperatorPrivilege</H3></A>
            <P></P>
            <P>The <B>SetOperatorPrivilege</B> function specifies the user's 
            operator privileges assigned to a user network account.</P><PRE>DWORD SetOperatorPrivilege(CString strUserName, <SPAN class=cpp-keyword>int</SPAN> nPrivileges);
DWORD SetOperatorPrivilege(<SPAN class=cpp-keyword>int</SPAN> nPrivileges);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>int</SPAN> nPrivileges</CODE> a set 
            of bit flags defining the operator privileges assigned to a user 
            network account.</P>
            <P>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUers::opPrivPrint</B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The 
            print operator privilege is 
            enabled.<BR>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUers::opPrivComm</B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The 
            communications operator privilege is 
            enabled.<BR>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUers::opPrivServer</B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The 
            server operator privilege is 
            enabled.<BR>&nbsp;&nbsp;&nbsp;&nbsp;<B>CNetUers::opPrivAccounts</B>&nbsp;&nbsp;The 
            accounts operator privilege is enabled.</P><BR>
            <P><A name=GetOperatorPrivilege>
            <H3>CNetUsers::GetOperatorPrivilege</H3></A>
            <P></P>
            <P>The <B>GetOperatorPrivilege</B> function retrieves the user's 
            operator privileges assigned to a user network account.</P><PRE>DWORD GetOperatorPrivilege(CString strUserName, <SPAN class=cpp-keyword>int</SPAN>&amp; nPrivileges);
DWORD GetOperatorPrivilege(<SPAN class=cpp-keyword>int</SPAN>&amp; nPrivileges);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>int</SPAN>&amp; nPrivileges</CODE> 
            a <B>numeric</B> reference that returns a set of bit flags defining 
            the operator privileges assigned to a user network account.</P><BR>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetNotChangePass>
            <H3>CNetUsers::SetNotChangePass</H3></A>
            <P></P>
            <P>The <B>SetNotChangePass</B> function sets if the user can change 
            the password.</P><PRE>DWORD SetNotChangePass(CString strUserName, BOOL bPermit = FALSE);
DWORD SetNotChangePass(BOOL bPermit = FALSE);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL bPermit</CODE> A <B>boolean</B> that determines if the 
            user can change the password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetNotChangePass>
            <H3>CNetUsers::GetNotChangePass</H3></A>
            <P></P>
            <P>The <B>GetNotChangePass</B> function gets if the user can change 
            the password.</P><PRE>DWORD GetNotChangePass(CString strUserName, BOOL&amp; bNotPermit);
DWORD GetNotChangePass(BOOL&amp; bNotPermit);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL&amp; bNotPermit</CODE> A <B>boolean</B> reference that 
            determines if the user can change the password.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetWorkStations>
            <H3>CNetUsers::SetWorkStations</H3></A>
            <P></P>
            <P>The <B>SetWorkStations</B> function specifies the names of 
            workstations from which the user can log on.</P><PRE>DWORD SetWorkStations(CString strUserName, CString strWorkStations);
DWORD SetWorkStations(CString strWorkStations);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <DL>
              <P><CODE>CString strWorkStations</CODE> A string that contains the 
              names of workstations from which the user can log on. 
              <DD>As many as eight workstations can be specified; the names must 
              be separated by commas. An empty string indicates that there is no 
              restriction. 
              <P></P></DD></DL>
            <P><B>For Example:</B></P><PRE>	pUsers.SetWorkStations("pc1,pc2,pc3");
	pUsers.SetWorkStations("");
</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetWorkStations>
            <H3>CNetUsers::GetWorkStations</H3></A>
            <P></P>
            <P>The <B>GetWorkStations</B> function gets the names of 
            workstations from which the user can log on.</P><PRE>DWORD GetWorkStations(CString strUserName, CString&amp; strWorkStations);
DWORD GetWorkStations(CString&amp; strWorkStations);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>CString&amp; strWorkStations</CODE> A reference to a string 
            that contains the names of workstations from which the user can log 
            on.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetBadPasswordCount>
            <H3>CNetUsers::GetBadPasswordCount</H3></A>
            <P></P>
            <P>The <B>GetBadPasswordCount</B> function returns the number of 
            times the user tried to log on to this account using an incorrect 
            password.</P><PRE>DWORD GetBadPasswordCount(CString strUserName, <SPAN class=cpp-keyword>long</SPAN>&amp; nCount);
DWORD GetBadPasswordCount(<SPAN class=cpp-keyword>long</SPAN>&amp; nCount);</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>long</SPAN>&amp; nCount</CODE> a 
            reference to a <B>long</B> value that indicates the number of times 
            the user tried to log on.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetLogonCount>
            <H3>CNetUsers::GetLogonCount</H3></A>
            <P></P>
            <P>The <B>GetLogonCount</B> function returns the number of times the 
            user has logged on successfully to this account.</P><PRE>DWORD GetLogonCount(CString strUserName, <SPAN class=cpp-keyword>long</SPAN>&amp; nCount);
DWORD GetLogonCount(<SPAN class=cpp-keyword>long</SPAN>&amp; nCount);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE><SPAN class=cpp-keyword>long</SPAN>&amp; nCount</CODE> a 
            reference to a <B>long</B> value that indicates the number of times 
            the user has logged on successfully.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=GetPasswordAge>
            <H3>CNetUsers::GetPasswordAge</H3></A>
            <P></P>
            <P>The <B>GetPasswordAge</B> function returns the number of seconds 
            that have elapsed since the user password was last changed.</P><PRE>DWORD GetPasswordAge(CString strUserName, DWORD&amp; nSeconds);
DWORD GetPasswordAge(DWORD&amp; nSeconds);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>DWORD&amp; nSeconds</CODE> a reference to a <B>DWORD</B> 
            value that indicates the number of seconds that have elapsed.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=IsUserDisable>
            <H3>CNetUsers::IsUserDisable</H3></A>
            <P></P>
            <P>The <B>IsUserDisable</B> function returns if the user account is 
            disabled.</P><PRE>DWORD IsUserDisable(CString strUserName, BOOL&amp; bDisable);
DWORD IsUserDisable(BOOL&amp; bDisable);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strUserName</CODE> A string specifying the name of 
            the user account.</P>
            <P><CODE>BOOL&amp; bDisable</CODE> a reference to a <B>BOOL</B> 
            value that indicates if the user account is disabled..</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#Sample01">See 
            Sample</A></P><BR>
            <P><A name=QueryFirstUser>
            <H3>CNetUsers::QueryFirstUser</H3></A>
            <P></P>
            <P>The <B>QueryFirstUser</B> function returns user account 
            information.</P><PRE>DWORD QueryFirstUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> a reference to a string 
            that returns the name of the user account.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=QueryNextUser>
            <H3>CNetUsers::QueryNextUser</H3></A>
            <P></P>
            <P>The <B>QueryNextUser</B> function returns user account 
            information.</P><PRE>DWORD QueryNextUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> a reference to a string 
            that returns the name of the user account.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindFirstUser>
            <H3>CNetUsers::FindFirstUser</H3></A>
            <P></P>
            <P>The <B>FindFirstUser</B> function provides information about all 
            user accounts on a server.</P><PRE>DWORD FindFirstUser(CString&amp; strUserName, BOOL&amp; bMoreData);
DWORD FindFirstUser(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> a reference to a string 
            that returns the name of the user account.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#FindUser&amp;GroupSample">See 
            Sample</A></P><BR>
            <P><A name=FindNextUser>
            <H3>CNetUsers::FindNextUser</H3></A>
            <P></P>
            <P>The <B>FindNextUser</B> function provides information about all 
            user accounts on a server.</P><PRE>DWORD FindNextUser(CString&amp; strUserName, BOOL&amp; bMoreData);
DWORD FindNextUser(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> a reference to a string 
            that returns the name of the user account.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if have more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#FindUser&amp;GroupSample">See 
            Sample</A></P><BR><PRE><A name=FindUser&amp;GroupSample>
CNetDomain pDomain(_T(""));

CNetUsers pUsers(pDomain);
CNetGroups pGroups(pDomain);

CString str;
BOOL bMore;

pUsers.FindFirstUser(str, bMore);
<SPAN class=cpp-keyword>while</SPAN>(bMore)
{
	.
	.
	pUsers.FindNextUser(str, bMore);
}

pGroups.FindFirstGroup(str, bMore);
<SPAN class=cpp-keyword>while</SPAN>(bMore)
{
	.
	.
	pGroups.FindNextGroup(str, bMore);
}
</A></PRE><BR>
            <P><A name=m_strErrorUser>
            <H3>CNetUsers::m_strError</H3></A>
            <P><B>Remarks:</B></P>
            <P>The <B>m_strError</B> data member Contains the last error 
            string.</P><BR><BR>
            <H2><A name=TheCNetGroupsClass>The CNetGroups Class</A></H2>
            <H2></H2><BR>
            <P><A name=CNetGroups>
            <H3>CNetGroups::CNetGroups</H3></A>
            <P></P>
            <P>The <B>CNetGroups</B> .</P><PRE>CNetGroups(CNetDomain pDomain);
CNetGroups();
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CNetDomain pDomain</CODE> </P><BR>
            <P><A name=GetGroup>
            <H3>CNetGroups::GetGroup</H3></A>
            <P></P>
            <P>The <B>GetGroup</B> function returns the global group name in the 
            CNetGroups objects.</P><PRE>CString GetGroup();</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns a string with the global group name.</P><BR>
            <P><A name=AddGroup>
            <H3>CNetGroups::Add</H3></A>
            <P></P>
            <P>The <B>Add</B> function creates a global group in the security 
            database.</P><PRE>DWORD Add(CString strGroupName, CString strComments = _T(""));
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group to add.</P>
            <P><CODE>CString strComments</CODE> a string specifying a comment 
            associated with the global group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=AddUserGroup>
            <H3>CNetGroups::AddUser</H3></A>
            <P></P>
            <P>The <B>AddUser</B> function adds membership of one existing user 
            accounts to an existing global group.</P><PRE>DWORD AddUser(CString strGroupName, CString strUserName);
DWORD AddUser(CString strUserName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group.</P>
            <P><CODE>CString strUserName</CODE> a string specifying the name of 
            the user to be given membership in the global group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=DeleteUserGroup>
            <H3>CNetGroups::DeleteUser</H3></A>
            <P></P>
            <P>The <B>DeleteUser</B> function removes a user from a particular 
            global group in the security database.</P><PRE>DWORD DeleteUser(CString strGroupName, CString strUserName);
DWORD DeleteUser(CString strUserName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group.</P>
            <P><CODE>CString strUserName</CODE> a string specifying the name of 
            the user to remove from the global group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=DeleteGroup>
            <H3>CNetGroups::Delete</H3></A>
            <P></P>
            <P>The <B>Delete</B> function removes a global group from the 
            security database.</P><PRE>DWORD Delete();
DWORD Delete(CString strGroupName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group to remove.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindFirstGroup>
            <H3>CNetGroups::FindFirstGroup</H3></A>
            <P></P>
            <P>The <B>FindFirstGroup</B> function retrieves information about 
            each global group in the security database.</P><PRE>DWORD FindFirstGroup(CString&amp; strGroupName, BOOL&amp; bMoreData);
DWORD FindFirstGroup(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strGroupName</CODE> A reference to a string 
            specifying the name of the global group that was founded.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P>
            <P><A 
            href="http://www.codeproject.com/internet/caanetadminclass.asp#FindUser&amp;GroupSample">See 
            Sample</A></P><BR>
            <P><A name=FindNextGroup>
            <H3>CNetGroups::FindNextGroup</H3></A>
            <P></P>
            <P>The <B>FindNextGroup</B> function retrieves information about 
            each global group in the security database.</P><PRE>DWORD FindNextGroup(CString&amp; strGroupName, BOOL&amp; bMoreData);
DWORD FindNextGroup(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strGroupName</CODE> A reference to a string 
            specifying the name of the global group that was founded.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindFirstUserGroup>
            <H3>CNetGroups::FindFirstUser</H3></A>
            <P></P>
            <P>The <B>FindFirstUser</B> function retrieves information about 
            each user in a global group account.</P><PRE>DWORD FindFirstUser(CString strGroupName, CString&amp; strUserName, BOOL&amp; 
bMoreData);
DWORD FindFirstUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group where look for.</P>
            <P><CODE>CString&amp; strUserName</CODE> A reference to a string 
            returns the user name.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindNextUserGroup>
            <H3>CNetGroups::FindNextUser</H3></A>
            <P></P>
            <P>The <B>FindNextUser</B> function retrieves information about each 
            user in a global group account.</P><PRE>DWORD FindNextUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> A reference to a string 
            returns the user name.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetGroup>
            <H3>CNetGroups::SetGroup</H3></A>
            <P></P>
            <P>The <B>SetGroup</B> sets a current global group account.</P><PRE><SPAN class=cpp-keyword>void</SPAN> SetGroup(CString strGroupName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strGroupName</CODE> A string specifying the name of 
            the global group account.</P><BR>
            <P><A name=GetGroup>
            <H3>CNetGroups::GetGroup</H3></A>
            <P></P>
            <P>The <B>GetGroup</B> returns the name of the current global group 
            account.</P><PRE>CString GetGroup();
</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns the global group account name.</P><BR>
            <P><A name=m_strErrorGroup>
            <H3>CNetGroups::m_strError</H3></A>
            <P><B>Remarks:</B></P>
            <P>The <B>m_strError</B> data member Contains the last error 
            string.</P><BR>
            <H2><A name=TheCNetLocalGroupsClass>The CNetLocalGroups 
            Class</A></H2>
            <H2></H2><BR>
            <P><A name=CNetLocalGroups>
            <H3>CNetLocalGroups::CNetLocalGroups</H3></A>
            <P></P>
            <P>The <B>CNetLocalGroups</B> .</P><PRE>CNetLocalGroups(CNetDomain pDomain);
CNetLocalGroups();
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CNetDomain pDomain</CODE> </P><BR>
            <P><A name=GetLocalGroup>
            <H3>CNetLocalGroups::GetGroup</H3></A>
            <P></P>
            <P>The <B>GetGroup</B> function returns the local group name in the 
            CNetLocalGroups objects.</P><PRE>CString GetGroup();</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns a string with the local group name.</P><BR>
            <P><A name=AddLocalGroup>
            <H3>CNetLocalGroups::Add</H3></A>
            <P></P>
            <P>The <B>Add</B> function creates a local group in the security 
            database.</P><PRE>DWORD Add(CString strLocalGroupName, CString strComments = _T(""));
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group to add.</P>
            <P><CODE>CString strComments</CODE> a string specifying a comment 
            associated with the local group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=AddUserLocalGroup>
            <H3>CNetLocalGroups::AddUser</H3></A>
            <P></P>
            <P>The <B>AddUser</B> function adds membership of one existing user 
            accounts to an existing local group.</P><PRE>DWORD AddUser(CString strLocalGroupName, CString strUserName);
DWORD AddUser(CString strUserName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group to add.</P>
            <P><CODE>CString strUserName</CODE> a string specifying the name of 
            the user to be given membership in the local group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=DeleteUserLocalGroup>
            <H3>CNetLocalGroups::DeleteUser</H3></A>
            <P></P>
            <P>The <B>DeleteUser</B> function removes a user from a local 
            group.</P><PRE>DWORD DeleteUser(CString strLocalGroupName, CString strUserName);
DWORD DeleteUser(CString strUserName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group.</P>
            <P><CODE>CString strUserName</CODE> a string specifying the name of 
            the user to remove from the local group.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=DeleteLocalGroup>
            <H3>CNetLocalGroups::Delete</H3></A>
            <P></P>
            <P>The <B>Delete</B> function removes a local group from the 
            security database.</P><PRE>DWORD Delete();
DWORD Delete(CString strLocalGroupName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group to remove.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindFirstLocalGroup>
            <H3>CNetLocalGroups::FindFirstGroup</H3></A>
            <P></P>
            <P>The <B>FindFirstGroup</B> function retrieves information about 
            each local group in the security database.</P><PRE>DWORD FindFirstGroup(CString&amp; strLocalGroupName, BOOL&amp; bMoreData);
DWORD FindFirstGroup(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group that was founded.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindNextLocalGroup>
            <H3>CNetLocalGroups::FindNextGroup</H3></A>
            <P></P>
            <P>The <B>FindNextGroup</B> function retrieves information about 
            each local group in the security database.</P><PRE>DWORD FindNextGroup(CString&amp; strLocalGroupName, BOOL&amp; bMoreData);
DWORD FindNextGroup(BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group that was founded.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindFirstUserLocalGroup>
            <H3>CNetLocalGroups::FindFirstUser</H3></A>
            <P></P>
            <P>The <B>FindFirstUser</B> function retrieves information about 
            each user in a local group account.</P><PRE>DWORD FindFirstUser(CString strLocalGroupName, CString&amp; strUserName, BOOL&amp; 
bMoreData);
DWORD FindFirstUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group prefixed by the domain name and the "\" 
            separator character. For Example: 
            <CODE>DEVELOPER\Administrator</CODE></P>
            <P><CODE>CString&amp; strUserName</CODE> A reference to a string 
            returns the user name.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=FindNextUserLocalGroup>
            <H3>CNetLocalGroups::FindNextUser</H3></A>
            <P></P>
            <P>The <B>FindNextUser</B> function retrieves information about each 
            user in a local group account.</P><PRE>DWORD FindNextUser(CString&amp; strUserName, BOOL&amp; bMoreData);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString&amp; strUserName</CODE> A reference to a string 
            returns the user name prefixed by the domain name and the "\" 
            separator character.</P>
            <P><CODE>BOOL&amp; bMoreData</CODE> a reference to a <B>BOOL</B> 
            value that indicates if has more data to get.</P>
            <P><B>Return Value</B></P>
            <P>The function returns <CODE><SPAN 
            class=cpp-literal>0</SPAN></CODE> if was succesfully.</P><BR>
            <P><A name=SetLocalGroup>
            <H3>CNetLocalGroups::SetGroup</H3></A>
            <P></P>
            <P>The <B>SetGroup</B> sets a local group account.</P><PRE><SPAN class=cpp-keyword>void</SPAN> SetGroup(CString strLocalGroupName);
</PRE>
            <P><B>Parameters</B></P>
            <P><CODE>CString strLocalGroupName</CODE> A string specifying the 
            name of the local group.</P><BR>
            <P><A name=GetLocalGroup>
            <H3>CNetLocalGroups::GetGroup</H3></A>
            <P></P>
            <P>The <B>GetGroup</B> returns the name of the current local group 
            account.</P><PRE>CString GetGroup();
</PRE>
            <P><B>Return Value</B></P>
            <P>The function returns the local group account name.</P><BR>
            <P><A name=m_strErrorLocalGroup>
            <H3>CNetLocalGroups::m_strError</H3></A>
            <P><B>Remarks:</B></P>
            <P>The <B>m_strError</B> data member Contains the last error 
            string.</P><BR><BR>
            <P><A name=Requirements>
            <H2>Requirements </H2></A>
            <P></P>
            <P><B>&nbsp;&nbsp;Windows NT/2000: </B>Requires Windows NT 3.1 or 
            later.<BR><B>&nbsp;&nbsp;Windows 95/98: 
            </B>Unsupported.<BR><B>&nbsp;&nbsp;Library: </B>Use 
Netapi32.lib.</P>
            <P>Carlos A. Antollini.</P>
            <H2>Updates</H2>
            <P>28 Nov 2001&nbsp;&nbsp;&nbsp; Version 1.0 Released.</P>
            <P>03 Dec 2001&nbsp;&nbsp;&nbsp; Version 1.08</P>
            <UL>
              <LI>Added the following functions:</LI></UL>
            <UL>CNetGroups::FindFirstUser, CNetGroups::FindNextUser, 
              CNetLocalGroups::FindFirstUser, CNetLocalGroups::FindNextUser</UL>
            <P>16 Jan 2002&nbsp;&nbsp;&nbsp; Version 1.10</P>
            <UL>
              <LI>Added the following functions:</LI></UL>
            <UL>CNetUsers::GetHomeDirDrive, CNetUsers::SetHomeDirDrive</UL>
            <H2>Special thanks </H2>
            <P>These Net Classes received many suggestions from the 
            users.<BR>Thank to All for your collaboration and Ideas.</P>
            <P>Ingo Stapel<BR>Spiros 
Pra</P></DIV></SPAN></TR></TBODY></TABLE></TR></TBODY></TABLE></BODY></HTML>
