<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>