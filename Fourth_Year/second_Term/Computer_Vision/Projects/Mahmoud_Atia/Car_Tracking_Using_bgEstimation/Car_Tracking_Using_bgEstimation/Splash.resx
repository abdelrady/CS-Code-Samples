<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>